<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>2022-8-21 blog更新日志</title>
    <url>/2022/08/21/2022-08-21-blogupdate/</url>
    <content><![CDATA[<h1 id="更新日志"><a href="#更新日志" class="headerlink" title="更新日志"></a>更新日志</h1><ul>
<li>update hexo-theme-next 7.8.0 → 8.12.3</li>
<li>add hexo-next-twikoo</li>
</ul>
<h4 id="hexo-tag-mmedia-test"><a href="#hexo-tag-mmedia-test" class="headerlink" title="hexo-tag-mmedia test"></a>hexo-tag-mmedia test</h4><div id="mmedia-dYMYBRBWTcupjTkd" style="width:100%;height:650px;max-width:1200px;center"></div><script> var dYMYBRBWTcupjTkd_options = JSON.parse('{\"style\":\"width:100%;height:650px;max-width:1200px;center\",\"url\":\"https://dlink.host/sharepoint/aHR0cHM6Ly9zYWludDEzMzctbXkuc2hhcmVwb2ludC5jb20vOnY6L2cvcGVyc29uYWwvZHV6aHVvX3NhaW50MTMzN19vbm1pY3Jvc29mdF9jb20vRWFpY2hQZ21JaEZIaEVLRVpFdUN3OVlCTnpxVV9xUnkxYm1GR2prR20yZDVnUT9lPWJRbkR4bA.mp4\",\"autoSize\":true,\"autoMini\":false,\"fullscreen\":true,\"fullscreenWeb\":true}'); dYMYBRBWTcupjTkd_options.container = "#mmedia-dYMYBRBWTcupjTkd"; HEXO_MMEDIA_DATA.js.push("https://cdn.jsdelivr.net/npm/artplayer/dist/artplayer.js");HEXO_MMEDIA_DATA.artPlayerData.push(dYMYBRBWTcupjTkd_options); </script>

<div id="mmedia-FprFXtBxkyIOCPLL"></div><script> var FprFXtBxkyIOCPLL_options = JSON.parse('{\"audio\":[{\"name\":\"Sweety - 樱花草\",\"url\":\"https://dlink.host/sharepoint/aHR0cHM6Ly9zYWludDEzMzctbXkuc2hhcmVwb2ludC5jb20vOnU6L2cvcGVyc29uYWwvZHV6aHVvX3NhaW50MTMzN19vbm1pY3Jvc29mdF9jb20vRWNCZGxoUDdxQVJIaVBzY2NvSXFndm9CYURseDZhWVlYNUpsZHc0b1FlckhVZz9lPTJrSmhmcQ.mp3\"}]}');
    FprFXtBxkyIOCPLL_options.container = document.getElementById("mmedia-FprFXtBxkyIOCPLL");HEXO_MMEDIA_DATA.css.push("https://cdn.jsdelivr.net/npm/aplayer@1/dist/APlayer.min.css");HEXO_MMEDIA_DATA.js.push("https://cdn.jsdelivr.net/npm/aplayer@1/dist/APlayer.min.js");HEXO_MMEDIA_DATA.aplayerData.push(FprFXtBxkyIOCPLL_options); </script>

<span id="more"></span>
<h4 id="涩图赠送"><a href="#涩图赠送" class="headerlink" title="涩图赠送"></a>涩图赠送</h4><p><img src="https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting/img/2020-09-12%20094740/2022/08/21/22-21-42.jpg"><br><img src="https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting/img/%20-3-/2022/08/21/22-12-45.jpg"></p>
]]></content>
      <tags>
        <tag>update</tag>
        <tag>hexo</tag>
        <tag>test</tag>
      </tags>
  </entry>
  <entry>
    <title>2022-8-23 dota2单排 人马和他的野怪兄弟</title>
    <url>/2022/08/23/2022-8-23dota2%E5%8D%95%E6%8E%92funnyclips/</url>
    <content><![CDATA[<div id="mmedia-RWgqxpoFQDBWLclf" style="width:100%;height:650px;max-width:1200px;center"></div><script> var RWgqxpoFQDBWLclf_options = JSON.parse('{\"style\":\"width:100%;height:650px;max-width:1200px;center\",\"url\":\"https://dlink.host/sharepoint/aHR0cHM6Ly9zYWludDEzMzctbXkuc2hhcmVwb2ludC5jb20vOnY6L2cvcGVyc29uYWwvZHV6aHVvX3NhaW50MTMzN19vbm1pY3Jvc29mdF9jb20vRVk2bUthczJ5dDVDZ280c21kdjJXa01CeDlpZWlWNjZYWDhYU2VLeGtXSkFrUT9lPWc1RmpZYQ.mp4\",\"autoSize\":true,\"autoMini\":false,\"fullscreen\":true,\"fullscreenWeb\":true}'); RWgqxpoFQDBWLclf_options.container = "#mmedia-RWgqxpoFQDBWLclf"; HEXO_MMEDIA_DATA.js.push("https://cdn.jsdelivr.net/npm/artplayer/dist/artplayer.js");HEXO_MMEDIA_DATA.artPlayerData.push(RWgqxpoFQDBWLclf_options); </script>
]]></content>
      <tags>
        <tag>dota2</tag>
        <tag>dota</tag>
      </tags>
  </entry>
  <entry>
    <title>在OpenWRT上使用AdGuard Home的DNS服务代替dnsmasq</title>
    <url>/2024/02/02/AdGuardHome-in-OpenWRT/</url>
    <content><![CDATA[<h2 id="当前环境"><a href="#当前环境" class="headerlink" title="当前环境"></a>当前环境</h2><p><img src="https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting@master/img/Screenshot_20240202_112818.png"></p>
<h2 id="Step1-从仓库下载二进制文件并解压"><a href="#Step1-从仓库下载二进制文件并解压" class="headerlink" title="Step1 从仓库下载二进制文件并解压"></a>Step1 从仓库下载二进制文件并解压</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/bin</span><br><span class="line"><span class="comment">## 没有curl可以使用opkg安装或者用wget替代</span></span><br><span class="line">curl -O https://github.com/AdguardTeam/AdGuardHome/releases/download/v0.107.42/AdGuardHome_linux_arm64.tar.gz</span><br><span class="line">tar -zxvf ./AdGuardHome_linux_arm64.tar.gz</span><br><span class="line"><span class="built_in">rm</span> -rf ./AdGuardHome_linux_arm64.tar.gz</span><br><span class="line"><span class="built_in">cd</span> ./AdGuardHome</span><br></pre></td></tr></table></figure>

<h2 id="Step2-启动AdGuardHome并进入后台"><a href="#Step2-启动AdGuardHome并进入后台" class="headerlink" title="Step2 启动AdGuardHome并进入后台"></a>Step2 启动AdGuardHome并进入后台</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./AdGuardHome</span><br></pre></td></tr></table></figure>

<p>出现类似下面的提示就代表AdGuardHome已经启动</p>
<p><img src="https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting@master/img/Screenshot_20240202_152653.png"></p>
<p>这样大概就是成功了，现在我们的AdGuardHome还不能开机运行，需要配置守护进程。</p>
<h2 id="Step3-配置开机启动"><a href="#Step3-配置开机启动" class="headerlink" title="Step3 配置开机启动"></a>Step3 配置开机启动</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /usr/bin/AdGuardHome</span><br><span class="line">./AdGuardHome -s install</span><br></pre></td></tr></table></figure>

<p>这样procd脚本就会被写入到&#x2F;etc&#x2F;init.d文件夹里面 </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@OpenWrt:/usr/bin/AdGuardHome<span class="comment"># cat /etc/init.d/AdGuardHome </span></span><br><span class="line"><span class="comment">#!/bin/sh /etc/rc.common</span></span><br><span class="line"></span><br><span class="line">USE_PROCD=1</span><br><span class="line"></span><br><span class="line">START=95</span><br><span class="line">STOP=01</span><br><span class="line"></span><br><span class="line">cmd=<span class="string">&quot;/usr/bin/AdGuardHome/AdGuardHome &quot;</span>-s<span class="string">&quot; &quot;</span>run<span class="string">&quot;&quot;</span></span><br><span class="line">name=<span class="string">&quot;AdGuardHome&quot;</span></span><br><span class="line">pid_file=<span class="string">&quot;/var/run/<span class="variable">$&#123;name&#125;</span>.pid&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">start_service</span></span>() &#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Starting <span class="variable">$&#123;name&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line">    procd_open_instance</span><br><span class="line">    procd_set_param <span class="built_in">command</span> <span class="variable">$&#123;cmd&#125;</span></span><br><span class="line">    procd_set_param respawn             <span class="comment"># respawn automatically if something died</span></span><br><span class="line">    procd_set_param stdout 1            <span class="comment"># forward stdout of the command to logd</span></span><br><span class="line">    procd_set_param stderr 1            <span class="comment"># same for stderr</span></span><br><span class="line">    procd_set_param pidfile <span class="variable">$&#123;pid_file&#125;</span> <span class="comment"># write a pid file on instance start and remove it on stop</span></span><br><span class="line"></span><br><span class="line">    procd_close_instance</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;name&#125;</span> has been started&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">stop_service</span></span>() &#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Stopping <span class="variable">$&#123;name&#125;</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">EXTRA_COMMANDS=<span class="string">&quot;status&quot;</span></span><br><span class="line">EXTRA_HELP=<span class="string">&quot;        status  Print the service status&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">get_pid</span></span>() &#123;</span><br><span class="line">    <span class="built_in">cat</span> <span class="string">&quot;<span class="variable">$&#123;pid_file&#125;</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">is_running</span></span>() &#123;</span><br><span class="line">    [ -f <span class="string">&quot;<span class="variable">$&#123;pid_file&#125;</span>&quot;</span> ] &amp;&amp; ps | grep -v grep | grep $(get_pid) &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">status</span></span>() &#123;</span><br><span class="line">    <span class="keyword">if</span> is_running; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;Running&quot;</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;Stopped&quot;</span></span><br><span class="line">        <span class="built_in">exit</span> 1</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line">root@OpenWrt:/usr/bin/AdGuardHome<span class="comment"># </span></span><br></pre></td></tr></table></figure>

<h2 id="Step4-修改53端口的服务由AdGuardHome提供"><a href="#Step4-修改53端口的服务由AdGuardHome提供" class="headerlink" title="Step4 修改53端口的服务由AdGuardHome提供"></a>Step4 修改53端口的服务由AdGuardHome提供</h2><p>在 <code>/etc/config/dhcp</code>中找到<code>option port &#39;53&#39;</code> 并将53改为0</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">service dnsmasq restart</span><br><span class="line"><span class="comment">## 这样我们就关闭了dnsmasq提供的dns服务</span></span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting@master/img/Screenshot_20240202_160901.png"></p>
<p>现在我们修改AdGuardHome提供dns服务的端口</p>
<p>打开 &#x2F;usr&#x2F;bin&#x2F;AdGuardHome&#x2F;AdGuardHome.yaml （我们之前解压二进制文件的目录） 并替换端口为53</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">service AdGuardHome restart</span><br><span class="line"><span class="comment">## 重新启动后查看端口情况</span></span><br><span class="line">netstat -tunlp | grep 53</span><br></pre></td></tr></table></figure>



<p><img src="https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting@master/img/Screenshot_20240202_161643.png"></p>
<h2 id="附"><a href="#附" class="headerlink" title="附"></a>附</h2><p><a href="https://dns.icoa.cn/">https://dns.icoa.cn/</a> 可用的上游dns列表</p>
]]></content>
  </entry>
  <entry>
    <title>csgo练习服务器</title>
    <url>/2022/02/18/CSGO%E7%BB%83%E4%B9%A0%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    <content><![CDATA[<h1 id="CSGO练习服务器"><a href="#CSGO练习服务器" class="headerlink" title="CSGO练习服务器"></a>CSGO练习服务器</h1><h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><ul>
<li><strong>20220528</strong> 更新最新贴纸 包括2022 安普卫特major</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting/img/20211212233026_1.jpg"></p>
<h2 id="如何连接服务器"><a href="#如何连接服务器" class="headerlink" title="如何连接服务器"></a>如何连接服务器</h2><ul>
<li><a href="steam://connect/csgo.saint1337.top">启动csgo并连接练习服务器</a></li>
</ul>
<p>​       <strong>控制台输入:</strong> <code>connect csgo.saint1337.top</code></p>
<ul>
<li><a href="ts3server://ts3.saint1337.top/">启动teamspeak并连接服务器</a></li>
</ul>
<p>​       <strong>teamspeak服务器连接地址:</strong> <code>ts3.saint1337.top</code></p>
<h2 id="服务器有的功能"><a href="#服务器有的功能" class="headerlink" title="服务器有的功能"></a>服务器有的功能</h2><ul>
<li><p><strong>跑图插件  默认自动开启</strong></p>
<p><a href="https://duzhuoshanwai.github.io/2022/02/18/csgo-practice-mode%20%E6%96%87%E6%A1%A3/">推荐参考文档1</a></p>
<p><a href="https://duzhuoshanwai.github.io/2022/02/18/simple-practicemode%20%E6%96%87%E6%A1%A3/">推荐参考文档2</a></p>
<p><a href="https://github.com/splewis/csgo-practice-mode">https://github.com/splewis/csgo-practice-mode</a></p>
<p><a href="https://github.com/hx-w/simple-practicemode">https://github.com/hx-w/simple-practicemode</a></p>
</li>
<li><p><strong>学习道具插件</strong>  <strong><del>时不时会抽风</del></strong></p>
</li>
</ul>
<p>​       <a href="https://docs.csgowiki.top/csgowiki-pack/index/#csgowiki-pack">https://docs.csgowiki.top/csgowiki-pack/index/#csgowiki-pack</a></p>
<p>​       <a href="https://www.mycsgolab.com/![](https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting/img/20220218164354.png)">https://www.mycsgolab.com/![](https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting/img/20220218164354.png)</a></p>
<ul>
<li><p><strong>皮肤手套插件</strong></p>
<p><code>!ws</code> <code>!knife</code> <code>!gloves</code></p>
<p>我是懒狗 插件更新不及时很正常8</p>
</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>CVE-2024-6387漏洞Debian修复</title>
    <url>/2024/07/04/CVE-2024-6387%E6%BC%8F%E6%B4%9EDebian%E4%BF%AE%E5%A4%8D/</url>
    <content><![CDATA[<h2 id="喜报-openssh远程代码执行漏洞CVE-2024-6387-Debian发行版已经全部修补"><a href="#喜报-openssh远程代码执行漏洞CVE-2024-6387-Debian发行版已经全部修补" class="headerlink" title="喜报 openssh远程代码执行漏洞CVE-2024-6387 Debian发行版已经全部修补"></a>喜报 openssh远程代码执行漏洞CVE-2024-6387 Debian发行版已经全部修补</h2><p><img src="https://s2.loli.net/2024/07/04/FaSGIRocklTBh8L.png" alt="Screenshot_20240704_081856.png"></p>
<p><strong>注意：</strong> 有些使用DD重装脚本安装的Debian bookworm 没有开启 <code>bookworm-security</code>源，需要手动开启。</p>
<ul>
<li>[2024-07-03] <a href="https://tracker.debian.org/news/1541564/openssh-197p1-7-migrated-to-testing/">openssh 1:9.7p1-7 MIGRATED to testing </a>(Debian testing watch)</li>
<li>[2024-07-01] <a href="https://tracker.debian.org/news/1541227/accepted-openssh-192p1-2deb12u3-source-into-proposed-updates/">Accepted openssh 1:9.2p1-2+deb12u3 (source) into proposed-updates </a>(Debian FTP Masters) (signed by: Salvatore Bonaccorso)</li>
<li>[2024-07-01] <a href="https://tracker.debian.org/news/1541146/accepted-openssh-197p1-7-source-into-unstable/">Accepted openssh 1:9.7p1-7 (source) into unstable </a>(Colin Watson)</li>
<li>[2024-07-01] <a href="https://tracker.debian.org/news/1541136/accepted-openssh-192p1-2deb12u3-source-into-stable-security/">Accepted openssh 1:9.2p1-2+deb12u3 (source) into stable-security </a>(Debian FTP Masters) (signed by: Salvatore Bonaccorso)</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>ClashX Pro + UnblockNeteaseMusic</title>
    <url>/2023/02/22/ClashX+UnblockNeteaseMusic/</url>
    <content><![CDATA[<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><ul>
<li><p><a href="https://github.com/UnblockNeteaseMusic/server">UnblockNeteaseMusic&#x2F;server</a></p>
</li>
<li><p><a href="https://install.appcenter.ms/users/clashx/apps/clashx-pro/distribution_groups/public">ClashX Pro</a></p>
</li>
<li><p><a href="https://d1.music.126.net/dmusic/NeteaseMusic_2.3.12_956_web.dmg">网易云音乐 2.3.12_956</a></p>
</li>
<li><p>安装证书 <a href="https://raw.githubusercontent.com/nondanee/UnblockNeteaseMusic/master/ca.crt">ca.crt</a></p>
</li>
</ul>
<h2 id="ClashX-Pro-设置并添加规则"><a href="#ClashX-Pro-设置并添加规则" class="headerlink" title="ClashX Pro 设置并添加规则"></a>ClashX Pro 设置并添加规则</h2><ul>
<li><p>开启 Enhanced mode</p>
<ul>
<li>Enhanced mode Config → DNS mode → Mapping</li>
</ul>
</li>
<li><p>编辑 config.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">proxies:</span></span><br><span class="line">  <span class="bullet">-</span> &#123; <span class="attr">name:</span> <span class="string">NeteaseMusicUnlock</span>, <span class="attr">type:</span> <span class="string">http</span>, <span class="attr">server:</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.2</span>, <span class="attr">port:</span> <span class="number">8080</span> &#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">proxy-groups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">NeteaseMusic</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">select</span></span><br><span class="line"><span class="attr">proxies:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">DIRECT</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">NeteaseMusicUnlock</span></span><br></pre></td></tr></table></figure>

<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">DOMAIN-SUFFIX,music.163.com,NeteaseMusic</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">DOMAIN-SUFFIX,music.126.net,NeteaseMusic</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">DOMAIN-SUFFIX,163yun.com,NeteaseMusic</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">DOMAIN-SUFFIX,api.iplay.163.com,NeteaseMusic</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">DOMAIN-SUFFIX,apm.music.163.com,NeteaseMusic</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">DOMAIN-SUFFIX,apm3.music.163.com,NeteaseMusic</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">DOMAIN-SUFFIX,interface.music.163.com,NeteaseMusic</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">DOMAIN-SUFFIX,interface3.music.163.com,NeteaseMusic</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">DOMAIN-SUFFIX,mam.netease.com,NeteaseMusic</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">DOMAIN-SUFFIX,hz.netease.com,NeteaseMusic</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">IP-CIDR,39.105.63.80/32,NeteaseMusic</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">IP-CIDR,45.254.48.1/32,NeteaseMusic</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">IP-CIDR,47.100.127.239/32,NeteaseMusic</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">IP-CIDR,59.111.21.14/31,NeteaseMusic</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">IP-CIDR,59.111.179.214/32,NeteaseMusic</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">IP-CIDR,59.111.181.38/32,NeteaseMusic</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">IP-CIDR,59.111.181.60/32,NeteaseMusic</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">IP-CIDR,59.111.160.195/32,NeteaseMusic</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">IP-CIDR,59.111.160.197/32,NeteaseMusic</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">IP-CIDR,59.111.181.35/32,NeteaseMusic</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">IP-CIDR,59.111.238.29/32,NeteaseMusic</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">IP-CIDR,101.71.154.241/32,NeteaseMusic</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">IP-CIDR,103.126.92.132/32,NeteaseMusic</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">IP-CIDR,103.126.92.133/32,NeteaseMusic</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">IP-CIDR,112.13.119.17/32,NeteaseMusic</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">IP-CIDR,112.13.122.1/32,NeteaseMusic</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">IP-CIDR,115.236.118.33/32,NeteaseMusic</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">IP-CIDR,115.236.121.1/32,NeteaseMusic</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">IP-CIDR,118.24.63.156/32,NeteaseMusic</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">IP-CIDR,193.112.159.225/32,NeteaseMusic</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">IP-CIDR,223.252.199.66/32,NeteaseMusic</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">IP-CIDR,223.252.199.67/32,NeteaseMusic</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="Reload-Config-And-Enjoy"><a href="#Reload-Config-And-Enjoy" class="headerlink" title="Reload Config And Enjoy !"></a>Reload Config And Enjoy !</h2><p><img src="https://raw.githubusercontent.com/duzhuoshanwai/Image-Hosting/master/img/202302222256214.png"></p>
]]></content>
  </entry>
  <entry>
    <title>GNU/Linux 使用 CLi 连接无线网</title>
    <url>/2023/10/30/Debian-wifi/</url>
    <content><![CDATA[<h2 id="查看当前无线网卡并启用"><a href="#查看当前无线网卡并启用" class="headerlink" title="查看当前无线网卡并启用"></a>查看当前无线网卡并启用</h2><p><code>sudo iwconfig</code> 查看得到我当前的无线网卡名称是 <code>wlan0</code></p>
<p><img src="https://s2.loli.net/2023/10/30/9c68AOBhnV1jCRm.png" alt="Screenshot_20231030_170101.png"></p>
<p><code>sudo ifconfig wlan0 up</code> 启用无线网卡</p>
<p><img src="https://s2.loli.net/2023/10/30/dLewbAYZVifng18.png" alt="Screenshot_20231030_171338_看图王1.png"></p>
<h2 id="扫描可用网络"><a href="#扫描可用网络" class="headerlink" title="扫描可用网络"></a>扫描可用网络</h2><p><code>sudo iwlist wlan0 scan</code> 查找当前可用网络 结果过多的情况下使用  <code>grep</code> 找出 SSID</p>
<p><img src="https://s2.loli.net/2023/10/30/nmWhKYZrxMzvk1V.png" alt="Screenshot_20231030_171426_看图王.png"></p>
<h2 id="使用-wpa-supplicant-连接网络"><a href="#使用-wpa-supplicant-连接网络" class="headerlink" title="使用 wpa_supplicant 连接网络"></a>使用 <code>wpa_supplicant</code> 连接网络</h2><p><code>sudo wpa_passphrase &#123;SSID&#125; &#123;PASSWD&#125; &gt; sudo /etc/wpa_supplicant/&#123;SSID&#125;.conf</code></p>
<p>其中 <code>/etc/wpa_supplicant/</code> 是默认存放配置文件的目录</p>
<p><img src="https://s2.loli.net/2023/10/30/gbX5Z9GdVLuptya.png" alt="Screenshot_20231030_172316.png"></p>
<p><code> sudo wpa_supplicant -i wlan0 -c /etc/wpa_supplicant/&#123;SSID&#125;.conf -B</code> 使用我们刚才保存的配置文件和 <code>wlan0</code> 网卡连接网络</p>
<p><img src="https://s2.loli.net/2023/10/30/d9ZqWeyJ3pzGSAg.png" alt="Screenshot_20231030_172503_看图王.png"></p>
<p><strong>到这一步我们还不能上网</strong> 需要使用 <code>sudo dhclient wlan0</code> 获取到 ip 之后才能上网</p>
]]></content>
  </entry>
  <entry>
    <title>MongoDB中实现查询结果分页</title>
    <url>/2024/11/25/MongoDB%E4%B8%AD%E5%AE%9E%E7%8E%B0%E6%9F%A5%E8%AF%A2%E7%BB%93%E6%9E%9C%E5%88%86%E9%A1%B5/</url>
    <content><![CDATA[<h2 id="分页？"><a href="#分页？" class="headerlink" title="分页？"></a>分页？</h2><ul>
<li>显著提高查询速度，每次只处理一小部分数据减少了数据库的负担。</li>
<li>简化数据展示，能让用户方便地浏览和查找所需信息。</li>
</ul>
<h2 id="用户界面展示"><a href="#用户界面展示" class="headerlink" title="用户界面展示"></a>用户界面展示</h2><p>使用 HTTP GET 方法来获取分页的数据，其中page为数据页索引size为数据页大小：</p>
<p><code>/products?page=&#123;page&#125;&amp;size=&#123;size&#125;</code></p>
<p>以表 products 为例</p>
<p>其中返回的数据的应该包含：全部商品数量，总页数，当前是第几页，当前页的全部产品数据。</p>
<h2 id="服务端与数据库交互逻辑"><a href="#服务端与数据库交互逻辑" class="headerlink" title="服务端与数据库交互逻辑"></a>服务端与数据库交互逻辑</h2><p>代码片段以 express + MongoDB 为例：</p>
<ul>
<li>服务端提取出 query 中的page和size</li>
</ul>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> page = <span class="title class_">Number</span>(req.<span class="property">query</span>.<span class="property">page</span>) || <span class="number">1</span>;</span><br><span class="line"><span class="keyword">const</span> size = <span class="title class_">Number</span>(req.<span class="property">query</span>.<span class="property">size</span>) || <span class="number">10</span>;</span><br></pre></td></tr></table></figure>

<ul>
<li><p>进行数据库查询，提取 collection 中的当前页数据</p>
<p>根据 <a href="https://www.mongodb.com/zh-cn/docs/manual/reference/method/db.collection.find/#options">db.collection.find()</a> 中的 limit 和 skip 选项来进行查询。</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> skip = (page - <span class="number">1</span>) *size;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 当前页的产品数据</span></span><br><span class="line"><span class="keyword">const</span> products = <span class="keyword">await</span> collection.<span class="title function_">find</span>()</span><br><span class="line">  .<span class="title function_">skip</span>(skip)</span><br><span class="line">  .<span class="title function_">limit</span>(size)</span><br><span class="line">  .<span class="title function_">toArray</span>();</span><br></pre></td></tr></table></figure>
</li>
<li><p>查询 collection 中的数据总条数</p>
<p><a href="https://www.mongodb.com/zh-cn/docs/manual/reference/method/db.collection.estimatedDocumentCount/">db.collection.estimatedDocumentCount()</a> 不采用查询过滤，而是使用元数据返回集合的计数。</p>
<p><a href="https://www.mongodb.com/zh-cn/docs/manual/reference/method/db.collection.countDocuments/">db.collection.countDocuments()</a> 返回一个整数，代表与该集合或视图的查询匹配的文档数量。此方法可用于<a href="https://www.mongodb.com/zh-cn/docs/manual/core/transactions/#std-label-transactions">事务</a>。</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> totalCount = <span class="keyword">await</span> collection.<span class="title function_">estimatedDocumentCount</span>(); </span><br><span class="line"><span class="comment">//返回快 无法过滤</span></span><br></pre></td></tr></table></figure>

  <figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> totalCount = <span class="keyword">await</span> collection.<span class="title function_">countDocuments</span>(&#123; <span class="attr">deleted</span>: &#123; <span class="attr">$ne</span>: <span class="literal">true</span> &#125; &#125;);</span><br><span class="line"><span class="comment">// 过滤掉所有 deleted: true 的 document</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>根据总条数和每页大小计算总页数</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> totalPages = <span class="title class_">Math</span>.<span class="title function_">ceil</span>(totalCount / size);</span><br></pre></td></tr></table></figure>
</li>
<li><p>返回数据（以json为例）：</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line">res.<span class="title function_">json</span>(&#123;</span><br><span class="line">  totalCount,</span><br><span class="line">  totalPages,</span><br><span class="line">  <span class="attr">currentPage</span>: page,</span><br><span class="line">  products</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>MyLaptop</title>
    <url>/2023/08/12/MyLaptop/</url>
    <content><![CDATA[<h2 id="镜像与电脑型号"><a href="#镜像与电脑型号" class="headerlink" title="镜像与电脑型号"></a>镜像与电脑型号</h2><p>安装镜像 : <a href="https://cdimage.debian.org/debian-cd/current/amd64/iso-dvd/debian-12.1.0-amd64-DVD-1.iso">debian-12.1.0-amd64-DVD-1.iso</a></p>
<p><strong>目前更新为 testing</strong></p>
<p>笔记本 : acer SF314-512-52TY</p>
<p>hw-probe : <a href="https://linux-hardware.org/?probe=7158f3e437">link</a></p>
<p><img src="https://s2.loli.net/2023/08/12/AeGo41v3zusEcJK.png" alt="Screenshot_20230812_203700.png"></p>
<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><ol>
<li>摄像头不工作</li>
<li>指纹不工作</li>
<li>无法查看风扇转速 ( Windows下一样 )</li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>TCP 的三次握手和四次挥手</title>
    <url>/2022/10/22/TCP%E7%9A%84%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E4%B8%8E%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B/</url>
    <content><![CDATA[<ul>
<li>本文来源 : <a href="https://github.com/opsxin/markdown-notes/blob/master/Other/TCP/TCP%E7%9A%84%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E4%B8%8E%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B.md">链接</a></li>
</ul>
<h1 id="TCP-的三次握手和挥手"><a href="#TCP-的三次握手和挥手" class="headerlink" title="TCP 的三次握手和挥手"></a>TCP 的三次握手和挥手</h1><p>[TOC]</p>
<h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><ul>
<li>TCP 提供一种<strong>面向连接的、可靠的</strong>字节流服务。</li>
<li>在一个 TCP 连接中，仅有两方进行彼此通信，广播和多播不能用于 TCP。</li>
<li>TCP 使用校验和，确认和重传机制来保证可靠传输。</li>
<li>TCP 给数据分节进行排序，并使用累积确认保证数据的顺序不变和非重复。</li>
<li>TCP 使用滑动窗口机制来实现流量控制，通过动态改变窗口的大小进行拥塞控制。</li>
</ul>
<p><strong>注意</strong>：TCP 并不能保证数据一定会被对方接收到，因为这是不可能的。<strong>TCP 能够做到的是，如果有可能，就把数据尽可能递送到接收方</strong>，否则就（通过放弃重传并且中断连接这一手段）通知用户。因此准确说 TCP 也不是 100% 可靠的协议，它所能提供的是<strong>数据的可靠递送或故障的可靠通知</strong>。</p>
<h2 id="三次握手"><a href="#三次握手" class="headerlink" title="三次握手"></a>三次握手</h2><p>三次握手（Three-way Handshake），是指建立一个 TCP 连接时，需要客户端和服务器总共发送 3 个包。</p>
<p>三次握手的目的是连接服务器指定端口，建立 TCP 连接，并同步连接双方的序列号和确认号，交换 TCP 窗口大小信息。在 socket 编程中，客户端执行 <code>connect()</code> 时。将触发三次握手。</p>
<h3 id="第一次握手（SYN-SEND）"><a href="#第一次握手（SYN-SEND）" class="headerlink" title="第一次握手（SYN_SEND）"></a>第一次握手（SYN_SEND）</h3><p>客户端发送一个 TCP 的 SYN 标志位置 1 的包，指明客户端打算连接的服务器的端口，以及初始序号 X，保存在包头的序列号（Sequence Number）字段里<strong>（SYN&#x3D;1, seq&#x3D;x）</strong>。</p>
<p>发送完毕后，客户端进入 <code>SYN_SEND</code> 状态。</p>
<h3 id="第二次握手（SYN-RECV）"><a href="#第二次握手（SYN-RECV）" class="headerlink" title="第二次握手（SYN_RECV）"></a>第二次握手（SYN_RECV）</h3><p>服务器发回确认包（ACK）应答。即 SYN 标志 SYN_RECV 位和 ACK 标志位均为 1。服务器端选择自己 ISN 序列号，放到 Seq 域里，同时将确认序号（Acknowledgement Number）设置为客户的 ISN +1，即 <code>X+1</code>。 发送完毕后，服务器端进入 <code>SYN_RCVD</code> 状态<strong>（SYN&#x3D;1, ACK&#x3D;1, seq&#x3D;y, ACKnum&#x3D;x+1）</strong>。</p>
<h3 id="第三次握手（ESTABLISHED）"><a href="#第三次握手（ESTABLISHED）" class="headerlink" title="第三次握手（ESTABLISHED）"></a>第三次握手（ESTABLISHED）</h3><p>客户端再次发送确认包（ACK），SYN 标志位为 0，ACK 标志位为 1，并且把服务器发来 ACK 的序号字段 <code>+1</code>，放在确定字段中发送给对方，并且在数据段放写 ISN 的 +1<strong>（ACK&#x3D;1，ACKnum&#x3D;y+1）</strong>。</p>
<p>发送完毕后，客户端进入 <code>ESTABLISHED</code> 状态，当服务器端接收到这个包时，也进入 <code>ESTABLISHED</code> 状态，TCP 握手结束。</p>
<h3 id="三次握手示意图"><a href="#三次握手示意图" class="headerlink" title="三次握手示意图"></a>三次握手示意图</h3><p><img src="https://raw.githubusercontent.com/HIT-Alibaba/interview/master/img/tcp-connection-made-three-way-handshake.png" alt="three-way-handshake"></p>
<h2 id="四次挥手"><a href="#四次挥手" class="headerlink" title="四次挥手"></a>四次挥手</h2><p>TCP 的连接的拆除需要发送四个包，因此称为四次挥手(Four-way handshake)，也叫做改进的三次握手。客户端或服务器均可主动发起挥手动作，在 socket 编程中，任何一方执行 <code>close()</code> 操作即可产生挥手操作。</p>
<h3 id="第一次挥手（FIN-WAIT-1）"><a href="#第一次挥手（FIN-WAIT-1）" class="headerlink" title="第一次挥手（FIN_WAIT_1）"></a>第一次挥手（FIN_WAIT_1）</h3><p>假设客户端想要关闭连接，客户端发送一个 FIN 标志位置为 1 的包，表示自己已经没有数据可以发送了，但是仍然可以接受数据<strong>（FIN&#x3D;1，seq&#x3D;x）</strong>。发送完毕后，客户端进入 <code>FIN_WAIT_1</code> 状态。</p>
<h3 id="第二次挥手（CLOSE-WAIT，FIN-WAIT-2）"><a href="#第二次挥手（CLOSE-WAIT，FIN-WAIT-2）" class="headerlink" title="第二次挥手（CLOSE_WAIT，FIN_WAIT_2）"></a>第二次挥手（CLOSE_WAIT，FIN_WAIT_2）</h3><p>服务器端确认客户端的 FIN 包，发送一个确认包，表明自己接受到了客户端关闭连接的请求，但还没有准备好关闭连接<strong>（ACK&#x3D;1，ACKnum&#x3D;x+1）</strong>。</p>
<p>发送完毕后，服务器端进入 <code>CLOSE_WAIT</code> 状态，客户端接收到这个确认包之后，进入 <code>FIN_WAIT_2</code> 状态，等待服务器端关闭连接。</p>
<h3 id="第三次挥手（LAST-ACK）"><a href="#第三次挥手（LAST-ACK）" class="headerlink" title="第三次挥手（LAST_ACK）"></a>第三次挥手（LAST_ACK）</h3><p>服务器端准备好关闭连接时，向客户端发送结束连接请求，FIN 置为 1<strong>（FIN&#x3D;1，seq&#x3D;y）</strong>。</p>
<p>发送完毕后，服务器端进入 <code>LAST_ACK</code> 状态，等待来自客户端的最后一个 ACK。</p>
<h3 id="第四次挥手（TIME-WAIT，CLOSED）"><a href="#第四次挥手（TIME-WAIT，CLOSED）" class="headerlink" title="第四次挥手（TIME_WAIT，CLOSED）"></a>第四次挥手（TIME_WAIT，CLOSED）</h3><p>客户端接收到来自服务器端的关闭请求，发送一个确认包，并进入 <code>TIME_WAIT</code>状态，等待可能出现的要求重传的 ACK 包<strong>（ACK&#x3D;1，ACKnum&#x3D;y+1）</strong>。服务器端接收到这个确认包之后，关闭连接，进入 <code>CLOSED</code> 状态。</p>
<h3 id="等待-2MSL"><a href="#等待-2MSL" class="headerlink" title="等待 2MSL"></a>等待 2MSL</h3><p>客户端等待了某个固定时间（两个最大段生命周期，2MSL，2 Maximum Segment Lifetime）之后，没有收到服务器端的 FIN，认为服务器端已经正常关闭连接，于是自己也关闭连接，进入 <code>CLOSED</code> 状态。</p>
<p>RFC 793 中规定 MSL 为 2 分钟，实际应用中常用的是 30 秒，1 分钟和 2 分钟等。当连接处于 2MSL 等待阶段时任何迟到的报文段都将被丢弃。不过在实际应用中可以通过设置 SO_REUSEADDR 选项达到不必等待 2MSL 时间结束再使用此端口。</p>
<p> <strong>去向 ACK 消息最大存活时间（MSL）+ 来向 FIN 消息的最大存活时间（MSL）</strong>。</p>
<h3 id="四次挥手示意图"><a href="#四次挥手示意图" class="headerlink" title="四次挥手示意图"></a>四次挥手示意图</h3><p><img src="https://raw.githubusercontent.com/HIT-Alibaba/interview/master/img/tcp-connection-closed-four-way-handshake.png" alt="four-way-handshake"></p>
<h2 id="SYN攻击"><a href="#SYN攻击" class="headerlink" title="SYN攻击"></a>SYN攻击</h2><h3 id="什么是-SYN-攻击（SYN-Flood）"><a href="#什么是-SYN-攻击（SYN-Flood）" class="headerlink" title="什么是 SYN 攻击（SYN Flood）"></a>什么是 SYN 攻击（SYN Flood）</h3><p>在三次握手过程中，服务器发送 SYN-ACK 之后，收到客户端的 ACK 之前的 TCP 连接称为半连接（half-open connect）。此时服务器处于 SYN_RCVD 状态。当收到 ACK 后，服务器才能转入 ESTABLISHED 状态.</p>
<p>SYN 攻击指的是，攻击客户端在短时间内伪造大量不存在的 IP 地址，向服务器不断地发送 SYN 包，服务器回复确认包，并等待客户的确认。由于源地址是不存在的，服务器需要不断的重发直至超时，这些伪造的 SYN 包将长时间占用未连接队列，正常的 SYN 请求被丢弃，导致目标系统运行缓慢，严重者会引起网络堵塞甚至系统瘫痪。</p>
<p>SYN 攻击是一种典型的 DoS&#x2F;DDoS 攻击。</p>
<h3 id="检测-SYN-攻击"><a href="#检测-SYN-攻击" class="headerlink" title="检测 SYN 攻击"></a>检测 SYN 攻击</h3><p>检测 SYN 攻击非常的方便，当你在服务器上看到大量的半连接状态时，特别是源 IP 地址是随机的，基本上可以断定这是一次 SYN 攻击。在 Linux&#x2F;Unix 上可以使用系统自带的 netstats 命令来检测 SYN 攻击。</p>
<h3 id="防御-SYN-攻击"><a href="#防御-SYN-攻击" class="headerlink" title="防御 SYN 攻击"></a>防御 SYN 攻击</h3><p>SYN 攻击不能完全被阻止，除非将 TCP 协议重新设计。我们所做的是尽可能的减轻 SYN 攻击的危害，常见的防御 SYN 攻击的方法有如下几种：</p>
<ul>
<li>缩短超时（SYN Timeout）时间</li>
<li>增加最大半连接数</li>
<li>过滤网关防护</li>
<li>SYN cookies 技术</li>
</ul>
<h2 id="TCP-KeepAlive"><a href="#TCP-KeepAlive" class="headerlink" title="TCP KeepAlive"></a>TCP KeepAlive</h2><p>TCP 的连接，实际上是一种纯软件层面的概念，在物理层面并没有“连接”这种概念。TCP 通信双方建立交互的连接，但是并不是一直存在数据交互，有些连接会在数据交互完毕后，主动释放连接，而有些不会。在长时间无数据交互的时间段内，交互双方都有可能出现掉电、死机、异常重启等各种意外，当这些意外发生之后，这些 TCP 连接并未来得及正常释放，在软件层面上，连接的另一方并不知道对端的情况，它会一直维护这个连接，长时间的积累会导致非常多的半打开连接，造成端系统资源的消耗和浪费，为了解决这个问题，在传输层可以利用 TCP 的 KeepAlive 机制实现来实现。主流的操作系统基本都在内核里支持了这个特性。</p>
<p><strong>TCP KeepAlive 的基本原理是，隔一段时间给连接对端发送一个探测包，如果收到对方回应的 ACK，则认为连接还是存活的，在超过一定重试次数之后还是没有收到对方的回应，则丢弃该 TCP 连接。</strong></p>
<p>TCP KeepAlive 的局限，首先 TCP KeepAlive 监测的方式是发送一个 probe 包，会给网络带来额外的流量，另外 TCP KeepAlive 只能在内核层级监测连接的存活与否，而连接的存活不一定代表服务的可用。例如当一个服务器 CPU 进程服务器占用达到 100%，已经卡死不能响应请求了，此时 TCP KeepAlive 依然会认为连接是存活的。因此 TCP KeepAlive 对于应用层程序的价值是相对较小的。需要做连接保活的应用层程序，例如 QQ，往往会在应用层实现自己的心跳功能。</p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul>
<li>计算机网络：自顶向下方法</li>
<li><a href="https://hit-alibaba.github.io/interview/basic/network/TCP.html">TCP 协议 笔试面试知识整理</a></li>
<li><a href="http://www.cnblogs.com/hnrainll/archive/2011/10/14/2212415.html">TCP三次握手及四次挥手详细图解</a></li>
<li><a href="http://www.cnblogs.com/rootq/articles/1377355.html">TCP协议三次握手过程分析</a></li>
<li><a href="http://blog.csdn.net/whuslei/article/details/6667471">TCP协议中的三次握手和四次挥手(图解)</a></li>
<li><a href="http://baike.baidu.com/subview/32754/8048820.htm">百度百科：SYN攻击</a></li>
<li><a href="http://www.tldp.org/HOWTO/html_single/TCP-Keepalive-HOWTO/">TCP-Keepalive-HOWTO</a></li>
</ul>
]]></content>
      <tags>
        <tag>tcp</tag>
      </tags>
  </entry>
  <entry>
    <title>VMware-tools 无法安装问题解决</title>
    <url>/2023/02/06/VMware-tools-Issue/</url>
    <content><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><ul>
<li>WMware版本 WMware Workstation PRO 16.2.3</li>
<li>安装镜像版本:Windows7 x64</li>
<li>自动安装的VMware Tools 版本为11.3.5<br>出现提示Windows无法验证此驱动程序软件发布者<br>导致出错无法安装</li>
</ul>
<h3 id="图示如下"><a href="#图示如下" class="headerlink" title="图示如下"></a>图示如下</h3><p><img src="https://raw.githubusercontent.com/duzhuoshanwai/Image-Hosting/master/img/202302060941347.png"><br><img src="https://raw.githubusercontent.com/duzhuoshanwai/Image-Hosting/master/img/202302060941335.png"><br><img src="https://raw.githubusercontent.com/duzhuoshanwai/Image-Hosting/master/img/202302060941323.png"></p>
<h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><ul>
<li>安装 VMware Tools 11.0.0</li>
<li>挂载iso镜像到虚拟机</li>
<li>运行setup64.exe</li>
<li>安装成功后重启</li>
</ul>
<h3 id="图示如下-1"><a href="#图示如下-1" class="headerlink" title="图示如下"></a>图示如下</h3><p><img src="https://raw.githubusercontent.com/duzhuoshanwai/Image-Hosting/master/img/202302060941309.png"><br><img src="https://raw.githubusercontent.com/duzhuoshanwai/Image-Hosting/master/img/202302060941297.png"><br><img src="https://raw.githubusercontent.com/duzhuoshanwai/Image-Hosting/master/img/202302060941281.png"><br><img src="https://raw.githubusercontent.com/duzhuoshanwai/Image-Hosting/master/img/202302060941271.png"><br><img src="https://raw.githubusercontent.com/duzhuoshanwai/Image-Hosting/master/img/202302060941258.png"><br><img src="https://raw.githubusercontent.com/duzhuoshanwai/Image-Hosting/master/img/202302060941246.png"></p>
<h2 id="相关下载链接与分流"><a href="#相关下载链接与分流" class="headerlink" title="相关下载链接与分流"></a>相关下载链接与分流</h2><p><a href="http://softwareupdate.vmware.com/cds/vmw-desktop/ws/15.5.0/14665864/windows/packages/tools-windows.tar">VM-tools</a><br><a href="https://dlink.host/sharepoint/aHR0cHM6Ly9zYWludDEzMzctbXkuc2hhcmVwb2ludC5jb20vOnU6L2cvcGVyc29uYWwvZHV6aHVvX3NhaW50MTMzN19vbm1pY3Jvc29mdF9jb20vRWFsZ0UyeWMtZUpEdTdaZW1ZWlllX1VCakF4cFNzd2d1NlNqNDU1dzZqdVFLZz9lPXk3MGhETQ.iso">VM-tools OneDrive分流</a></p>
<p><a href="https://www.catalog.update.microsoft.com/search.aspx?q=kb4474419">提示升级Win7版本到sp1 相关补丁</a></p>
]]></content>
      <tags>
        <tag>VMware</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows11更新后出错后卸载更新</title>
    <url>/2023/04/01/Windows11-Update-Rollback/</url>
    <content><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p><img src="https://s2.loli.net/2023/04/01/68huJF3Dfn7EUBb.png"></p>
<ul>
<li>设备 : Swift SF314-512</li>
<li>系统 : Windows11 22H2 22621.525</li>
</ul>
<p>推送补丁 KB5023778 更新后出现进入桌面闪屏 无法加载桌面图标的问题</p>
<h2 id="解决方法-卸载-KB5023778"><a href="#解决方法-卸载-KB5023778" class="headerlink" title="解决方法 卸载 KB5023778"></a>解决方法 卸载 KB5023778</h2><ol>
<li>Win+Alt+Del 按住 Shift 点击重启<br><img src="https://s2.loli.net/2023/04/01/s5wDXgEMLuTelhI.png"></li>
<li>疑难解答 → 高级选项 → 卸载更新</li>
</ol>
<p><img src="https://s2.loli.net/2023/04/01/rSDnE8X9tI4ofiL.png"><br><img src="https://s2.loli.net/2023/04/01/Xo3VqpAR6mGBzfF.png"><br><img src="https://s2.loli.net/2023/04/01/FPnYEfvHyBK6Iwl.png"><br><img src="https://s2.loli.net/2023/04/01/HIZANxR7Lkn2sFJ.png"></p>
]]></content>
  </entry>
  <entry>
    <title>关于 z-library 的访问 (2023-11-28)</title>
    <url>/2023/11/15/about-z-lib/</url>
    <content><![CDATA[<h2 id="目前访问方法"><a href="#目前访问方法" class="headerlink" title="目前访问方法"></a>目前访问方法</h2><ul>
<li><a href="http://singlelogin.re/">http://singlelogin.re/</a> </li>
<li><a href="http://zlibrary-global.se/">http://zlibrary-global.se/</a></li>
<li><a href="http://zh.loginzlib2vrak5zzpcocc3ouizykn6k5qecgj2tzlnab5wcbqhembyd.onion/">http://zh.loginzlib2vrak5zzpcocc3ouizykn6k5qecgj2tzlnab5wcbqhembyd.onion/</a> 登录后跳转</li>
<li><a href="mailto:blackbox@zlib.se">blackbox@zlib.se</a> 发送邮件自动返回访问地址 <strong>(测试被Gmail标记为垃圾邮件)</strong></li>
</ul>
<span id="more"></span>
<h2 id="相关阅读与回旋镖"><a href="#相关阅读与回旋镖" class="headerlink" title="相关阅读与回旋镖"></a>相关阅读与回旋镖</h2><blockquote>
<p>2022年10月底，<a href="https://zh.wikipedia.org/wiki/TikTok">TikTok</a>屏蔽了#ZLibrary<a href="https://zh.wikipedia.org/wiki/%E4%B8%BB%E9%A1%8C%E6%A8%99%E7%B1%A4">主题标签</a>[<a href="https://zh.wikipedia.org/wiki/Z-Library#cite_note-23">23]</a>。11月3日，<a href="https://zh.wikipedia.org/wiki/%E7%BE%8E%E5%9B%BD%E5%8F%B8%E6%B3%95%E9%83%A8">美国司法部</a>和<a href="https://zh.wikipedia.org/wiki/%E8%81%94%E9%82%A6%E8%B0%83%E6%9F%A5%E5%B1%80">联邦调查局</a>根据法庭判令，查封Z-Library部分域名[<a href="https://zh.wikipedia.org/wiki/Z-Library#cite_note-:0-24">24]</a>[<a href="https://zh.wikipedia.org/wiki/Z-Library#cite_note-:4-25">25]</a>[<a href="https://zh.wikipedia.org/wiki/Z-Library#cite_note-:7-26">26]</a>。z-lib.org、b-ok.org、3lib.net的<a href="https://zh.wikipedia.org/wiki/%E5%9F%9F%E5%90%8D%E7%B3%BB%E7%BB%9F">DNS服务器</a>曾更换成美国执法部门常用于查封行动的NS1.SEIZEDSERVERS.COM和NS2.SEIZEDSERVERS.COM，不过及后又再更改为匿名托管服务提供者Njalla的DNS服务器[<a href="https://zh.wikipedia.org/wiki/Z-Library#cite_note-:5-27">27]</a>。</p>
<p>虽然通告一度写道，<a href="https://zh.wikipedia.org/wiki/%E7%BE%8E%E5%9B%BD%E9%82%AE%E6%94%BF%E6%A3%80%E6%9F%A5%E5%B1%80">美国邮政检查局</a>查封了该网站[<a href="https://zh.wikipedia.org/wiki/Z-Library#cite_note-:5-27">27]</a>，但其内容及后得以更正[<a href="https://zh.wikipedia.org/wiki/Z-Library#cite_note-:7-26">26]</a>。截至目前，网站的<a href="https://zh.wikipedia.org/wiki/Tor">Tor</a>隐藏服务网址与singlelogin.me域名仍可继续使用，且在后者提供的内容中表示该网站目前只能在Tor与<a href="https://zh.wikipedia.org/wiki/I2P">I2P</a>网络中使用。Z-Library的营运者则把Tor与I2P外的网站故障的原因解释为托管服务问题[<a href="https://zh.wikipedia.org/wiki/Z-Library#cite_note-:0-24">24]</a>[<a href="https://zh.wikipedia.org/wiki/Z-Library#cite_note-:5-27">27]</a>。</p>
<p>2022年11月3日，Z-Library的两位俄罗斯籍经营者在<a href="https://zh.wikipedia.org/wiki/%E9%98%BF%E6%A0%B9%E5%BB%B7">阿根廷</a><a href="https://zh.wikipedia.org/wiki/%E7%A7%91%E5%B0%94%E5%A4%9A%E7%93%A6_(%E9%98%BF%E6%A0%B9%E5%BB%B7)">科尔多瓦</a>被捕[<a href="https://zh.wikipedia.org/wiki/Z-Library#cite_note-28">28]</a>。美国纽约东区检察官指两人于2018年至2022年间经营Z-Library，从事犯罪活动，涉嫌“刑事<a href="https://zh.wikipedia.org/wiki/%E7%9B%97%E7%89%88">盗版</a>、<a href="https://zh.wikipedia.org/w/index.php?title=%E7%94%B5%E6%B1%87%E8%AF%88%E9%AA%97&action=edit&redlink=1">电汇诈骗</a>及<a href="https://zh.wikipedia.org/wiki/%E6%B4%97%E9%92%B1">洗钱</a>”[<a href="https://zh.wikipedia.org/wiki/Z-Library#cite_note-29">29]</a>。据<a href="https://zh.wikipedia.org/w/index.php?title=TorrentFreak&action=edit&redlink=1">TorrentFreak</a>报道，美国联邦调查员直接向<a href="https://zh.wikipedia.org/wiki/Google">Google</a>和<a href="https://zh.wikipedia.org/wiki/%E4%BA%9A%E9%A9%AC%E9%80%8A%E5%85%AC%E5%8F%B8">亚马逊公司</a>发出搜查令，要求两者提供两人的个人信息，包括邮件地址、礼品卡交易记录等，最终锁定两人的身份[<a href="https://zh.wikipedia.org/wiki/Z-Library#cite_note-30">30]</a>。</p>
<p>2023年2月11日，用户可以再次访问Z-Library，不过用户要点击singlelogin.me链接并登录他们的帐户才能访问Z-Library。[<a href="https://zh.wikipedia.org/wiki/Z-Library#cite_note-31">31]</a>此后它亦计划在各地开设“Z-Points”，予人分享实体书[<a href="https://zh.wikipedia.org/wiki/Z-Library#cite_note-TF-20230408-32">32]</a>。5月，美国当局再度冻结Z-Library部分域名（包含singlelogin.me）[<a href="https://zh.wikipedia.org/wiki/Z-Library#cite_note-TF-20230505-1">1]</a>。<br>—— <a href="https://zh.wikipedia.org/wiki/Z-Library">维基百科条目 Z-Library</a></p>
</blockquote>
<h3 id="回旋镖来咯"><a href="#回旋镖来咯" class="headerlink" title="回旋镖来咯"></a>回旋镖来咯</h3><blockquote>
<p>我认为，无论是企业还是个人，在做网站的时候，要尽量避免注册和使用CN域名，因为使用CN域名后会产生巨大的政策性风险和安全风险，同时，该风险难以通过技术手动进行规避，等出了问题再想到更换COM域名，将会损失惨重。</p>
<p><strong>政策性风险</strong></p>
<p>注册CN域名的最大风险就是政策性风险，对于网站来说，一把“达摩克利斯之剑”就立刻悬在头上，它的名字叫“clientHold(域名暂停解析)”，你的域名随时可能会因为种种原因而被停用，虽然这个CN域名是你掏钱购买注册的，在中国，你注册的域名根本不属于你自己，你的域名随时都处于被“clientHold(域名暂停解析)”的状态，可能仅仅因为你网站上的一条留言、一个评论，就会让你的域名被永久封禁。</p>
<p>这里面最知名的一个案例是罗永浩的牛博网，使用CN域名的牛博网一度聚集了梁文道、韩寒、连岳、柴静等一批名家，日访问量曾突破百万，但正是因为使用CN域名，才导致政策性风险发生后无法进行避规风险，网站访问量迅速消失，几年之后，连牛博网的域名也莫名其妙被人抢走了。</p>
<p>2009年1月9日，国内知名博客站点牛博网的CN域名无法访问，该站点负责人罗永浩透露，说他收到服务商万网的通知，称该博客存在有害信息，被要求整改，因此万网需要停止该CN域名的访问权限。在收到这封信后不久，罗永浩即接到其服务器托管商的客服电话，声称机房接到通信管理局的通知要求关闭牛博网。至此，牛博网无法访问。</p>
<p>牛博网的CN域名被万网停止访问权限（ClientHold），证明了注册和使用CN域名对于企业来说存在着巨大的不可控制的风险，一个网络公司使用CN域名开展互联网应用完全是一场灾难，COM域名再次显示了其特有的价值。</p>
<p>我们知道，罗永浩注册的CN域名和牛博网是两个不同的东西，域名是域名，网站是网站，如果网站上存在有害信息，那么可以停止服务器访问，但不可能直接停止域名的访问权限，这显得毫无道理，在国际上都从来没有听说过这种莫名其妙的操作。</p>
<p>在国际上，谁听说过域名服务商可以随便停止域名的访问权限？简直是闻所未闻，不可思议。如果在国外使用COM域名，任何一家注册商都没有权限无端中止你的域名访问，即使中止访问，那也是主机商去中止网站服务器的访问，域名访问不会中止。</p>
<p><strong>技术性风险</strong></p>
<p>在国内注册CN域名，很多时候，你并没有域名的完全管理的权限，很多本来属于你的权限可能是他们提供的“功能”，你要另外花钱买；此外，国内域名的解锁迁移通常很麻烦，域名注册商会设置各种条件(例如：收费、续费一年才给密码、邮寄证明材料等)来提高域名迁移的难度，让域名转移、域名过户变得非常困难。牛博网的CN域名就是因为被万网ClientHold之后，无法进行迁移和续费，最终导致该域名过期后被其他人抢占。</p>
<p>因此，我推荐国内的企业，最好是通过美国的域名注册商注册COM域名，千万不要在国内注册CN域名。通常情况下，美国的域名注册商都是ICANN的成员，在域名仲裁以及管理上的级别远远高于国内任何一个域名注册商。并且美国是法制国家，域名注册商绝对不会出卖客户的隐私信息的，也不会违规取消客户的域名。因此，在美国注册域名安全、可靠、实惠，总的来说远远优于在国内注册CN域名。</p>
<p>总之，这次万网停止了牛博网CN域名的访问权限，可谓开了一个极其恶劣的先例，对于整个CN域名的商业化应用带来的冲击是不可想象的，这让更多的中国企业在注册域名的时候，会首先考虑到CN域名的这种巨大风险，从而不再使用CN域名，而使用国外域名注册服务（如GoDaddy）注册COM域名，随着CN域名的低价推广活动的中止，CN域名的价值将会步入一个低谷，注册数量将会越来越少，相信有识之士都不会再使用CN域名了。</p>
<p>关于如何在国外注册COM域名，请参见我另外一篇文章：《<a href="https://www.williamlong.info/archives/1013.html">在国外进行国际域名注册</a>》</p>
<p>—— <a href="https://web.archive.org/web/20180904111841/http://www.williamlong.info/archives/1654.html">月光博客文章《警告——不要在国内注册和使用CN域名》</a></p>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title>定时任务 - crontab</title>
    <url>/2022/02/20/crontab/</url>
    <content><![CDATA[<h1 id="定时任务-crontab"><a href="#定时任务-crontab" class="headerlink" title="定时任务 - crontab"></a>定时任务 - crontab</h1><blockquote>
<p>环境：CentOS</p>
</blockquote>
<p>通过 <code>crontab</code> 命令，我们可以在固定的间隔时间执行指定的系统指令或 shell script 脚本。时间间隔的单位可以是分钟、小时、日、月、周及以上的任意组合。这个命令非常适合周期性的日志分析或数据备份等工作。</p>
<h2 id="crond-服务"><a href="#crond-服务" class="headerlink" title="crond 服务"></a>crond 服务</h2><p>Linux 通过 crond 服务来支持 crontab。</p>
<h3 id="检查-crond-服务"><a href="#检查-crond-服务" class="headerlink" title="检查 crond 服务"></a>检查 <code>crond</code> 服务</h3><p>使用 <code>systemctl list-unit-files</code> 命令确认 <code>crond</code> 服务是否已安装。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">systemctl list-unit-files | grep crond</span></span><br><span class="line">crond.service                               enabled</span><br></pre></td></tr></table></figure>

<p>如果为 enabled，表示服务正运行。</p>
<h3 id="crond-服务命令"><a href="#crond-服务命令" class="headerlink" title="crond 服务命令"></a>crond 服务命令</h3><p>开机自动启动 crond 服务：<code>chkconfig crond on</code></p>
<p>或者，按以下命令手动启动：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl enable crond.service  # 开启服务（开机自动启动服务）</span><br><span class="line">systemctl disable crond.service # 关闭服务（开机不会自动启动服务）</span><br><span class="line">systemctl start crond.service   # 启动服务</span><br><span class="line">systemctl stop crond.service    # 停止服务</span><br><span class="line">systemctl restart crond.service # 重启服务</span><br><span class="line">systemctl reload crond.service  # 重新载入配置</span><br><span class="line">systemctl status crond.service  # 查看服务状态</span><br></pre></td></tr></table></figure>

<h2 id="crontab"><a href="#crontab" class="headerlink" title="crontab"></a>crontab</h2><h3 id="crontab-命令"><a href="#crontab-命令" class="headerlink" title="crontab 命令"></a>crontab 命令</h3><p>crontab 命令格式如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">crontab [-u user] file crontab [-u user] [ -e | -l | -r ]</span><br></pre></td></tr></table></figure>

<p>说明：</p>
<ul>
<li><code>-u user</code>：用来设定某个用户的 crontab 服务；</li>
<li><code>file</code>：file 是命令文件的名字，表示将 file 做为 crontab 的任务列表文件并载入 crontab。如果在命令行中没有指定这个文件，crontab 命令将接受标准输入（键盘）上键入的命令，并将它们载入 crontab。</li>
<li><code>-e</code>：编辑某个用户的 crontab 文件内容。如果不指定用户，则表示编辑当前用户的 crontab 文件。</li>
<li><code>-l</code>：显示某个用户的 crontab 文件内容，如果不指定用户，则表示显示当前用户的 crontab 文件内容。</li>
<li><code>-r</code>：从&#x2F;var&#x2F;spool&#x2F;cron 目录中删除某个用户的 crontab 文件，如果不指定用户，则默认删除当前用户的 crontab 文件。</li>
<li><code>-i</code>：在删除用户的 crontab 文件时给确认提示。</li>
</ul>
<p>有两种方法写入定时任务：</p>
<ul>
<li>在命令行输入：<code>crontab -e</code> 然后添加相应的任务，存盘退出。</li>
<li>直接编辑 <code>/etc/crontab</code> 文件，即 <code>vi /etc/crontab</code>，添加相应的任务。</li>
</ul>
<h3 id="crontab-文件"><a href="#crontab-文件" class="headerlink" title="crontab 文件"></a>crontab 文件</h3><p>crontab 要执行的定时任务都被保存在 <code>/etc/crontab</code> 文件中。</p>
<p>crontab 的文件格式如下：</p>
<p><img src="https://raw.githubusercontent.com/dunwu/images/dev/snap/20200211113339.png" alt="img"></p>
<h4 id="标准字段"><a href="#标准字段" class="headerlink" title="标准字段"></a>标准字段</h4><p><strong>逗号</strong>用于分隔列表。例如，在第 5 个字段(星期几)中使用 <code>MON,WED,FRI</code> 表示周一、周三和周五。</p>
<p><strong>连字符</strong>定义范围。例如，<code>2000-2010</code> 表示 2000 年至 2010 年期间的每年，包括 2000 年和 2010 年。</p>
<p>除非用反斜杠()转义，否则命令中的**百分号(%)**会被替换成换行符，第一个百分号后面的所有数据都会作为标准输入发送给命令。</p>
<table>
<thead>
<tr>
<th align="left">字段</th>
<th align="left">是否必填</th>
<th align="left">允许值</th>
<th align="left">允许特殊字符</th>
</tr>
</thead>
<tbody><tr>
<td align="left">Minutes</td>
<td align="left">是</td>
<td align="left">0–59</td>
<td align="left"><code>*</code>,<code>-</code></td>
</tr>
<tr>
<td align="left">Hours</td>
<td align="left">是</td>
<td align="left">0–23</td>
<td align="left"><code>*</code>,<code>-</code></td>
</tr>
<tr>
<td align="left">Day of month</td>
<td align="left">是</td>
<td align="left">1–31</td>
<td align="left"><code>*</code>,<code>-</code></td>
</tr>
<tr>
<td align="left">Month</td>
<td align="left">是</td>
<td align="left">1–12 or JAN–DEC</td>
<td align="left"><code>*</code>,<code>-</code></td>
</tr>
<tr>
<td align="left">Day of week</td>
<td align="left">是</td>
<td align="left">0–6 or SUN–SAT</td>
<td align="left"><code>*</code>,<code>-</code></td>
</tr>
</tbody></table>
<p><code>/etc/crontab</code> 文件示例：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">SHELL=/bin/bash</span><br><span class="line">PATH=/sbin:/bin:/usr/sbin:/usr/bin</span><br><span class="line">MAILTO=root</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">For details see man 4 crontabs</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Example of job definition:</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">.---------------- minute (0 - 59)</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">|  .------------- hour (0 - 23)</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">|  |  .---------- day of month (1 - 31)</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">|  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">|  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">|  |  |  |  |</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">*  *  *  *  * user-name  <span class="built_in">command</span> to be executed</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">每两个小时以root身份执行 /home/hello.sh 脚本</span></span><br><span class="line">0 */2 * * * root /home/hello.sh</span><br></pre></td></tr></table></figure>

<h3 id="crontab-实例"><a href="#crontab-实例" class="headerlink" title="crontab 实例"></a>crontab 实例</h3><h4 id="实例-1：每-1-分钟执行一次-myCommand"><a href="#实例-1：每-1-分钟执行一次-myCommand" class="headerlink" title="实例 1：每 1 分钟执行一次 myCommand"></a>实例 1：每 1 分钟执行一次 myCommand</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">* * * * * myCommand</span><br></pre></td></tr></table></figure>

<h4 id="实例-2：每小时的第-3-和第-15-分钟执行"><a href="#实例-2：每小时的第-3-和第-15-分钟执行" class="headerlink" title="实例 2：每小时的第 3 和第 15 分钟执行"></a>实例 2：每小时的第 3 和第 15 分钟执行</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">3,15 * * * * myCommand</span><br></pre></td></tr></table></figure>

<h4 id="实例-3：在上午-8-点到-11-点的第-3-和第-15-分钟执行"><a href="#实例-3：在上午-8-点到-11-点的第-3-和第-15-分钟执行" class="headerlink" title="实例 3：在上午 8 点到 11 点的第 3 和第 15 分钟执行"></a>实例 3：在上午 8 点到 11 点的第 3 和第 15 分钟执行</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">3,15 8-11 * * * myCommand</span><br></pre></td></tr></table></figure>

<h4 id="实例-4：每隔两天的上午-8-点到-11-点的第-3-和第-15-分钟执行"><a href="#实例-4：每隔两天的上午-8-点到-11-点的第-3-和第-15-分钟执行" class="headerlink" title="实例 4：每隔两天的上午 8 点到 11 点的第 3 和第 15 分钟执行"></a>实例 4：每隔两天的上午 8 点到 11 点的第 3 和第 15 分钟执行</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">3,15 8-11 */2  *  * myCommand</span><br></pre></td></tr></table></figure>

<h4 id="实例-5：每周一上午-8-点到-11-点的第-3-和第-15-分钟执行"><a href="#实例-5：每周一上午-8-点到-11-点的第-3-和第-15-分钟执行" class="headerlink" title="实例 5：每周一上午 8 点到 11 点的第 3 和第 15 分钟执行"></a>实例 5：每周一上午 8 点到 11 点的第 3 和第 15 分钟执行</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">3,15 8-11 * * 1 myCommand</span><br></pre></td></tr></table></figure>

<h4 id="实例-6：每晚的-21-30-重启-smb"><a href="#实例-6：每晚的-21-30-重启-smb" class="headerlink" title="实例 6：每晚的 21:30 重启 smb"></a>实例 6：每晚的 21:30 重启 smb</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">30 21 * * * /etc/init.d/smb restart</span><br></pre></td></tr></table></figure>

<h4 id="实例-7：每月-1、10、22-日的-4-45-重启-smb"><a href="#实例-7：每月-1、10、22-日的-4-45-重启-smb" class="headerlink" title="实例 7：每月 1、10、22 日的 4 : 45 重启 smb"></a>实例 7：每月 1、10、22 日的 4 : 45 重启 smb</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">45 4 1,10,22 * * /etc/init.d/smb restart</span><br></pre></td></tr></table></figure>

<h4 id="实例-8：每周六、周日的-1-10-重启-smb"><a href="#实例-8：每周六、周日的-1-10-重启-smb" class="headerlink" title="实例 8：每周六、周日的 1 : 10 重启 smb"></a>实例 8：每周六、周日的 1 : 10 重启 smb</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">10 1 * * 6,0 /etc/init.d/smb restart</span><br></pre></td></tr></table></figure>

<h4 id="实例-9：每天-18-00-至-23-00-之间每隔-30-分钟重启-smb"><a href="#实例-9：每天-18-00-至-23-00-之间每隔-30-分钟重启-smb" class="headerlink" title="实例 9：每天 18 : 00 至 23 : 00 之间每隔 30 分钟重启 smb"></a>实例 9：每天 18 : 00 至 23 : 00 之间每隔 30 分钟重启 smb</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">0,30 18-23 * * * /etc/init.d/smb restart</span><br></pre></td></tr></table></figure>

<h4 id="实例-10：每星期六的晚上-11-00-pm-重启-smb"><a href="#实例-10：每星期六的晚上-11-00-pm-重启-smb" class="headerlink" title="实例 10：每星期六的晚上 11 : 00 pm 重启 smb"></a>实例 10：每星期六的晚上 11 : 00 pm 重启 smb</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">0 23 * * 6 /etc/init.d/smb restart</span><br></pre></td></tr></table></figure>

<h4 id="实例-11：每一小时重启-smb"><a href="#实例-11：每一小时重启-smb" class="headerlink" title="实例 11：每一小时重启 smb"></a>实例 11：每一小时重启 smb</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">* */1 * * * /etc/init.d/smb restart</span><br></pre></td></tr></table></figure>

<h4 id="实例-12：晚上-11-点到早上-7-点之间，每隔一小时重启-smb"><a href="#实例-12：晚上-11-点到早上-7-点之间，每隔一小时重启-smb" class="headerlink" title="实例 12：晚上 11 点到早上 7 点之间，每隔一小时重启 smb"></a>实例 12：晚上 11 点到早上 7 点之间，每隔一小时重启 smb</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">0 23-7 * * * /etc/init.d/smb restart</span><br></pre></td></tr></table></figure>

<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul>
<li><strong>文章</strong><ul>
<li><a href="https://linuxtools-rst.readthedocs.io/zh_CN/latest/tool/crontab.html">crontab 定时任务</a></li>
<li><a href="https://blog.csdn.net/z_yong_cool/article/details/79288397">linux 定时执行脚本</a></li>
</ul>
</li>
<li><strong>在线工具</strong><ul>
<li><a href="https://tool.lu/crontab/">https://tool.lu/crontab/</a></li>
<li><a href="https://cron.qqe2.com/">https://cron.qqe2.com/</a></li>
</ul>
</li>
</ul>
]]></content>
      <tags>
        <tag>linux</tag>
        <tag>crontab</tag>
      </tags>
  </entry>
  <entry>
    <title>csgo-practice-mode 文档</title>
    <url>/2022/02/18/csgo-practice-mode%20%E6%96%87%E6%A1%A3/</url>
    <content><![CDATA[<h1 id="csgo-practice-mode"><a href="#csgo-practice-mode" class="headerlink" title="csgo-practice-mode"></a>csgo-practice-mode</h1><p><a href="http://ci.splewis.net/job/csgo-practice-mode/"><img src="http://ci.splewis.net/job/csgo-practice-mode/badge/icon" alt="Build status"></a><br><a href="https://github.com/splewis/csgo-practice-mode/releases/latest"><img src="https://img.shields.io/github/downloads/splewis/csgo-practice-mode/total.svg?style=flat-square&label=Downloads" alt="GitHub Downloads"></a><br><a href="https://discord.gg/zmqEa4keCk"><img src="https://img.shields.io/discord/926309849673895966.svg" alt="Discord Chat"></a></p>
<p><strong>Status: Supported, actively developed.</strong></p>
<p>Practice Mode is a sourcemod plugin for helping players&#x2F;teams run practices. See this <a href="https://www.youtube.com/watch?v=ua_I30DTggQ">YouTube video</a> for a demonstration. Check out the features and command list below for a better understanding of all the tools practicemode provides.</p>
<h2 id="Download"><a href="#Download" class="headerlink" title="Download"></a>Download</h2><p>Download from <a href="https://github.com/splewis/csgo-practice-mode/releases">the releases section</a>.</p>
<p>You may also download the <a href="http://ci.splewis.net/job/csgo-practice-mode/lastSuccessfulBuild/">latest development build</a> if you wish. If you report any bugs from these, make sure to include the build number (when typing <code>sm plugins list</code> into the server console, the build number will be displayed with the plugin version).</p>
<h3 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h3><ol>
<li><p>Confirm you have <a href="https://www.sourcemod.net/downloads.php">SourceMod</a> and <a href="https://metamodsource.net/downloads.php">MetaMod:Source</a>. You must have a 1.9+ build of sourcemod.</p>
</li>
<li><p>Extract <strong>all</strong> files in the release zip from above to the <code>csgo</code> server directory. You should see a <code>practicemode.smx</code> file in <code>addons/sourcemod/plugins</code>.</p>
</li>
<li><p>To start practicemode via the <code>.setup</code> command, either <a href="https://github.com/splewis/csgo-practice-mode/wiki/Command-access#adding-admins-in-sourcemod">add yourself as a sourcemod admin</a> or <a href="https://github.com/splewis/csgo-practice-mode/wiki/Command-access#launching-practicemode">remove the admin requirement</a>.</p>
</li>
</ol>
<p><strong>Note</strong>: access to the .setup requires having the sourcemod admin changemap flag (“g”) by default. See <a href="https://github.com/splewis/csgo-practice-mode/wiki/Command-access">the wiki</a> for more information on changing how admin access works.</p>
<h3 id="Download-and-installation-for-dummies"><a href="#Download-and-installation-for-dummies" class="headerlink" title="Download and installation for dummies"></a>Download and installation for dummies</h3><p>For a more thorough guide for users new to configuring servers, please see <a href="https://github.com/splewis/csgo-practice-mode/wiki/Step-by-step-installation-guide">this wiki page</a>.</p>
<h2 id="Features"><a href="#Features" class="headerlink" title="Features"></a>Features</h2><ul>
<li>Draws working grenade trajectories if <code>sv_grenade_trajectory</code> is on (since it doesn’t work on dedicated servers)</li>
<li>Adds new cvars to give extra practice settings (infinite money, noclip without needing sv_cheats enabled)</li>
<li>Can save users’ grenade locations&#x2F;eye-angles with a name and description for them (grenade data is saved to a file on the server in the <code>addons/sourcemod/data/practicemode/grenades</code> directory)</li>
<li>Users can goto any players’ saved grenades to learn or revisit them</li>
<li>Displays a menu with toggle settings to set practice cvars defined in <a href="configs/practicemode.cfg">addons&#x2F;sourcemod&#x2F;configs&#x2F;practicemode.cfg</a></li>
<li>Maintains your grenade history on the current map so you can use <code>.back</code> and <code>.forward</code> to see all spots you threw grenades from in the current session</li>
<li>Can replay grenade throws for testing, either in isolation or in the context of a full timed-execute</li>
</ul>
<h2 id="Commands"><a href="#Commands" class="headerlink" title="Commands"></a>Commands</h2><h3 id="General-commands"><a href="#General-commands" class="headerlink" title="General commands"></a>General commands</h3><ul>
<li><code>.setup</code> displays the practicemode menu</li>
<li><code>.prac</code> launches practice mode and displays the <code>.setup</code> menu</li>
<li><code>.help</code>: displays this page</li>
<li><code>.settings</code>: opens the client settings menu</li>
</ul>
<h3 id="Saving-grenade-positions"><a href="#Saving-grenade-positions" class="headerlink" title="Saving grenade positions"></a>Saving grenade positions</h3><ul>
<li><code>.nades [filter]</code>: displays a menu to select saved grenade positions. <code>.nades</code> with no argument shows all nades. <code>filter</code> can be any of: nade ids, category name, player name, or part of a grenade name</li>
<li><code>.cats </code>: displays a menu of all saved grenades by category</li>
<li><code>.save &lt;name&gt;</code>: saves your current position as a grenade spot with the given name</li>
<li><code>.goto &lt;grenadeid&gt;</code>: teleports you to a player’s saved grenade (or your own if no player is named)</li>
<li><code>.delete</code>: deletes the last grenade of yours that you used .goto (or .nades) to teleport to</li>
<li><code>.find &lt;text&gt;</code>: searches all grenade names for a text match</li>
</ul>
<h3 id="Modifying-a-saved-grenade"><a href="#Modifying-a-saved-grenade" class="headerlink" title="Modifying a saved grenade"></a>Modifying a saved grenade</h3><p>All of the following commands can only be used on <em>your</em> grenades. They will apply to the last saved grenade you went to, whether by <code>.save</code>, <code>.nades</code>, or <code>.goto</code>.</p>
<ul>
<li><code>.desc &lt;description&gt;</code>: adds a grenade description to your last grenade</li>
<li><code>.rename &lt;new name&gt;</code>: renames your last grenade</li>
<li><code>.addcat &lt;category&gt; ...</code>: adds a category to your last grenade</li>
<li><code>.removecat &lt;category&gt;</code>: removes a category from your last grenade</li>
<li><code>.clearcats</code>: removes all categories on your last grenade</li>
<li><code>.deletecat &lt;category&gt;</code>: removes a category from <strong>all</strong> of your saved grenades</li>
<li><code>.copy &lt;username&gt; &lt;grenadeid&gt;</code>: copies another user’s grenade and saves it for you</li>
<li><code>.setdelay &lt;delay&gt;</code>: sets a delay on your last grenade. This is only used when using .throw against a category</li>
</ul>
<h3 id="Testing-grenades"><a href="#Testing-grenades" class="headerlink" title="Testing grenades"></a>Testing grenades</h3><ul>
<li><code>.last</code>: teleports you back to where you threw your last grenade from</li>
<li><code>.back</code>: teleports you back a position in your grenade history (you can also do <code>.back 5</code> to go to the 5th grenade you threw, for example)</li>
<li><code>.forward</code>: teleports you forward a position in your grenade history</li>
<li><code>.flash</code>:  saves you position to test flashbangs against it. Use this command in a spot you want to try to blind, then move and throw the flashbang; you will be teleported back to the position and see how effective the flashbang is. Use <code>.stop</code> to cancel.</li>
<li><code>.throw [filter]</code>: automatically throws all grenades matching the filter. With no filter, throws the last grenade you threw.</li>
<li><code>.noflash</code>: makes it so no flashbangs will blind you (they still blind others)</li>
</ul>
<h3 id="Spawn-commands"><a href="#Spawn-commands" class="headerlink" title="Spawn commands"></a>Spawn commands</h3><ul>
<li><code>.respawn</code>: makes you respawn at the spot you are standing (<code>.stop</code> to cancel)</li>
<li><code>.spawn &lt;number&gt;</code>: teleports you to a spawn #, using your team’s spawns (CT or T). Closest spawn is used if no argument is given</li>
<li><code>.ctspawn &lt;number&gt;</code>: same as .spawn, but using CT only regardless of what team you are on</li>
<li><code>.tspawn &lt;number&gt;</code>: same as .spawn, but using T only regardless of what team you are on</li>
<li><code>.namespawn &lt;name&gt;</code>: saves the closest spawn to you under a name, which can then be gone to via <code>.spawn &lt;name&gt;</code></li>
<li><code>.bestspawn</code>: teleports you to your team’s closest spawn from your current position</li>
<li><code>.worstspawn</code>: teleports you to your team’s furthest spawn from your current position</li>
</ul>
<h3 id="Bot-commands"><a href="#Bot-commands" class="headerlink" title="Bot commands"></a>Bot commands</h3><ul>
<li><code>.bots</code>: opens the bot menu for easier access to most of the below commands</li>
<li><code>.bot</code>: adds a bot where you’re standing (or crouching!); <code>.crouchbot</code> to force a crouching bot</li>
<li><code>.ctbot</code>, <code>.tbot</code>: same as <code>.bot</code>, but forces the bot’s team to CT or T</li>
<li><code>.botplace</code>: adds a bot at the point you’re looking at (similar to the <code>bot_place</code> command)</li>
<li><code>.boost</code>: spawns a bot boosting you (crouch-boosting if you’re crouching); <code>.crouchboost</code> to force a crouching bot</li>
<li><code>.swapbot</code>: swaps your position with the nearest bot (temporarily, the bot will respawn in the original spot still)</li>
<li><code>.movebot</code>: moves the last bot you placed to your current position</li>
<li><code>.nobot</code>: removes the bot you’re aiming at (can also use <code>.kickbot</code> or <code>.removebot</code>)</li>
<li><code>.nobots</code>: clears all bots (<code>.clearbots</code>, <code>.removebots</code>, <code>.kickbots</code> also work)</li>
<li><code>.savebots</code>: saves all current bots to a file</li>
<li><code>.loadbots</code>: loads bots from the file (written by the last <code>.savebots</code>)</li>
</ul>
<h3 id="Miscellaneous-commands"><a href="#Miscellaneous-commands" class="headerlink" title="Miscellaneous commands"></a>Miscellaneous commands</h3><ul>
<li><code>.timer</code>: starts a timer when you start moving in any direction, and stops it when you stop moving, telling you the duration of time between starting&#x2F;stopping</li>
<li><code>.timer2</code>: starts a timer immediately and stops it when you type .timer2 again, telling you the duration of time</li>
<li><code>.countdown &lt;duration&gt;</code>: starts a countdown timer for the duration specified (in seconds), defaulting to the round duration (the <code>mp_roundtime</code> cvar).</li>
<li><code>.fastfoward</code> (or <code>.ff</code>): speeds up the server clock briefly so smokes dissipate quickly</li>
<li><code>.repeat &lt;interval&gt; &lt;command&gt;</code>: give a number of seconds and a chat command, the command will automatically repeat at the given interval. For example: <code>.repeat 3 .throw</code> repeats .throw every 3 seconds</li>
<li><code>.delay &lt;duration&gt; &lt;command&gt;</code>: runs the given chat command after a given duration (in seconds)</li>
<li><code>.map</code>: changes map (you can use a map name like <code>.map de_dust2</code> or just <code>.map</code> to get a menu)</li>
<li><code>.dryrun</code>: disables most practicemode settings (leaving infinte money on), restarts the round, and sets freezetime to <code>sm_practicemode_dry_run_freeze_time</code> (default 6) - you can also use <code>.dry</code></li>
<li><code>.enable &lt;arg&gt;</code>: enables a partially-named setting, or “all” settings.</li>
<li><code>.disable &lt;arg&gt;</code>: disables a partially-named setting, or “all” settings.</li>
<li><code>.savepos</code>: temporarily saves a position so you can <code>.back</code> to it (this adds the position to the list of grenade positions you’ve thrown)</li>
<li><code>.god</code>: toggles god mode (alias for the <code>god</code> command in console; requires sv_cheats to be on)</li>
<li><code>.endround</code>: ends the round (alias for the <code>endround</code> command in console; requires sv_cheats to be on)</li>
<li><code>.break</code>: breaks all func_breakable entities (most windows)</li>
<li><code>.stop</code>: cancels a current action (this can stop many things: the .flash command, the .repeat command, and the .timer command)</li>
<li><code>.spec</code>, <code>.t</code>, <code>.ct</code>: joins a team</li>
</ul>
<h3 id="Bot-replay-commands"><a href="#Bot-replay-commands" class="headerlink" title="Bot replay commands"></a>Bot replay commands</h3><p><strong>Note:</strong> bot replay support is currently a work in progress. It’s not ready for general use yet. Installing the <a href="http://users.alliedmods.net/~drifter/builds/dhooks/2.2/">dhooks extension</a> is also a good idea if you plan using these commands. Expect random crashes if you use these.</p>
<ul>
<li><code>.replays</code>: opens replay mode menu</li>
<li><code>.replay</code>: opens the replay mode menu, or the last replay&#x2F;role menu you had open</li>
<li><code>.namereplay</code>: names the replay you’re currently working on</li>
<li><code>.namerole</code>: names the role you’re currently working on</li>
<li><code>.finish</code>: finishes and saves current recording</li>
<li><code>.cancel</code>: cancels current replay&#x2F;recording</li>
<li><code>.play &lt;id&gt; [role]</code>: plays a replay id (all the roles), or a single role from a replay</li>
</ul>
<p>Also see the <a href="https://github.com/splewis/csgo-practice-mode/wiki/Notes-for-power-users">notes for power users</a> for more detail on using these commands effectively.</p>
<h2 id="ConVars"><a href="#ConVars" class="headerlink" title="ConVars"></a>ConVars</h2><p>You can edit these in the file <code>cfg/sourcemod/practicemode.cfg</code>, which is autogenerated when the plugin first starts.</p>
<p>Note that this is not necessarily an exhaustive list; check <code>cfg/sourcemod/practicemode.cfg</code> for more cvars, or even consider checking the source code for a more up-to-date listing.</p>
<ul>
<li><code>sm_practicemode_alphabetize_nades</code>: displays grenades in alphabetical order instead of id order</li>
<li><code>sm_practicemode_share_all_nades</code>: lets all users edit all nades, and hides who created them</li>
<li><code>sm_practicemode_autostart</code>: whether to automatically start practicemode</li>
<li><code>sm_practicemode_max_grenades_saved</code>: max # of grenades a user can save via <code>.save</code></li>
<li><code>sm_infinite_money</code>: whether to give infinite money</li>
<li><code>sm_allow_noclip</code>: whether the .noclip command is enabled</li>
<li><code>sm_grenade_trajectory_use_player_color</code>: whether to use cl_color to get nade trajectory color</li>
<li><code>sm_practicemode_can_be_started</code>: whether practicemode can be started</li>
</ul>
<h3 id="Discord-Chat"><a href="#Discord-Chat" class="headerlink" title="Discord Chat"></a>Discord Chat</h3><p>A <a href="https://discord.gg/zmqEa4keCk">Discord</a> channel is available for general discussion.</p>
<h3 id="Contributions"><a href="#Contributions" class="headerlink" title="Contributions"></a>Contributions</h3><p>Pull requests are welcome. Please follow the general coding formatting style as much as possible. If you’re concerned about a pull request not being merged, please feel free to make an <a href="https://github.com/splewis/csgo-practice-mode/issues">issue</a> and inquire if the feature is worth adding. I greatly appreciate anyone trying to contribute!</p>
]]></content>
      <tags>
        <tag>csgo</tag>
        <tag>反恐精英:全球攻势</tag>
      </tags>
  </entry>
  <entry>
    <title>dota2 反高台眼</title>
    <url>/2022/03/20/dota2-deward/</url>
    <content><![CDATA[<h1 id="dota2反高台眼"><a href="#dota2反高台眼" class="headerlink" title="dota2反高台眼"></a>dota2反高台眼</h1><h2 id="常规的"><a href="#常规的" class="headerlink" title="常规的"></a>常规的</h2><h3 id="直接插真眼"><a href="#直接插真眼" class="headerlink" title="直接插真眼"></a>直接插真眼</h3><video id="video" controls="" preload="none">
<source id="mp4" src="https://dlink.host/sharepoint/aHR0cHM6Ly9zYWludDEzMzctbXkuc2hhcmVwb2ludC5jb20vOnY6L2cvcGVyc29uYWwvZHV6aHVvX3NhaW50MTMzN19vbm1pY3Jvc29mdF9jb20vRWJsNWpqcnU3ZEJFbUNZOG5pNnhqSGdCTG94WFp3eWpVZF9HNE9ON0dnMnl5Zz9lPUpNTW9ucQ.mp4" type="video/mp4">
</video>

<h3 id="把鸡拉上高台"><a href="#把鸡拉上高台" class="headerlink" title="把鸡拉上高台"></a>把鸡拉上高台</h3><video id="video" controls="" preload="none">
<source id="mp4" src="https://dlink.host/sharepoint/aHR0cHM6Ly9zYWludDEzMzctbXkuc2hhcmVwb2ludC5jb20vOnY6L2cvcGVyc29uYWwvZHV6aHVvX3NhaW50MTMzN19vbm1pY3Jvc29mdF9jb20vRWZIekg4LU9feXBQbjM2akJEVkNIV1VCenNqTHBmRko0TXhwS3FFdGRLc2djdz9lPTBDV0E1NA.mp4" type="video/mp4">
</video>


<h2 id="英雄技能的"><a href="#英雄技能的" class="headerlink" title="英雄技能的"></a>英雄技能的</h2><h3 id="VS"><a href="#VS" class="headerlink" title="VS"></a>VS</h3><video id="video" controls="" preload="none">
<source id="mp4" src="https://dlink.host/sharepoint/aHR0cHM6Ly9zYWludDEzMzctbXkuc2hhcmVwb2ludC5jb20vOnY6L2cvcGVyc29uYWwvZHV6aHVvX3NhaW50MTMzN19vbm1pY3Jvc29mdF9jb20vRVdkb2dtU2NzY05NbEJnRm5TTE5hU29CNUxyWTJuMG5QODZfazNfbndKd2RxUT9lPXh6NjRVaw.mp4" type="video/mp4">
</video>

<h3 id="宙斯"><a href="#宙斯" class="headerlink" title="宙斯"></a>宙斯</h3><video id="video" controls="" preload="none">
<source id="mp4" src="https://dlink.host/sharepoint/aHR0cHM6Ly9zYWludDEzMzctbXkuc2hhcmVwb2ludC5jb20vOnY6L2cvcGVyc29uYWwvZHV6aHVvX3NhaW50MTMzN19vbm1pY3Jvc29mdF9jb20vRVE4bEZWY0FPdUZNZ2JaVDhOem9hV0VCVV9WRnU3WDN1aE0zX0I2bGNiYUl1dz9lPWpRdHF1YQ.mp4" type="video/mp4">
</video>

<h3 id="蝙蝠"><a href="#蝙蝠" class="headerlink" title="蝙蝠"></a>蝙蝠</h3><video id="video" controls="" preload="none">
<source id="mp4" src="https://dlink.host/sharepoint/aHR0cHM6Ly9zYWludDEzMzctbXkuc2hhcmVwb2ludC5jb20vOnY6L2cvcGVyc29uYWwvZHV6aHVvX3NhaW50MTMzN19vbm1pY3Jvc29mdF9jb20vRVo1Ylc3YkdBWlJKaXVMYi1BZXhEbllCcnFkOHJFODdKSDZOYzV1blYwZ1E5Zz9lPTlXYUZkbA.mp4" type="video/mp4">
</video>

<h3 id="冰龙"><a href="#冰龙" class="headerlink" title="冰龙"></a>冰龙</h3><video id="video" controls="" preload="none">
<source id="mp4" src="https://dlink.host/sharepoint/aHR0cHM6Ly9zYWludDEzMzctbXkuc2hhcmVwb2ludC5jb20vOnY6L2cvcGVyc29uYWwvZHV6aHVvX3NhaW50MTMzN19vbm1pY3Jvc29mdF9jb20vRVhObWVhdXBhTWhCa2J5aEFGSzF3WElCcFVVS2hnaUNld2VnSDRLZGhCQ2ZWdz9lPXZCRWtpYg.mp4" type="video/mp4">
</video>      

<h3 id="冰魂"><a href="#冰魂" class="headerlink" title="冰魂"></a>冰魂</h3><video id="video" controls="" preload="none">
<source id="mp4" src="https://dlink.host/sharepoint/aHR0cHM6Ly9zYWludDEzMzctbXkuc2hhcmVwb2ludC5jb20vOnY6L2cvcGVyc29uYWwvZHV6aHVvX3NhaW50MTMzN19vbm1pY3Jvc29mdF9jb20vRVhuSFNGMXQxbnRNajRzT3diaHhLazRCZHdNTDF1cmt0UUtCcGxGVTc4bFFRdz9lPUtiZUQ5Yw.mp4" type="video/mp4">
</video>     

<h3 id="冰女"><a href="#冰女" class="headerlink" title="冰女"></a>冰女</h3><video id="video" controls="" preload="none">
<source id="mp4" src="https://dlink.host/sharepoint/aHR0cHM6Ly9zYWludDEzMzctbXkuc2hhcmVwb2ludC5jb20vOnY6L2cvcGVyc29uYWwvZHV6aHVvX3NhaW50MTMzN19vbm1pY3Jvc29mdF9jb20vRWF3UW1ab1R3MzFQc1RGUE44V2V2LUFCTVdROTBjdVp5ZVkzV0lVVW5MaFRjUT9lPVN6Vkk4MA.mp4" type="video/mp4">
</video>

<h3 id="船长"><a href="#船长" class="headerlink" title="船长"></a>船长</h3><video id="video" controls="" preload="none">
<source id="mp4" src="https://dlink.host/sharepoint/aHR0cHM6Ly9zYWludDEzMzctbXkuc2hhcmVwb2ludC5jb20vOnY6L2cvcGVyc29uYWwvZHV6aHVvX3NhaW50MTMzN19vbm1pY3Jvc29mdF9jb20vRVE2SEFQQlQ5eXRIdi1DbV9wSWpYR29CUHRQRjVXYWtJcFFVMkFtR3JFektFZz9lPVJDaHZNcA.mp4" type="video/mp4">
</video>

<h3 id="大牛"><a href="#大牛" class="headerlink" title="大牛"></a>大牛</h3><video id="video" controls="" preload="none">
<source id="mp4" src="https://dlink.host/sharepoint/aHR0cHM6Ly9zYWludDEzMzctbXkuc2hhcmVwb2ludC5jb20vOnY6L2cvcGVyc29uYWwvZHV6aHVvX3NhaW50MTMzN19vbm1pY3Jvc29mdF9jb20vRVh3VTItVGJUb2RBbXh6akNEWkVtbW9CQm1vTTVYOVJKazZRSG9NYzBPREN6dz9lPVFuV0hONQ.mp4" type="video/mp4">
</video>

<h3 id="电狗"><a href="#电狗" class="headerlink" title="电狗"></a>电狗</h3><video id="video" controls="" preload="none">
<source id="mp4" src="https://dlink.host/sharepoint/aHR0cHM6Ly9zYWludDEzMzctbXkuc2hhcmVwb2ludC5jb20vOnY6L2cvcGVyc29uYWwvZHV6aHVvX3NhaW50MTMzN19vbm1pY3Jvc29mdF9jb20vRWNJaHBNR1RBcEJGanZVWjJpcWpHbmtCTkJHOFRxZ1lpVFpPWkdaTm85VHBzQT9lPW1YanZxTQ.mp4" type="video/mp4">
</video>

<h3 id="电棍"><a href="#电棍" class="headerlink" title="电棍"></a>电棍</h3><video id="video" controls="" preload="none">
<source id="mp4" src="https://dlink.host/sharepoint/aHR0cHM6Ly9zYWludDEzMzctbXkuc2hhcmVwb2ludC5jb20vOnY6L2cvcGVyc29uYWwvZHV6aHVvX3NhaW50MTMzN19vbm1pY3Jvc29mdF9jb20vRVRJUGpHbVl5bjFNdVBOc0tpSjA0d0FCSzVhTkpqLXNkWXZEU0hzWEZ2QXVCQT9lPVR5WmhISw.mp4" type="video/mp4">
</video>

<h3 id="大圣"><a href="#大圣" class="headerlink" title="大圣"></a>大圣</h3><video id="video" controls="" preload="none">
<source id="mp4" src="https://dlink.host/sharepoint/aHR0cHM6Ly9zYWludDEzMzctbXkuc2hhcmVwb2ludC5jb20vOnY6L2cvcGVyc29uYWwvZHV6aHVvX3NhaW50MTMzN19vbm1pY3Jvc29mdF9jb20vRWNaaGc3azV1ZjlOc3dWWWljZGVEQXNCRWRORjFaZExOaGE0YXNuY0dTSVdZUT9lPXF1UnFnUQ.mp4" type="video/mp4">
</video>

<h3 id="毒狗"><a href="#毒狗" class="headerlink" title="毒狗"></a>毒狗</h3><video id="video" controls="" preload="none">
<source id="mp4" src="https://dlink.host/sharepoint/aHR0cHM6Ly9zYWludDEzMzctbXkuc2hhcmVwb2ludC5jb20vOnY6L2cvcGVyc29uYWwvZHV6aHVvX3NhaW50MTMzN19vbm1pY3Jvc29mdF9jb20vRVE4TDBlTlpDWVJNcHdIMzl0a3Bicm9Cc3V1Yk9WbnZMT2hielotU2xhRExqdz9lPW5XUkNvVg.mp4" type="video/mp4">
</video>

<h3 id="光法"><a href="#光法" class="headerlink" title="光法"></a>光法</h3><video id="video" controls="" preload="none">
<source id="mp4" src="https://dlink.host/sharepoint/aHR0cHM6Ly9zYWludDEzMzctbXkuc2hhcmVwb2ludC5jb20vOnY6L2cvcGVyc29uYWwvZHV6aHVvX3NhaW50MTMzN19vbm1pY3Jvc29mdF9jb20vRVR4Z1d5ZTMxV05MdWdQakdzU0JFNEVCT2lCcWRCdGN6VXFwZ0Q5dGIxdkk0Zz9lPUpBOEV1Yg.mp4" type="video/mp4">
</video>

<h3 id="发条"><a href="#发条" class="headerlink" title="发条"></a>发条</h3><video id="video" controls="" preload="none">
<source id="mp4" src="https://dlink.host/sharepoint/aHR0cHM6Ly9zYWludDEzMzctbXkuc2hhcmVwb2ludC5jb20vOnY6L2cvcGVyc29uYWwvZHV6aHVvX3NhaW50MTMzN19vbm1pY3Jvc29mdF9jb20vRWRPYzhNbHdZcWhDaDdMX0o1cS1RTEFCbW1KQXh0bzRqQkU1cndJSUZjYVRlQT9lPVhFMFMzUA.mp4" type="video/mp4">
</video>

<h3 id="海民"><a href="#海民" class="headerlink" title="海民"></a>海民</h3><video id="video" controls="" preload="none">
<source id="mp4" src="https://dlink.host/sharepoint/aHR0cHM6Ly9zYWludDEzMzctbXkuc2hhcmVwb2ludC5jb20vOnY6L2cvcGVyc29uYWwvZHV6aHVvX3NhaW50MTMzN19vbm1pY3Jvc29mdF9jb20vRVdhNlVmalJ4OFZIclpFVUh2cGN0N3NCRGlhUzJRUGJyZDFxV3otcE9aa3pFdz9lPXVRWkJ6aA.mp4" type="video/mp4">
</video>

<h3 id="火枪"><a href="#火枪" class="headerlink" title="火枪"></a>火枪</h3><video id="video" controls="" preload="none">
<source id="mp4" src="https://dlink.host/sharepoint/aHR0cHM6Ly9zYWludDEzMzctbXkuc2hhcmVwb2ludC5jb20vOnY6L2cvcGVyc29uYWwvZHV6aHVvX3NhaW50MTMzN19vbm1pY3Jvc29mdF9jb20vRVl2UmVyQk1GZ3BEa2c2emZxMlloNzBCRW9aR2JiRUUwMjN4bG85MmFhYUNlUT9lPUZ1TTVwTg.mp4" type="video/mp4">
</video>

<h3 id="剧毒"><a href="#剧毒" class="headerlink" title="剧毒"></a>剧毒</h3><video id="video" controls="" preload="none">
<source id="mp4" src="https://dlink.host/sharepoint/aHR0cHM6Ly9zYWludDEzMzctbXkuc2hhcmVwb2ludC5jb20vOnY6L2cvcGVyc29uYWwvZHV6aHVvX3NhaW50MTMzN19vbm1pY3Jvc29mdF9jb20vRWVSODlyMGV0eWxFaERiUERmSHRya1VCTk5TUDNRRzd5Z2piejRicVlRc1hyQT9lPTVrMTFJTw.mp4" type="video/mp4">
</video>

<h3 id="双头龙"><a href="#双头龙" class="headerlink" title="双头龙"></a>双头龙</h3><video id="video" controls="" preload="none">
<source id="mp4" src="https://dlink.host/sharepoint/aHR0cHM6Ly9zYWludDEzMzctbXkuc2hhcmVwb2ludC5jb20vOnY6L2cvcGVyc29uYWwvZHV6aHVvX3NhaW50MTMzN19vbm1pY3Jvc29mdF9jb20vRVdpajNrQ0xWajVIb0tsNGlLR28wRVVCLXpZT3dCZnE1bXRVZEszeFJ3Tlpudz9lPXByVjZKeQ.mp4" type="video/mp4">
</video>

<h3 id="小松鼠"><a href="#小松鼠" class="headerlink" title="小松鼠"></a>小松鼠</h3><video id="video" controls="" preload="none">
<source id="mp4" src="https://dlink.host/sharepoint/aHR0cHM6Ly9zYWludDEzMzctbXkuc2hhcmVwb2ludC5jb20vOnY6L2cvcGVyc29uYWwvZHV6aHVvX3NhaW50MTMzN19vbm1pY3Jvc29mdF9jb20vRVF4TWRlbUJEZlZCbGZRYWRMZUZnNFlCVmJYeHF6cEt1RHkzMFNXa1U5SWZVUT9lPTNrRkMyeg.mp4" type="video/mp4">
</video>

<h3 id="土猫"><a href="#土猫" class="headerlink" title="土猫"></a>土猫</h3><video id="video" controls="" preload="none">
<source id="mp4" src="https://dlink.host/sharepoint/aHR0cHM6Ly9zYWludDEzMzctbXkuc2hhcmVwb2ludC5jb20vOnY6L2cvcGVyc29uYWwvZHV6aHVvX3NhaW50MTMzN19vbm1pY3Jvc29mdF9jb20vRWFJWHhpSm9hT0ZEbHpaT2YyOTZnOVVCcTJzUTJ4VmNPUjByTjBVeS1Xb244dz9lPWZmOFVxaw.mp4" type="video/mp4">
</video>

<h3 id="先知"><a href="#先知" class="headerlink" title="先知"></a>先知</h3><video id="video" controls="" preload="none">
<source id="mp4" src="https://dlink.host/sharepoint/aHR0cHM6Ly9zYWludDEzMzctbXkuc2hhcmVwb2ludC5jb20vOnY6L2cvcGVyc29uYWwvZHV6aHVvX3NhaW50MTMzN19vbm1pY3Jvc29mdF9jb20vRWI2amJ0Ukt1ZlZIZ3dtN1hTcTdMR2tCRVlmQmV1SFNDeVg5NlJORHF3TlNlQT9lPU9WOGhvNw.mp4" type="video/mp4">
</video>

<h3 id="血魔"><a href="#血魔" class="headerlink" title="血魔"></a>血魔</h3><video id="video" controls="" preload="none">
<source id="mp4" src="https://dlink.host/sharepoint/aHR0cHM6Ly9zYWludDEzMzctbXkuc2hhcmVwb2ludC5jb20vOnY6L2cvcGVyc29uYWwvZHV6aHVvX3NhaW50MTMzN19vbm1pY3Jvc29mdF9jb20vRVl4SmpFSHd5cEZMaU0taUhIbnBrTGdCRURPcjU1T0dJeGNKemt1Ti1zZWRuQT9lPWVubHlhNw.mp4" type="video/mp4">
</video>

<h3 id="幽鬼"><a href="#幽鬼" class="headerlink" title="幽鬼"></a>幽鬼</h3><video id="video" controls="" preload="none">
<source id="mp4" src="https://dlink.host/sharepoint/aHR0cHM6Ly9zYWludDEzMzctbXkuc2hhcmVwb2ludC5jb20vOnY6L2cvcGVyc29uYWwvZHV6aHVvX3NhaW50MTMzN19vbm1pY3Jvc29mdF9jb20vRVpCdUk1UHBoa2xBbEZJLUR1ZFdBdGdCemtiYklJRnFEeWF4OTlWVnNmbFhTUT9lPW1Bb1BhVA.mp4" type="video/mp4">
</video>

<h3 id="炸弹人"><a href="#炸弹人" class="headerlink" title="炸弹人"></a>炸弹人</h3><video id="video" controls="" preload="none">
<source id="mp4" src="https://dlink.host/sharepoint/aHR0cHM6Ly9zYWludDEzMzctbXkuc2hhcmVwb2ludC5jb20vOnY6L2cvcGVyc29uYWwvZHV6aHVvX3NhaW50MTMzN19vbm1pY3Jvc29mdF9jb20vRWZSY2NRQWtaeVJDbVNSN2RpbHZoZTRCZ1dFMkRRTkxiUDBTMXFEZzB1TEtBUT9lPW0zdUZPZA.mp4" type="video/mp4">
</video>

<h3 id="puck"><a href="#puck" class="headerlink" title="puck"></a>puck</h3><video id="video" controls="" preload="none">
<source id="mp4" src="https://dlink.host/sharepoint/aHR0cHM6Ly9zYWludDEzMzctbXkuc2hhcmVwb2ludC5jb20vOnY6L2cvcGVyc29uYWwvZHV6aHVvX3NhaW50MTMzN19vbm1pY3Jvc29mdF9jb20vRVo0MF9QQ1R2Q2hDcTFtVmR3NDR0WU1CY1QyYUNxVTRRNm9JM1M2N1AxclBUZz9lPVo2anh3TA.mp4" type="video/mp4">
</video>

<h3 id="TA"><a href="#TA" class="headerlink" title="TA"></a>TA</h3><video id="video" controls="" preload="none">
<source id="mp4" src="https://dlink.host/sharepoint/aHR0cHM6Ly9zYWludDEzMzctbXkuc2hhcmVwb2ludC5jb20vOnY6L2cvcGVyc29uYWwvZHV6aHVvX3NhaW50MTMzN19vbm1pY3Jvc29mdF9jb20vRWN6YnFTVmd3MTVHdWhIQURLQWwzQzhCRXJuaWE0QXRIR01aQ25nZ2czb0tudz9lPVZjdkMwdw.mp4" type="video/mp4">
</video>

<h3 id="萨尔"><a href="#萨尔" class="headerlink" title="萨尔"></a>萨尔</h3><video id="video" controls="" preload="none">
<source id="mp4" src="https://dlink.host/sharepoint/aHR0cHM6Ly9zYWludDEzMzctbXkuc2hhcmVwb2ludC5jb20vOnY6L2cvcGVyc29uYWwvZHV6aHVvX3NhaW50MTMzN19vbm1pY3Jvc29mdF9jb20vRVJLaVZ6ajZEbEZDdnpNRnJrZWNxQ29Cc2pSMDZzRVVWaWtJU2FLNjFLNk94Zz9lPWZNdDdGZw.jpg" type="video/mp4">
</video>
]]></content>
      <tags>
        <tag>dota2</tag>
        <tag>刀塔</tag>
      </tags>
  </entry>
  <entry>
    <title>dota2单排病历本</title>
    <url>/2024/09/27/dota2%E5%8D%95%E6%8E%92%E7%97%85%E5%8E%86%E6%9C%AC/</url>
    <content><![CDATA[<h3 id="2024-09-26"><a href="#2024-09-26" class="headerlink" title="2024.09.26"></a>2024.09.26</h3><ol>
<li>熊德 大败 PA天怒串起来了</li>
<li>熊德 大败 酱油风行对线抢刀不勾兵不推塔</li>
<li>熊德 输 我是菜逼带错命石了</li>
<li>熊德 输 节奏不对</li>
<li>熊德 宰猪 拆塔老快了</li>
</ol>
<h3 id="2024-09-27"><a href="#2024-09-27" class="headerlink" title="2024.09.27"></a>2024.09.27</h3><ol>
<li>炼金 被火枪保享福 gg</li>
<li>熊德 畜生宙斯还在玩魔晶分身斧 敌法无输出</li>
<li>熊德 4v5打了40min两个盾拆掉高地</li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>防火墙 - Firewalld</title>
    <url>/2022/02/20/firewalld/</url>
    <content><![CDATA[<h1 id="防火墙-Firewalld"><a href="#防火墙-Firewalld" class="headerlink" title="防火墙 - Firewalld"></a>防火墙 - Firewalld</h1><h2 id="一、firewalld-服务命令"><a href="#一、firewalld-服务命令" class="headerlink" title="一、firewalld 服务命令"></a>一、firewalld 服务命令</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl enable firewalld.service  # 开启服务（开机自动启动服务）</span><br><span class="line">systemctl disable firewalld.service # 关闭服务（开机不会自动启动服务）</span><br><span class="line">systemctl start firewalld.service   # 启动服务</span><br><span class="line">systemctl stop firewalld.service    # 停止服务</span><br><span class="line">systemctl restart firewalld.service # 重启服务</span><br><span class="line">systemctl reload firewalld.service  # 重新载入配置</span><br><span class="line">systemctl status firewalld.service  # 查看服务状态</span><br></pre></td></tr></table></figure>

<h2 id="二、firewall-cmd-命令"><a href="#二、firewall-cmd-命令" class="headerlink" title="二、firewall-cmd 命令"></a>二、firewall-cmd 命令</h2><p><code>firewall-cmd</code> 命令用于配置防火墙。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">firewall-cmd --version                    # 查看版本</span><br><span class="line">firewall-cmd --help                       # 查看帮助</span><br><span class="line">firewall-cmd --state                      # 显示状态</span><br><span class="line">firewall-cmd --reload                     # 更新防火墙规则</span><br><span class="line">firewall-cmd --get-active-zones           # 查看区域信息</span><br><span class="line">firewall-cmd --get-zone-of-interface=eth0 # 查看指定接口所属区域</span><br><span class="line">firewall-cmd --panic-on                   # 拒绝所有包</span><br><span class="line">firewall-cmd --panic-off                  # 取消拒绝状态</span><br><span class="line">firewall-cmd --query-panic                # 查看是否拒绝</span><br><span class="line"></span><br><span class="line">firewall-cmd --zone=public --list-ports   # 查看所有打开的端口</span><br><span class="line">firewall-cmd --zone=public --query-port=80/tcp # 查看是否有开放的 80 TCP 端口</span><br><span class="line">firewall-cmd --zone=public --add-port=8080/tcp --permanent # 添加开放端口（--permanent永久生效，没有此参数重启后失效）</span><br><span class="line">firewall-cmd --zone=public --remove-port=80/tcp --permanent # 永久删除开放的 80 TCP 端口</span><br></pre></td></tr></table></figure>

<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul>
<li><a href="https://www.cnblogs.com/moxiaoan/p/5683743.html">CentOS7 使用 firewalld 打开关闭防火墙与端口</a></li>
</ul>
]]></content>
      <tags>
        <tag>linux</tag>
        <tag>Firewalld</tag>
      </tags>
  </entry>
  <entry>
    <title>解决sqlacodegen2.3.0.post1在python3.11下使用报错</title>
    <url>/2024/06/05/fix-sqlacodegen-2.3.0.post1-on-python3.11.py/</url>
    <content><![CDATA[<h2 id="错误提示"><a href="#错误提示" class="headerlink" title="错误提示"></a>错误提示</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;/home/duzhuo/src/scraper-test/.venv/bin/sqlacodegen&quot;, line 5, in &lt;module&gt;</span><br><span class="line">    from sqlacodegen.main import main</span><br><span class="line">  File &quot;/home/duzhuo/src/scraper-test/.venv/lib/python3.11/site-packages/sqlacodegen/main.py&quot;, line 11, in &lt;module&gt;</span><br><span class="line">    from sqlacodegen.codegen import CodeGenerator</span><br><span class="line">  File &quot;/home/duzhuo/src/scraper-test/.venv/lib/python3.11/site-packages/sqlacodegen/codegen.py&quot;, line 9, in &lt;module&gt;</span><br><span class="line">    from inspect import ArgSpec</span><br><span class="line">ImportError: cannot import name &#x27;ArgSpec&#x27; from &#x27;inspect&#x27; (/usr/lib/python3.11/inspect.py)</span><br></pre></td></tr></table></figure>

<p>来自GPT的错误分析：您遇到的错误消息是由于 <code>inspect.ArgSpec</code> 类在 Python 3.11 中被移除了。<code>ArgSpec</code> 类在 Python 3.5 中已被弃用，并在 Python 3.11 中被移除。</p>
<p>当前使用的sqlacodegen版本为2.3.0.post1。是pypi上面的默认release版本。</p>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>编辑 <code>.venv/lib/python3.11/site-packages/sqlacodegen/codegen.py</code></p>
<p>找到<code>from inspect import ArgSpec</code>替换成<code>from inspect import FullArgSpec as ArgSpec</code></p>
<p>或者升级sqlacodegen版本到3.0.0 rc3以上。来源：<a href="https://github.com/agronholm/sqlacodegen/issues/239#issuecomment-1871370700">https://github.com/agronholm/sqlacodegen/issues/239#issuecomment-1871370700</a></p>
]]></content>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2022/01/15/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>Iptables 应用</title>
    <url>/2022/02/20/iptables/</url>
    <content><![CDATA[<h1 id="Iptables-应用"><a href="#Iptables-应用" class="headerlink" title="Iptables 应用"></a>Iptables 应用</h1><blockquote>
<p><em>iptables</em> 是一个配置 Linux 内核 <a href="https://wiki.archlinux.org/index.php/Firewall">防火墙</a> 的命令行工具，是 <a href="https://en.wikipedia.org/wiki/Netfilter">netfilter</a> 项目的一部分。 可以直接配置，也可以通过许多前端和图形界面配置。</p>
<p>iptables 也经常代指该内核级防火墙。iptables 用于 <a href="https://en.wikipedia.org/wiki/Ipv4">ipv4</a>，<em>ip6tables</em> 用于 <a href="https://en.wikipedia.org/wiki/Ipv6">ipv6</a>。</p>
<p><a href="https://wiki.archlinux.org/index.php/Nftables">nftables</a> 已经包含在 <a href="http://www.phoronix.com/scan.php?page=news_item&px=MTQ5MDU">Linux kernel 3.13</a> 中，以后会取代 iptables 成为主要的 Linux 防火墙工具。</p>
<p>环境：CentOS7</p>
</blockquote>
<h2 id="1-简介"><a href="#1-简介" class="headerlink" title="1. 简介"></a>1. 简介</h2><p><strong>iptables 可以检测、修改、转发、重定向和丢弃 IPv4 数据包</strong>。</p>
<p>过滤 IPv4 数据包的代码已经内置于内核中，并且按照不同的目的被组织成 <strong>表</strong> 的集合。<strong>表</strong> 由一组预先定义的 <strong>链</strong> 组成，<strong>链</strong>包含遍历顺序规则。每一条规则包含一个谓词的潜在匹配和相应的动作（称为 <strong>目标</strong>），如果谓词为真，该动作会被执行。也就是说条件匹配。</p>
<h2 id="2-安装-iptables"><a href="#2-安装-iptables" class="headerlink" title="2. 安装 iptables"></a>2. 安装 iptables</h2><p>（1）禁用 firewalld</p>
<p>CentOS 7 上默认安装了 firewalld 作为防火墙，使用 iptables 建议关闭并禁用 firewalld。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld</span><br></pre></td></tr></table></figure>

<p>（2）安装 iptables</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install -y iptables-services</span><br></pre></td></tr></table></figure>

<p>（3）服务管理</p>
<ul>
<li>查看服务状态：<code>systemctl status iptables</code></li>
<li>启用服务：<code>systemctl enable iptables</code></li>
<li>禁用服务：<code>systemctl disable iptables</code></li>
<li>启动服务：<code>systemctl start iptables</code></li>
<li>重启服务：<code>systemctl restart iptables</code></li>
<li>关闭服务: <code>systemctl stop iptables</code></li>
</ul>
<h2 id="3-命令"><a href="#3-命令" class="headerlink" title="3. 命令"></a>3. 命令</h2><p>基本语法：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">iptables(选项)(参数)</span><br></pre></td></tr></table></figure>

<p>基本选项说明：</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>-P</td>
<td>设置默认策略:iptables -P INPUT (DROP</td>
</tr>
<tr>
<td>-F</td>
<td>清空规则链</td>
</tr>
<tr>
<td>-L</td>
<td>查看规则链</td>
</tr>
<tr>
<td>-A</td>
<td>在规则链的末尾加入新规则</td>
</tr>
<tr>
<td>-I</td>
<td>num 在规则链的头部加入新规则</td>
</tr>
<tr>
<td>-D</td>
<td>num 删除某一条规则</td>
</tr>
<tr>
<td>-s</td>
<td>匹配来源地址 IP&#x2F;MASK，加叹号”!”表示除这个 IP 外。</td>
</tr>
<tr>
<td>-d</td>
<td>匹配目标地址</td>
</tr>
<tr>
<td>-i</td>
<td>网卡名称 匹配从这块网卡流入的数据</td>
</tr>
<tr>
<td>-o</td>
<td>网卡名称 匹配从这块网卡流出的数据</td>
</tr>
<tr>
<td>-p</td>
<td>匹配协议,如 tcp,udp,icmp</td>
</tr>
<tr>
<td>–dport num</td>
<td>匹配目标端口号</td>
</tr>
<tr>
<td>–sport num</td>
<td>匹配来源端口号</td>
</tr>
</tbody></table>
<p>顺序：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">iptables -t 表名 &lt;-A/I/D/R&gt; 规则链名 [规则号] &lt;-i/o 网卡名&gt; -p 协议名 &lt;-s 源IP/源子网&gt; --sport 源端口 &lt;-d 目标IP/目标子网&gt; --dport 目标端口 -j 动作</span><br></pre></td></tr></table></figure>

<h2 id="4-iptables-示例"><a href="#4-iptables-示例" class="headerlink" title="4. iptables 示例"></a>4. iptables 示例</h2><h3 id="4-1-清空当前的所有规则和计数"><a href="#4-1-清空当前的所有规则和计数" class="headerlink" title="4.1. 清空当前的所有规则和计数"></a>4.1. 清空当前的所有规则和计数</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">iptables -F  # 清空所有的防火墙规则</span><br><span class="line">iptables -X  # 删除用户自定义的空链</span><br><span class="line">iptables -Z  # 清空计数</span><br></pre></td></tr></table></figure>

<h3 id="4-2-配置允许-ssh-端口连接"><a href="#4-2-配置允许-ssh-端口连接" class="headerlink" title="4.2. 配置允许 ssh 端口连接"></a>4.2. 配置允许 ssh 端口连接</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">iptables -A INPUT -s 192.168.1.0/24 -p tcp --dport 22 -j ACCEPT</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">22为你的ssh端口， -s 192.168.1.0/24表示允许这个网段的机器来连接，其它网段的ip地址是登陆不了你的机器的。 -j ACCEPT表示接受这样的请求</span></span><br></pre></td></tr></table></figure>

<h3 id="4-3-允许本地回环地址可以正常使用"><a href="#4-3-允许本地回环地址可以正常使用" class="headerlink" title="4.3. 允许本地回环地址可以正常使用"></a>4.3. 允许本地回环地址可以正常使用</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">iptables -A INPUT -i lo -j ACCEPT</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">本地圆环地址就是那个127.0.0.1，是本机上使用的,它进与出都设置为允许</span></span><br><span class="line">iptables -A OUTPUT -o lo -j ACCEPT</span><br></pre></td></tr></table></figure>

<h3 id="4-4-设置默认的规则"><a href="#4-4-设置默认的规则" class="headerlink" title="4.4. 设置默认的规则"></a>4.4. 设置默认的规则</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">iptables -P INPUT DROP # 配置默认的不让进</span><br><span class="line">iptables -P FORWARD DROP # 默认的不允许转发</span><br><span class="line">iptables -P OUTPUT ACCEPT # 默认的可以出去</span><br></pre></td></tr></table></figure>

<h3 id="4-5-配置白名单"><a href="#4-5-配置白名单" class="headerlink" title="4.5. 配置白名单"></a>4.5. 配置白名单</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">iptables -A INPUT -p all -s 192.168.1.0/24 -j ACCEPT  # 允许机房内网机器可以访问</span><br><span class="line">iptables -A INPUT -p all -s 192.168.140.0/24 -j ACCEPT  # 允许机房内网机器可以访问</span><br><span class="line">iptables -A INPUT -p tcp -s 183.121.3.7 --dport 3380 -j ACCEPT # 允许183.121.3.7访问本机的3380端口</span><br></pre></td></tr></table></figure>

<h3 id="4-6-开启相应的服务端口"><a href="#4-6-开启相应的服务端口" class="headerlink" title="4.6. 开启相应的服务端口"></a>4.6. 开启相应的服务端口</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">iptables -A INPUT -p tcp --dport 80 -j ACCEPT # 开启80端口，因为web对外都是这个端口</span><br><span class="line">iptables -A INPUT -p icmp --icmp-type 8 -j ACCEPT # 允许被ping</span><br><span class="line">iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT # 已经建立的连接得让它进来</span><br></pre></td></tr></table></figure>

<h3 id="4-7-保存规则到配置文件中"><a href="#4-7-保存规则到配置文件中" class="headerlink" title="4.7. 保存规则到配置文件中"></a>4.7. 保存规则到配置文件中</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cp /etc/sysconfig/iptables /etc/sysconfig/iptables.bak # 任何改动之前先备份，请保持这一优秀的习惯</span><br><span class="line">iptables-save &gt; /etc/sysconfig/iptables</span><br><span class="line">cat /etc/sysconfig/iptables</span><br></pre></td></tr></table></figure>

<h3 id="4-8-列出已设置的规则"><a href="#4-8-列出已设置的规则" class="headerlink" title="4.8. 列出已设置的规则"></a>4.8. 列出已设置的规则</h3><blockquote>
<p>iptables -L [-t 表名][链名]</p>
</blockquote>
<ul>
<li>四个表名 <code>raw</code>，<code>nat</code>，<code>filter</code>，<code>mangle</code></li>
<li>五个规则链名 <code>INPUT</code>、<code>OUTPUT</code>、<code>FORWARD</code>、<code>PREROUTING</code>、<code>POSTROUTING</code></li>
<li>filter 表包含<code>INPUT</code>、<code>OUTPUT</code>、<code>FORWARD</code>三个规则链</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">iptables -L -t nat                  # 列出 nat 上面的所有规则</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">           ^ -t 参数指定，必须是 raw， nat，filter，mangle 中的一个</span></span><br><span class="line">iptables -L -t nat  --line-numbers  # 规则带编号</span><br><span class="line">iptables -L INPUT</span><br><span class="line"></span><br><span class="line">iptables -L -nv  # 查看，这个列表看起来更详细</span><br></pre></td></tr></table></figure>

<h3 id="4-9-清除已有规则"><a href="#4-9-清除已有规则" class="headerlink" title="4.9. 清除已有规则"></a>4.9. 清除已有规则</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">iptables -F INPUT  # 清空指定链 INPUT 上面的所有规则</span><br><span class="line">iptables -X INPUT  # 删除指定的链，这个链必须没有被其它任何规则引用，而且这条上必须没有任何规则。</span><br><span class="line">                   # 如果没有指定链名，则会删除该表中所有非内置的链。</span><br><span class="line">iptables -Z INPUT  # 把指定链，或者表中的所有链上的所有计数器清零。</span><br></pre></td></tr></table></figure>

<h3 id="4-10-删除已添加的规则"><a href="#4-10-删除已添加的规则" class="headerlink" title="4.10. 删除已添加的规则"></a>4.10. 删除已添加的规则</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">添加一条规则</span></span><br><span class="line">iptables -A INPUT -s 192.168.1.5 -j DROP</span><br></pre></td></tr></table></figure>

<p>将所有 iptables 以序号标记显示，执行：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">iptables -L -n --line-numbers</span><br></pre></td></tr></table></figure>

<p>比如要删除 INPUT 里序号为 8 的规则，执行：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">iptables -D INPUT 8</span><br></pre></td></tr></table></figure>

<h3 id="4-11-开放指定的端口"><a href="#4-11-开放指定的端口" class="headerlink" title="4.11. 开放指定的端口"></a>4.11. 开放指定的端口</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">iptables -A INPUT -s 127.0.0.1 -d 127.0.0.1 -j ACCEPT               #允许本地回环接口(即运行本机访问本机)</span><br><span class="line">iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT    #允许已建立的或相关连的通行</span><br><span class="line">iptables -A OUTPUT -j ACCEPT         #允许所有本机向外的访问</span><br><span class="line">iptables -A INPUT -p tcp --dport 22 -j ACCEPT    #允许访问22端口</span><br><span class="line">iptables -A INPUT -p tcp --dport 80 -j ACCEPT    #允许访问80端口</span><br><span class="line">iptables -A INPUT -p tcp --dport 21 -j ACCEPT    #允许ftp服务的21端口</span><br><span class="line">iptables -A INPUT -p tcp --dport 20 -j ACCEPT    #允许FTP服务的20端口</span><br><span class="line">iptables -A INPUT -j reject       #禁止其他未允许的规则访问</span><br><span class="line">iptables -A FORWARD -j REJECT     #禁止其他未允许的规则访问</span><br></pre></td></tr></table></figure>

<h3 id="4-12-屏蔽-IP"><a href="#4-12-屏蔽-IP" class="headerlink" title="4.12. 屏蔽 IP"></a>4.12. 屏蔽 IP</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">iptables -A INPUT -p tcp -m tcp -s 192.168.0.8 -j DROP  # 屏蔽恶意主机（比如，192.168.0.8</span><br><span class="line">iptables -I INPUT -s 123.45.6.7 -j DROP       #屏蔽单个IP的命令</span><br><span class="line">iptables -I INPUT -s 123.0.0.0/8 -j DROP      #封整个段即从123.0.0.1到123.255.255.254的命令</span><br><span class="line">iptables -I INPUT -s 124.45.0.0/16 -j DROP    #封IP段即从123.45.0.1到123.45.255.254的命令</span><br><span class="line">iptables -I INPUT -s 123.45.6.0/24 -j DROP    #封IP段即从123.45.6.1到123.45.6.254的命令是</span><br></pre></td></tr></table></figure>

<h3 id="4-13-指定数据包出去的网络接口"><a href="#4-13-指定数据包出去的网络接口" class="headerlink" title="4.13. 指定数据包出去的网络接口"></a>4.13. 指定数据包出去的网络接口</h3><p>只对 OUTPUT，FORWARD，POSTROUTING 三个链起作用。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">iptables -A FORWARD -o eth0</span><br></pre></td></tr></table></figure>

<h3 id="4-14-查看已添加的规则"><a href="#4-14-查看已添加的规则" class="headerlink" title="4.14. 查看已添加的规则"></a>4.14. 查看已添加的规则</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">iptables -L -n -v</span><br><span class="line">Chain INPUT (policy DROP 48106 packets, 2690K bytes)</span><br><span class="line"> pkts bytes target     prot opt in     out     source               destination</span><br><span class="line"> 5075  589K ACCEPT     all  --  lo     *       0.0.0.0/0            0.0.0.0/0</span><br><span class="line"> 191K   90M ACCEPT     tcp  --  *      *       0.0.0.0/0            0.0.0.0/0           tcp dpt:22</span><br><span class="line">1499K  133M ACCEPT     tcp  --  *      *       0.0.0.0/0            0.0.0.0/0           tcp dpt:80</span><br><span class="line">4364K 6351M ACCEPT     all  --  *      *       0.0.0.0/0            0.0.0.0/0           state RELATED,ESTABLISHED</span><br><span class="line"> 6256  327K ACCEPT     icmp --  *      *       0.0.0.0/0            0.0.0.0/0</span><br><span class="line"></span><br><span class="line">Chain FORWARD (policy ACCEPT 0 packets, 0 bytes)</span><br><span class="line"> pkts bytes target     prot opt in     out     source               destination</span><br><span class="line"></span><br><span class="line">Chain OUTPUT (policy ACCEPT 3382K packets, 1819M bytes)</span><br><span class="line"> pkts bytes target     prot opt in     out     source               destination</span><br><span class="line"> 5075  589K ACCEPT     all  --  *      lo      0.0.0.0/0            0.0.0.0/0</span><br></pre></td></tr></table></figure>

<h3 id="4-15-启动网络转发规则"><a href="#4-15-启动网络转发规则" class="headerlink" title="4.15. 启动网络转发规则"></a>4.15. 启动网络转发规则</h3><p>公网<code>210.14.67.7</code>让内网<code>192.168.188.0/24</code>上网</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">iptables -t nat -A POSTROUTING -s 192.168.188.0/24 -j SNAT --to-source 210.14.67.127</span><br></pre></td></tr></table></figure>

<h3 id="4-16-端口映射"><a href="#4-16-端口映射" class="headerlink" title="4.16. 端口映射"></a>4.16. 端口映射</h3><p>本机的 2222 端口映射到内网 虚拟机的 22 端口</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">iptables -t nat -A PREROUTING -d 210.14.67.127 -p tcp --dport 2222  -j DNAT --to-dest 192.168.188.115:22</span><br></pre></td></tr></table></figure>

<h3 id="4-17-字符串匹配"><a href="#4-17-字符串匹配" class="headerlink" title="4.17. 字符串匹配"></a>4.17. 字符串匹配</h3><p>比如，我们要过滤所有 TCP 连接中的字符串<code>test</code>，一旦出现它我们就终止这个连接，我们可以这么做：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">iptables -A INPUT -p tcp -m string --algo kmp --string &quot;test&quot; -j REJECT --reject-with tcp-reset</span><br><span class="line">iptables -L</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Chain INPUT (policy ACCEPT)</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">target     prot opt <span class="built_in">source</span>               destination</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">REJECT     tcp  --  anywhere             anywhere            STRING match <span class="string">&quot;test&quot;</span> ALGO name kmp TO 65535 reject-with tcp-reset</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># Chain FORWARD (policy ACCEPT)</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">target     prot opt <span class="built_in">source</span>               destination</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># Chain OUTPUT (policy ACCEPT)</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">target     prot opt <span class="built_in">source</span>               destination</span></span><br></pre></td></tr></table></figure>

<h3 id="4-18-阻止-Windows-蠕虫的攻击"><a href="#4-18-阻止-Windows-蠕虫的攻击" class="headerlink" title="4.18. 阻止 Windows 蠕虫的攻击"></a>4.18. 阻止 Windows 蠕虫的攻击</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">iptables -I INPUT -j DROP -p tcp -s 0.0.0.0/0 -m string --algo kmp --string &quot;cmd.exe&quot;</span><br></pre></td></tr></table></figure>

<h3 id="4-19-防止-SYN-洪水攻击"><a href="#4-19-防止-SYN-洪水攻击" class="headerlink" title="4.19. 防止 SYN 洪水攻击"></a>4.19. 防止 SYN 洪水攻击</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">iptables -A INPUT -p tcp --syn -m limit --limit 5/second -j ACCEPT</span><br></pre></td></tr></table></figure>

<h2 id="5-参考资料"><a href="#5-参考资料" class="headerlink" title="5. 参考资料"></a>5. 参考资料</h2><ul>
<li><a href="https://wiki.archlinux.org/index.php/iptables_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">https://wiki.archlinux.org/index.php/iptables_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)</a></li>
<li><a href="https://wangchujiang.com/linux-command/c/iptables.html">https://wangchujiang.com/linux-command/c/iptables.html</a></li>
</ul>
]]></content>
      <tags>
        <tag>linux</tag>
        <tag>Iptables</tag>
      </tags>
  </entry>
  <entry>
    <title>关于jellyfin的api调用</title>
    <url>/2024/07/27/jellyfin-api/</url>
    <content><![CDATA[<p>前两天尝试写一个给jellyfin服务器添加演员信息的程序，读issue和参考别人的代码的时候发现很多验证的步骤比较过时，故自己写一点留档参考。</p>
<p>swagger api文档 <a href="http://localhost:8096/api-docs/swagger">http://localhost:8096/api-docs/swagger</a></p>
<p>在请求头添加验证 <a href="https://gist.github.com/nielsvanvelzen/ea047d9028f676185832e51ffaf12a6f">https://gist.github.com/nielsvanvelzen/ea047d9028f676185832e51ffaf12a6f</a></p>
<p>服务端创建api密钥 <a href="http://localhost:8096/web/#/dashboard/keys">http://localhost:8096/web/#/dashboard/keys</a></p>
<p>userId获取 <a href="http://localhost:8096/web/#/dashboard/users">http://localhost:8096/web/#/dashboard/users</a> 点击你想获得userId的用户并在url的query部分查看</p>
<p>例如 <a href="http://192.168.2.202:8096/web/#/dashboard/users/profile?userId=99e7058d92d34f74bd369728f432a0e2">http://192.168.2.202:8096/web/#/dashboard/users/profile?userId=99e7058d92d34f74bd369728f432a0e2</a></p>
<h2 id="代码参考"><a href="#代码参考" class="headerlink" title="代码参考"></a>代码参考</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">jellyfin_apiKey = <span class="string">&quot;3287930a2ab9422eaa6e1dc4a5f23c24&quot;</span></span><br><span class="line">jellyfin_host = <span class="string">&quot;http://192.168.2.202:8096&quot;</span></span><br><span class="line">jellyfin_userId = <span class="string">&quot;99e7058d92d34f74bd369728f432a0e2&quot;</span></span><br><span class="line"></span><br><span class="line">jellyfin_headers = &#123;</span><br><span class="line">    <span class="string">&#x27;accept&#x27;</span>: <span class="string">&#x27;*/*&#x27;</span>,</span><br><span class="line">    <span class="string">&quot;Authorization&quot;</span>: <span class="string">f&#x27;MediaBrowser Token=&quot;<span class="subst">&#123;jellyfin_apiKey&#125;</span>&quot;&#x27;</span>,</span><br><span class="line">    <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取全部演员信息，返回json</span></span><br><span class="line">response = requests.get(<span class="string">f&#x27;<span class="subst">&#123;jellyfin_host&#125;</span>/Persons?userId=<span class="subst">&#123;jellyfin_userId&#125;</span>&#x27;</span>,headers=jellyfin_headers)</span><br><span class="line"><span class="built_in">dict</span> = response.json()</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">dict</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取单个演员信息</span></span><br><span class="line">actor_name = <span class="string">&#x27;波多野結衣&#x27;</span></span><br><span class="line">response = requests.get(<span class="string">f&#x27;<span class="subst">&#123;jellyfin_host&#125;</span>/Persons/<span class="subst">&#123;actor_name&#125;</span>?userId=<span class="subst">&#123;jellyfin_userId&#125;</span>&#x27;</span>,headers=jellyfin_headers)</span><br><span class="line"><span class="built_in">dict</span> = response.json()</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">dict</span>)</span><br><span class="line"><span class="comment"># 修改演员Overview并提交</span></span><br><span class="line">actor_id = <span class="built_in">dict</span>[<span class="string">&quot;Id&quot;</span>]</span><br><span class="line"><span class="comment"># Overview支持html标签</span></span><br><span class="line"><span class="built_in">dict</span>[<span class="string">&quot;Overview&quot;</span>] = <span class="string">&quot;&quot;&quot;1988年5月24日生まれ&lt;br&gt;</span></span><br><span class="line"><span class="string">身長&lt;b&gt;163cm&lt;/b&gt;&lt;br&gt;</span></span><br><span class="line"><span class="string">&lt;b&gt;Ｂ88cm&lt;/b&gt;&lt;br&gt;</span></span><br><span class="line"><span class="string">&lt;b&gt;Ｗ59cm&lt;/b&gt;&lt;br&gt;</span></span><br><span class="line"><span class="string">&lt;b&gt;Ｈ85cm&lt;/b&gt;&lt;br&gt;</span></span><br><span class="line"><span class="string">ブラ &lt;b&gt;Eカップ&lt;/b&gt;&quot;&quot;&quot;</span></span><br><span class="line">response = requests.post(<span class="string">f&#x27;<span class="subst">&#123;jellyfin_host&#125;</span>/Items/<span class="subst">&#123;actor_id&#125;</span>?userId=<span class="subst">&#123;jellyfin_userId&#125;</span>&#x27;</span>, headers=jellyfin_headers,json=<span class="built_in">dict</span>)</span><br><span class="line"><span class="comment"># 成功返回204</span></span><br><span class="line"><span class="built_in">print</span>(response.status_code)</span><br></pre></td></tr></table></figure>




]]></content>
  </entry>
  <entry>
    <title>Linux 文件目录管理</title>
    <url>/2022/02/20/linux-cli-dir/</url>
    <content><![CDATA[<h1 id="Linux-文件目录管理"><a href="#Linux-文件目录管理" class="headerlink" title="Linux 文件目录管理"></a>Linux 文件目录管理</h1><blockquote>
<p>关键词：<code>cd</code>, <code>ls</code>, <code>pwd</code>, <code>mkdir</code>, <code>rmdir</code>, <code>tree</code>, <code>touch</code>, <code>ln</code>, <code>rename</code>, <code>stat</code>, <code>file</code>, <code>chmod</code>, <code>chown</code>, <code>locate</code>, <code>find</code>, <code>cp</code>, <code>scp</code>, <code>mv</code>, <code>rm</code></p>
</blockquote>
<h2 id="1-Linux-文件目录工作机制"><a href="#1-Linux-文件目录工作机制" class="headerlink" title="1. Linux 文件目录工作机制"></a>1. Linux 文件目录工作机制</h2><h3 id="1-1-Linux-目录结构"><a href="#1-1-Linux-目录结构" class="headerlink" title="1.1. Linux 目录结构"></a>1.1. Linux 目录结构</h3><p>linux 目录结构是树形结构，其根目录是 <code>/</code> 。一张思维导图说明各个目录的作用：</p>
<p><img src="https://raw.githubusercontent.com/dunwu/images/dev/cs/os/linux/linux-folders.png" alt="img"></p>
<h3 id="1-2-Linux-文件属性"><a href="#1-2-Linux-文件属性" class="headerlink" title="1.2. Linux 文件属性"></a>1.2. Linux 文件属性</h3><p>Linux 系统是一种典型的多用户系统，不同的用户处于不同的地位，拥有不同的权限。为了保护系统的安全性，Linux 系统对不同的用户访问同一文件（包括目录文件）的权限做了不同的规定。<br>在 Linux 中我们可以使用 ll 或者 ls –l 命令来显示一个文件的属性以及文件所属的用户和组，如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">ls</span> -l</span><br><span class="line">total 64</span><br><span class="line">dr-xr-xr-x 2 root root 4096 Dec 14 2012 bin</span><br><span class="line">dr-xr-xr-x 4 root root 4096 Apr 19 2012 boot</span><br></pre></td></tr></table></figure>

<p>实例中，bin 文件的第一个属性用 <code>d</code> 表示。<code>d</code> 在 Linux 中代表该文件是一个目录文件。<br>在 Linux 中第一个字符代表这个文件是目录、文件或链接文件等等。</p>
<ul>
<li>当为 <code>d</code> 则是目录</li>
<li>当为 <code>-</code> 则是文件；</li>
<li>若是 <code>l</code> 则表示为链接文档(link file)；</li>
<li>若是 <code>b</code> 则表示为装置文件里面的可供储存的接口设备(可随机存取装置)；</li>
<li>若是 <code>c</code> 则表示为装置文件里面的串行端口设备，例如键盘、鼠标(一次性读取装置)。</li>
</ul>
<p>接下来的字符中，以三个为一组，且均为『rwx』 的三个参数的组合。其中，<code>r</code> 代表可读(read)、<code>w</code> 代表可写(write)、<code>x</code> 代表可执行(execute)。 要注意的是，这三个权限的位置不会改变，如果没有权限，就会出现减号 <code>-</code> 而已。</p>
<p>每个文件的属性由左边第一部分的 10 个字符来确定（如下图）。</p>
<p><img src="https://raw.githubusercontent.com/dunwu/images/dev/snap/20180920180927171909.png" alt="img"></p>
<p>从左至右用 0-9 这些数字来表示。</p>
<ul>
<li>第 0 位确定文件类型</li>
<li>第 1-3 位确定属主（该文件的拥有者）拥有该文件的权限。</li>
<li>第 4-6 位确定属组（拥有者的同组用户）拥有该文件的权限。</li>
<li>第 7-9 位确定其他用户拥有该文件的权限。</li>
<li>第 1、4、7 位表示读权限，如果用”r”字符表示，则有读权限，如果用”-“字符表示，则没有读权限。</li>
<li>第 2、5、8 位表示写权限，如果用”w”字符表示，则有写权限，如果用”-“字符表示没有写权限。</li>
<li>第 3、6、9 位表示可执行权限，如果用”x”字符表示，则有执行权限，如果用”-“字符表示，则没有执行权限。</li>
</ul>
<h4 id="1-2-1-Linux-文件属主和属组"><a href="#1-2-1-Linux-文件属主和属组" class="headerlink" title="1.2.1. Linux 文件属主和属组"></a>1.2.1. Linux 文件属主和属组</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">ls</span> -l</span><br><span class="line">total 64</span><br><span class="line">dr-xr-xr-x   2 root root 4096 Dec 14  2012 bin</span><br><span class="line">dr-xr-xr-x   4 root root 4096 Apr 19  2012 boot</span><br></pre></td></tr></table></figure>

<ul>
<li>对于文件来说，它都有一个特定的拥有者，也就是对该文件具有所有权的用户。</li>
<li>同时，在 Linux 系统中，用户是按组分类的，一个用户属于一个或多个组。</li>
<li>文件拥有者以外的用户又可以分为文件拥有者的同组用户和其他用户。</li>
<li>因此，Linux 系统按文件拥有者、文件拥有者同组用户和其他用户来规定了不同的文件访问权限。</li>
<li>在以上实例中，bin 文件是一个目录文件，属主和属组都为 root，属主有可读、可写、可执行的权限；与属主同组的其他用户有可读和可执行的权限；其他用户也有可读和可执行的权限。</li>
</ul>
<h2 id="2-Linux-文件目录管理要点"><a href="#2-Linux-文件目录管理要点" class="headerlink" title="2. Linux 文件目录管理要点"></a>2. Linux 文件目录管理要点</h2><h3 id="2-1-目录管理"><a href="#2-1-目录管理" class="headerlink" title="2.1. 目录管理"></a>2.1. 目录管理</h3><ul>
<li>切换目录 - 使用 <a href="#cd">cd</a></li>
<li>查看目录信息 - 使用 <a href="#ls">ls</a></li>
<li>显示当前目录的绝对路径 - 使用 <a href="#pwd">pwd</a></li>
<li>树状显示目录的内容 - 使用 <a href="#tree">tree</a></li>
<li>创建目录 - 使用 <a href="#mkdir">mkdir</a></li>
<li>删除目录 - 使用 <a href="#rmdir">rmdir</a></li>
</ul>
<h3 id="2-2-文件管理"><a href="#2-2-文件管理" class="headerlink" title="2.2. 文件管理"></a>2.2. 文件管理</h3><ul>
<li>创建空文件 - 使用 <a href="#touch">touch</a></li>
<li>为文件创建连接 - 使用 <a href="#ln">ln</a></li>
<li>批量重命名 - 使用 <a href="#rename">rename</a></li>
<li>显示文件的详细信息 - 使用 <a href="#stat">stat</a></li>
<li>探测文件类型 - 使用 <a href="#file">file</a></li>
<li>设置文件或目录的权限 - 使用 <a href="#chmod">chmod</a></li>
<li>设置文件或目录的拥有者或所属群组 - 使用 <a href="#chown">chown</a></li>
<li>查找文件或目录 - 使用 <a href="#locate">locate</a></li>
<li>在指定目录下查找文件 - 使用 <a href="#find">find</a></li>
<li>查找命令的绝对路径 - 使用 <a href="#which">which</a></li>
<li>查找命令的程序、源代码等相关文件 - 使用 <a href="#whereis">whereis</a></li>
</ul>
<h3 id="2-3-文件和目录通用管理"><a href="#2-3-文件和目录通用管理" class="headerlink" title="2.3. 文件和目录通用管理"></a>2.3. 文件和目录通用管理</h3><ul>
<li>复制文件或目录 - 使用 <a href="#cp">cp</a></li>
<li>复制文件或目录到远程服务器 - 使用 <a href="#scp">scp</a></li>
<li>移动文件或目录 - 使用 <a href="#mv">mv</a></li>
<li>删除文件或目录 - 使用 <a href="#rm">rm</a></li>
</ul>
<h2 id="3-命令常见用法"><a href="#3-命令常见用法" class="headerlink" title="3. 命令常见用法"></a>3. 命令常见用法</h2><h3 id="3-1-cd"><a href="#3-1-cd" class="headerlink" title="3.1. cd"></a>3.1. cd</h3><blockquote>
<p>cd 命令用来切换工作目录。</p>
<p>参考：<a href="http://man.linuxde.net/cd">http://man.linuxde.net/cd</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span>          <span class="comment"># 切换到用户主目录</span></span><br><span class="line"><span class="built_in">cd</span> ~        <span class="comment"># 切换到用户主目录</span></span><br><span class="line"><span class="built_in">cd</span> -        <span class="comment"># 切换到上一个工作目录</span></span><br><span class="line"><span class="built_in">cd</span> ..       <span class="comment"># 切换到上级目录</span></span><br><span class="line"><span class="built_in">cd</span> ../..    <span class="comment"># 切换到上两级目录</span></span><br></pre></td></tr></table></figure>

<h3 id="3-2-ls"><a href="#3-2-ls" class="headerlink" title="3.2. ls"></a>3.2. ls</h3><blockquote>
<p>ls 命令用来显示目录信息。</p>
<p>参考：<a href="http://man.linuxde.net/ls">http://man.linuxde.net/ls</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ls</span>        <span class="comment"># 列出当前目录可见文件</span></span><br><span class="line"><span class="built_in">ls</span> -l     <span class="comment"># 列出当前目录可见文件详细信息</span></span><br><span class="line"><span class="built_in">ls</span> -la    <span class="comment"># 列出所有文件（包括隐藏）的详细信息</span></span><br><span class="line"><span class="built_in">ls</span> -lh    <span class="comment"># 列出详细信息并以可读大小显示文件大小</span></span><br><span class="line"><span class="built_in">ls</span> -lt    <span class="comment"># 按时间列出文件和文件夹详细信息</span></span><br><span class="line"><span class="built_in">ls</span> -ltr   <span class="comment"># 按修改时间列出文件和文件夹详细信息</span></span><br><span class="line"><span class="built_in">ls</span> --color=auto     <span class="comment"># 列出文件并标记颜色分类</span></span><br></pre></td></tr></table></figure>

<h3 id="3-3-pwd"><a href="#3-3-pwd" class="headerlink" title="3.3. pwd"></a>3.3. pwd</h3><blockquote>
<p>pwd 命令用来显示当前目录的绝对路径。</p>
<p>参考：<a href="http://man.linuxde.net/pwd">http://man.linuxde.net/pwd</a></p>
</blockquote>
<h3 id="3-4-mkdir"><a href="#3-4-mkdir" class="headerlink" title="3.4. mkdir"></a>3.4. mkdir</h3><blockquote>
<p>mkdir 命令用来创建目录。</p>
<p>参考：<a href="http://man.linuxde.net/mkdir">http://man.linuxde.net/mkdir</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 在当前目录中创建 zp 和 zp 的子目录 test</span></span><br><span class="line"><span class="built_in">mkdir</span> -p zp/test</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在当前目录中创建 zp 和 zp 的子目录 test；权限设置为文件主可读、写、执行，同组用户可读和执行，其他用户无权访问</span></span><br><span class="line"><span class="built_in">mkdir</span> -p -m 750 zp/test</span><br></pre></td></tr></table></figure>

<h3 id="3-5-rmdir"><a href="#3-5-rmdir" class="headerlink" title="3.5. rmdir"></a>3.5. rmdir</h3><blockquote>
<p>rmdir 命令用来删除空目录。</p>
<p>参考：<a href="http://man.linuxde.net/rmdir">http://man.linuxde.net/rmdir</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 删除子目录 test 和其父目录 zp</span></span><br><span class="line"><span class="built_in">rmdir</span> -p zp/test</span><br></pre></td></tr></table></figure>

<h3 id="3-6-tree"><a href="#3-6-tree" class="headerlink" title="3.6. tree"></a>3.6. tree</h3><blockquote>
<p>tree 命令以树状显示目录的内。</p>
<p>参考：<a href="http://man.linuxde.net/tree">http://man.linuxde.net/tree</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 列出目录 /private 第一级文件名</span></span><br><span class="line">tree /private -L 1</span><br><span class="line">/private/</span><br><span class="line">├── etc</span><br><span class="line">├── tftpboot</span><br><span class="line">├── tmp</span><br><span class="line">└── var</span><br><span class="line"></span><br><span class="line"><span class="comment"># 忽略文件夹</span></span><br><span class="line">tree -I node_modules            <span class="comment"># 忽略当前目录文件夹 node_modules</span></span><br><span class="line">tree -P node_modules            <span class="comment"># 列出当前目录文件夹 node_modules 的目录结构</span></span><br><span class="line">tree -P node_modules -L 2       <span class="comment"># 显示目录 node_modules 两层的目录树结构</span></span><br><span class="line">tree -L 2 &gt; /home/www/tree.txt  <span class="comment"># 当前目录结果存到 tree.txt 文件中</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 忽略多个文件夹</span></span><br><span class="line">tree -I <span class="string">&#x27;node_modules|icon|font&#x27;</span> -L 2</span><br></pre></td></tr></table></figure>

<h3 id="3-7-touch"><a href="#3-7-touch" class="headerlink" title="3.7. touch"></a>3.7. touch</h3><blockquote>
<p>touch 命令有两个功能：一是用于把已存在文件的时间标签更新为系统当前的时间（默认方式），它们的数据将原封不动地保留下来；二是用来创建空文件。</p>
<p>参考：<a href="http://man.linuxde.net/touch">http://man.linuxde.net/touch</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">touch ex2</span><br></pre></td></tr></table></figure>

<h3 id="3-8-ln"><a href="#3-8-ln" class="headerlink" title="3.8. ln"></a>3.8. ln</h3><blockquote>
<p>ln 命令用来为文件创建连接，连接类型分为硬连接和符号连接两种，默认的连接类型是硬连接。如果要创建符号连接必须使用”-s”选项。</p>
<p>🔔 注意：符号链接文件不是一个独立的文件，它的许多属性依赖于源文件，所以给符号链接文件设置存取权限是没有意义的。</p>
<p>参考：<a href="http://man.linuxde.net/ln">http://man.linuxde.net/ln</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 将目录 /usr/mengqc/mub1 下的文件 m2.c 链接到目录 /usr/liu 下的文件 a2.c</span></span><br><span class="line"><span class="built_in">cd</span> /usr/mengqc</span><br><span class="line"><span class="built_in">ln</span> /mub1/m2.c /usr/liu/a2.c</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在目录 /usr/liu 下建立一个符号链接文件 abc，使它指向目录 /usr/mengqc/mub1</span></span><br><span class="line"><span class="comment"># 执行该命令后，/usr/mengqc/mub1 代表的路径将存放在名为 /usr/liu/abc 的文件中</span></span><br><span class="line"><span class="built_in">ln</span> -s /usr/mengqc/mub1 /usr/liu/abc</span><br></pre></td></tr></table></figure>

<h3 id="3-9-rename"><a href="#3-9-rename" class="headerlink" title="3.9. rename"></a>3.9. rename</h3><blockquote>
<p>rename 命令用字符串替换的方式批量重命名。</p>
<p>参考：<a href="http://man.linuxde.net/rename">http://man.linuxde.net/rename</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 将 main1.c 重命名为 main.c</span></span><br><span class="line">rename main1.c main.c main1.c</span><br><span class="line"></span><br><span class="line">rename <span class="string">&quot;s/AA/aa/&quot;</span> *             <span class="comment"># 把文件名中的 AA 替换成 aa</span></span><br><span class="line">rename <span class="string">&quot;s//.html//.php/&quot;</span> *      <span class="comment"># 把 .html 后缀的改成 .php 后缀</span></span><br><span class="line">rename <span class="string">&quot;s/$//.txt/&quot;</span> *           <span class="comment"># 把所有的文件名都以 txt 结尾</span></span><br><span class="line">rename <span class="string">&quot;s//.txt//&quot;</span> *            <span class="comment"># 把所有以 .txt 结尾的文件名的.txt 删掉</span></span><br></pre></td></tr></table></figure>

<h3 id="3-10-stat"><a href="#3-10-stat" class="headerlink" title="3.10. stat"></a>3.10. stat</h3><blockquote>
<p>stat 命令用于显示文件的状态信息。stat 命令的输出信息比 ls 命令的输出信息要更详细。</p>
<p>参考：<a href="http://man.linuxde.net/stat">http://man.linuxde.net/stat</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">stat</span> myfile</span><br></pre></td></tr></table></figure>

<h3 id="3-11-file"><a href="#3-11-file" class="headerlink" title="3.11. file"></a>3.11. file</h3><blockquote>
<p>file 命令用来探测给定文件的类型。file 命令对文件的检查分为文件系统、魔法幻数检查和语言检查 3 个过程。</p>
<p>参考：<a href="http://man.linuxde.net/file">http://man.linuxde.net/file</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">file install.log          <span class="comment"># 显示文件类型</span></span><br><span class="line">file -b install.log       <span class="comment"># 不显示文件名称</span></span><br><span class="line">file -i install.log       <span class="comment"># 显示 MIME 类型</span></span><br><span class="line">file -L /var/spool/mail   <span class="comment"># 显示符号链接的文件类型</span></span><br></pre></td></tr></table></figure>

<h3 id="3-12-chmod"><a href="#3-12-chmod" class="headerlink" title="3.12. chmod"></a>3.12. chmod</h3><blockquote>
<p>chmod 命令用来变更文件或目录的权限。在 UNIX 系统家族里，文件或目录权限的控制分别以读取、写入、执行 3 种一般权限来区分，另有 3 种特殊权限可供运用。用户可以使用 chmod 指令去变更文件与目录的权限，设置方式采用文字或数字代号皆可。符号连接的权限无法变更，如果用户对符号连接修改权限，其改变会作用在被连接的原始文件。</p>
<p>参考：<a href="http://man.linuxde.net/chmod">http://man.linuxde.net/chmod</a></p>
</blockquote>
<p>知识扩展：</p>
<p>Linux 用 户分为：拥有者、组群(Group)、其他（other），Linux 系统中，预设的情況下，系统中所有的帐号与一般身份使用者，以及 root 的相关信 息， 都是记录在<code>/etc/passwd</code>文件中。每个人的密码则是记录在<code>/etc/shadow</code>文件下。 此外，所有的组群名称记录在<code>/etc/group</code>內！</p>
<p>linux 文件的用户权限的分析图</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">  -rw-r--r--   1 user  staff   651 Oct 12 12:53 .gitmodules</span><br><span class="line"><span class="comment"># ↑╰┬╯╰┬╯╰┬╯</span></span><br><span class="line"><span class="comment"># ┆ ┆  ┆  ╰┈ 0 其他人</span></span><br><span class="line"><span class="comment"># ┆ ┆  ╰┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈ g 属组</span></span><br><span class="line"><span class="comment"># ┆ ╰┈┈┈┈ u 属组</span></span><br><span class="line"><span class="comment"># ╰┈┈ 第一个字母 `d` 代表目录，`-` 代表普通文件</span></span><br></pre></td></tr></table></figure>

<p>例：rwx 　 rw-　 r–</p>
<p>r&#x3D;读取属性　　&#x2F;&#x2F;值＝ 4<br>w&#x3D;写入属性　　&#x2F;&#x2F;值＝ 2<br>x&#x3D;执行属性　　&#x2F;&#x2F;值＝ 1</p>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> u+x,g+w f01　　<span class="comment"># 为文件f01设置自己可以执行，组员可以写入的权限</span></span><br><span class="line"><span class="built_in">chmod</span> u=rwx,g=rw,o=r f01</span><br><span class="line"><span class="built_in">chmod</span> 764 f01</span><br><span class="line"><span class="built_in">chmod</span> a+x f01　　    <span class="comment"># 对文件f01的u,g,o都设置可执行属性</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将/home/wwwroot/里的所有文件和文件夹设置为755权限</span></span><br><span class="line"><span class="built_in">chmod</span> -R  755 /home/wwwroot/*</span><br></pre></td></tr></table></figure>

<h3 id="3-13-chown"><a href="#3-13-chown" class="headerlink" title="3.13. chown"></a>3.13. chown</h3><blockquote>
<p>chown 命令改变某个文件或目录的所有者和所属的组，该命令可以向某个用户授权，使该用户变成指定文件的所有者或者改变文件所属的组。用户可以是用户或者是用户 D，用户组可以是组名或组 id。文件名可以使由空格分开的文件列表，在文件名中可以包含通配符。</p>
<p>只有文件拥有者和超级用户才可以便用该命令。</p>
<p>参考：<a href="http://man.linuxde.net/chown">http://man.linuxde.net/chown</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 将目录/usr/meng及其下面的所有文件、子目录的文件主改成 liu</span></span><br><span class="line"><span class="built_in">chown</span> -R liu /usr/meng</span><br></pre></td></tr></table></figure>

<h3 id="3-14-locate"><a href="#3-14-locate" class="headerlink" title="3.14. locate"></a>3.14. locate</h3><blockquote>
<p>locate 命令和 slocate 命令都用来查找文件或目录。</p>
<p>locate 命令其实是 find -name 的另一种写法，但是要比后者快得多，原因在于它不搜索具体目录，而是搜索一个数据库&#x2F;var&#x2F;lib&#x2F;locatedb，这个数据库中含有本地所有文件信息。Linux 系统自动创建这个数据库，并且每天自动更新一次，所以使用 locate 命令查不到最新变动过的文件。为了避免这种情况，可以在使用 locate 之前，先使用 updatedb 命令，手动更新数据库。</p>
<p>参考：<a href="http://man.linuxde.net/locate_slocate">http://man.linuxde.net/locate_slocate</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">locate <span class="built_in">pwd</span>      <span class="comment"># 查找和 pwd 相关的所有文件</span></span><br><span class="line">locate /etc/sh  <span class="comment"># 搜索 etc 目录下所有以 sh 开头的文件</span></span><br></pre></td></tr></table></figure>

<h3 id="3-15-find"><a href="#3-15-find" class="headerlink" title="3.15. find"></a>3.15. find</h3><blockquote>
<p>find 命令用来在指定目录下查找文件。任何位于参数之前的字符串都将被视为欲查找的目录名。如果使用该命令时，不设置任何参数，则 find 命令将在当前目录下查找子目录与文件。并且将查找到的子目录和文件全部进行显示。</p>
<p>参考：<a href="http://man.linuxde.net/find">http://man.linuxde.net/find</a></p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 当前目录搜索所有文件，文件内容 包含 “140.206.111.111” 的内容</span></span><br><span class="line">find . -<span class="built_in">type</span> f -name <span class="string">&quot;*&quot;</span> | xargs grep <span class="string">&quot;140.206.111.111&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出当前目录及子目录下所有文件和文件夹</span></span><br><span class="line">find .</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在 /home 目录下查找以 .txt 结尾的文件名</span></span><br><span class="line">find /home -name <span class="string">&quot;*.txt&quot;</span></span><br><span class="line"><span class="comment"># 同上，但忽略大小写</span></span><br><span class="line">find /home -iname <span class="string">&quot;*.txt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 当前目录及子目录下查找所有以 .txt 和 .pdf 结尾的文件</span></span><br><span class="line">find . -name <span class="string">&quot;*.txt&quot;</span> -o -name <span class="string">&quot;*.pdf&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 匹配文件路径或者文件</span></span><br><span class="line">find /usr/ -path <span class="string">&quot;*local*&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 基于正则表达式匹配文件路径</span></span><br><span class="line">find . -regex <span class="string">&quot;.*\(\.txt\|\.pdf\)$&quot;</span></span><br><span class="line"><span class="comment"># 同上，但忽略大小写</span></span><br><span class="line">find . -iregex <span class="string">&quot;.*\(\.txt\|\.pdf\)$&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 找出 /home 下不是以 .txt 结尾的文件</span></span><br><span class="line">find /home ! -name <span class="string">&quot;*.txt&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="3-16-cp"><a href="#3-16-cp" class="headerlink" title="3.16. cp"></a>3.16. cp</h3><blockquote>
<p>cp 命令用来将一个或多个源文件或者目录复制到指定的目的文件或目录。它可以将单个源文件复制成一个指定文件名的具体的文件或一个已经存在的目录下。cp 命令还支持同时复制多个文件，当一次复制多个文件时，目标文件参数必须是一个已经存在的目录，否则将出现错误。</p>
<p>参考：<a href="http://man.linuxde.net/cp">http://man.linuxde.net/cp</a></p>
</blockquote>
<p>示例：</p>
<h4 id="3-16-1-参数"><a href="#3-16-1-参数" class="headerlink" title="3.16.1. 参数"></a>3.16.1. 参数</h4><ul>
<li>源文件：制定源文件列表。默认情况下，cp 命令不能复制目录，如果要复制目录，则必须使用<code>-R</code>选项；</li>
<li>目标文件：指定目标文件。当“源文件”为多个文件时，要求“目标文件”为指定的目录。</li>
</ul>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 将文件 file 复制到目录 /usr/men/tmp 下，并改名为 file1</span></span><br><span class="line"><span class="built_in">cp</span> file /usr/men/tmp/file1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将目录 /usr/men下的所有文件及其子目录复制到目录 /usr/zh 中</span></span><br><span class="line"><span class="built_in">cp</span> -r /usr/men /usr/zh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 强行将 /usr/men下的所有文件复制到目录 /usr/zh 中，无论是否有文件重复</span></span><br><span class="line"><span class="built_in">cp</span> -rf /usr/men/* /usr/zh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将目录 /usr/men 中的以 m 打头的所有 .c 文件复制到目录 /usr/zh 中</span></span><br><span class="line"><span class="built_in">cp</span> -i /usr/men m*.c /usr/zh</span><br></pre></td></tr></table></figure>

<h3 id="3-17-scp"><a href="#3-17-scp" class="headerlink" title="3.17. scp"></a>3.17. scp</h3><blockquote>
<p>scp 命令用于在 Linux 下进行远程拷贝文件的命令，和它类似的命令有 cp，不过 cp 只是在本机进行拷贝不能跨服务器，而且 scp 传输是加密的。可能会稍微影响一下速度。当你服务器硬盘变为只读 read only system 时，用 scp 可以帮你把文件移出来。另外，scp 还非常不占资源，不会提高多少系统负荷，在这一点上，rsync 就远远不及它了。虽然 rsync 比 scp 会快一点，但当小文件众多的情况下，rsync 会导致硬盘 I&#x2F;O 非常高，而 scp 基本不影响系统正常使用。</p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 拷贝文件到远程服务器的指定目录</span></span><br><span class="line">scp &lt;file&gt; &lt;user&gt;@&lt;ip&gt;:&lt;url&gt;</span><br><span class="line">scp test.txt root@192.168.0.1:/opt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 拷贝目录到远程服务器的指定目录</span></span><br><span class="line">scp -r &lt;folder&gt; &lt;user&gt;@&lt;ip&gt;:&lt;url&gt;</span><br><span class="line">scp -r <span class="built_in">test</span> root@192.168.0.1:/opt</span><br></pre></td></tr></table></figure>

<h4 id="3-17-1-免密码传输"><a href="#3-17-1-免密码传输" class="headerlink" title="3.17.1. 免密码传输"></a>3.17.1. 免密码传输</h4><p>（1）生成 ssh 公私钥对</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure>

<p>（2）将服务器 A 的 <code>\~/.ssh/id_rsa.pub</code> 文件内容复制到服务器 B 的 <code>\~/.ssh/authorized_keys</code> 文件中。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 服务器 A 上执行以下命令</span></span><br><span class="line">scp ~/.ssh/id_rsa.pub root@192.168.0.2:~/.ssh/id_rsa.pub.tmp</span><br><span class="line"></span><br><span class="line"><span class="comment"># 服务器 B 上执行以下命令</span></span><br><span class="line"><span class="built_in">cat</span> ~/.ssh/id_rsa.pub.tmp &gt;&gt; ~/.ssh/authorized_keys</span><br><span class="line"><span class="built_in">rm</span> ~/.ssh/id_rsa.pub.tmp</span><br></pre></td></tr></table></figure>

<h3 id="3-18-mv"><a href="#3-18-mv" class="headerlink" title="3.18. mv"></a>3.18. mv</h3><blockquote>
<p>mv 命令用来对文件或目录重新命名，或者将文件从一个目录移到另一个目录中。source 表示源文件或目录，target 表示目标文件或目录。如果将一个文件移到一个已经存在的目标文件中，则目标文件的内容将被覆盖。</p>
<p>参考：<a href="http://man.linuxde.net/mv">http://man.linuxde.net/mv</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mv</span> file1.txt /home/office/                      <span class="comment"># 移动单个文件</span></span><br><span class="line"><span class="built_in">mv</span> file2.txt file3.txt file4.txt /home/office/  <span class="comment"># 移动多个文件</span></span><br><span class="line"><span class="built_in">mv</span> *.txt /home/office/                          <span class="comment"># 移动所有 txt 文件</span></span><br><span class="line"><span class="built_in">mv</span> dir1/ /home/office/                          <span class="comment"># 移动目录</span></span><br><span class="line"><span class="built_in">mv</span> /usr/men/* .                                 <span class="comment"># 将指定目录中的所有文件移到当前目录中</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">mv</span> file1.txt file2.txt          <span class="comment"># 重命名文件</span></span><br><span class="line"><span class="built_in">mv</span> dir1/ dir2/                  <span class="comment"># 重命名目录</span></span><br><span class="line"><span class="built_in">mv</span> -v *.txt /home/office        <span class="comment"># 打印移动信息</span></span><br><span class="line"><span class="built_in">mv</span> -i file1.txt /home/office    <span class="comment"># 提示是否覆盖文件</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">mv</span> -uv *.txt /home/office       <span class="comment"># 源文件比目标文件新时才执行更新</span></span><br><span class="line"><span class="built_in">mv</span> -vn *.txt /home/office       <span class="comment"># 不要覆盖任何已存在的文件</span></span><br><span class="line"><span class="built_in">mv</span> -f *.txt /home/office        <span class="comment"># 无条件覆盖已经存在的文件</span></span><br><span class="line"><span class="built_in">mv</span> -bv *.txt /home/office       <span class="comment"># 复制时创建备份</span></span><br></pre></td></tr></table></figure>

<h3 id="3-19-rm"><a href="#3-19-rm" class="headerlink" title="3.19. rm"></a>3.19. rm</h3><blockquote>
<p>rm 命令可以删除一个目录中的一个或多个文件或目录，也可以将某个目录及其下属的所有文件及其子目录均删除掉。对于链接文件，只是删除整个链接文件，而原有文件保持不变。</p>
<p>参考：<a href="http://man.linuxde.net/rm">http://man.linuxde.net/rm</a></p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">rm</span> test.txt               <span class="comment"># 删除文件</span></span><br><span class="line"><span class="built_in">rm</span> -i test.txt test2.txt  <span class="comment"># 交互式删除文件</span></span><br><span class="line"><span class="built_in">rm</span> -r *                   <span class="comment"># 删除当前目录下的所有文件和目录</span></span><br><span class="line"><span class="built_in">rm</span> -r testdir             <span class="comment"># 删除目录下的所有文件和目录</span></span><br><span class="line"><span class="built_in">rm</span> -rf testdir            <span class="comment"># 强制删除目录下的所有文件和目录</span></span><br><span class="line"><span class="built_in">rm</span> -v testdir             <span class="comment"># 显示当前删除操作的详情</span></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 文件压缩和解压</title>
    <url>/2022/02/20/linux-cli-file-compress/</url>
    <content><![CDATA[<h1 id="Linux-文件压缩和解压"><a href="#Linux-文件压缩和解压" class="headerlink" title="Linux 文件压缩和解压"></a>Linux 文件压缩和解压</h1><blockquote>
<p>关键词：<code>tar</code>, <code>gzip</code>, <code>zip</code>, <code>unzip</code></p>
</blockquote>
<h2 id="1-Linux-文件压缩和解压要点"><a href="#1-Linux-文件压缩和解压要点" class="headerlink" title="1. Linux 文件压缩和解压要点"></a>1. Linux 文件压缩和解压要点</h2><ul>
<li>压缩和解压 tar 文件 - 使用 <a href="#tar">tar</a></li>
<li>压缩和解压 gz 文件 - 使用 <a href="#gzip">gzip</a></li>
<li>压缩和解压 zip 文件 - 分别使用 <a href="#zip">zip</a>、<a href="#unzip">unzip</a></li>
</ul>
<h2 id="2-命令常见用法"><a href="#2-命令常见用法" class="headerlink" title="2. 命令常见用法"></a>2. 命令常见用法</h2><h3 id="2-1-tar"><a href="#2-1-tar" class="headerlink" title="2.1. tar"></a>2.1. tar</h3><blockquote>
<p>tar 命令可以为 linux 的文件和目录创建档案。利用 tar，可以为某一特定文件创建档案（备份文件），也可以在档案中改变文件，或者向档案中加入新的文件。tar 最初被用来在磁带上创建档案，现在，用户可以在任何设备上创建档案。利用 tar 命令，可以把一大堆的文件和目录全部打包成一个文件，这对于备份文件或将几个文件组合成为一个文件以便于网络传输是非常有用的。</p>
<p>参考：<a href="http://man.linuxde.net/tar">http://man.linuxde.net/tar</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -cvf log.tar log2012.log            <span class="comment"># 仅打包，不压缩</span></span><br><span class="line">tar -zcvf log.tar.gz log2012.log        <span class="comment"># 打包后，以 gzip 压缩</span></span><br><span class="line">tar -jcvf log.tar.bz2 log2012.log       <span class="comment"># 打包后，以 bzip2 压缩</span></span><br><span class="line"></span><br><span class="line">tar -ztvf log.tar.gz                    <span class="comment"># 查阅上述 tar 包内有哪些文件</span></span><br><span class="line">tar -zxvf log.tar.gz                    <span class="comment"># 将 tar 包解压缩</span></span><br><span class="line">tar -zxvf log30.tar.gz log2013.log      <span class="comment"># 只将 tar 内的部分文件解压出来</span></span><br></pre></td></tr></table></figure>

<h3 id="2-2-gzip"><a href="#2-2-gzip" class="headerlink" title="2.2. gzip"></a>2.2. gzip</h3><blockquote>
<p>gzip 命令用来压缩文件。gzip 是个使用广泛的压缩程序，文件经它压缩过后，其名称后面会多出“.gz”扩展名。</p>
<p>gzip 是在 Linux 系统中经常使用的一个对文件进行压缩和解压缩的命令，既方便又好用。gzip 不仅可以用来压缩大的、较少使用的文件以节省磁盘空间，还可以和 tar 命令一起构成 Linux 操作系统中比较流行的压缩文件格式。据统计，gzip 命令对文本文件有 60%～ 70%的压缩率。减少文件大小有两个明显的好处，一是可以减少存储空间，二是通过网络传输文件时，可以减少传输的时间。</p>
<p>参考：<a href="http://man.linuxde.net/gzip">http://man.linuxde.net/gzip</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gzip * <span class="comment"># 将所有文件压缩成 .gz 文件</span></span><br><span class="line">gzip -l * <span class="comment"># 详细显示压缩文件的信息，并不解压</span></span><br><span class="line">gzip -dv * <span class="comment"># 解压上例中的所有压缩文件，并列出详细的信息</span></span><br><span class="line">gzip -r log.tar     <span class="comment"># 压缩一个 tar 备份文件，此时压缩文件的扩展名为.tar.gz</span></span><br><span class="line">gzip -rv <span class="built_in">test</span>/      <span class="comment"># 递归的压缩目录</span></span><br><span class="line">gzip -dr <span class="built_in">test</span>/      <span class="comment"># 递归地解压目录</span></span><br></pre></td></tr></table></figure>

<h3 id="2-3-zip"><a href="#2-3-zip" class="headerlink" title="2.3. zip"></a>2.3. zip</h3><blockquote>
<p>zip 命令可以用来解压缩文件，或者对文件进行打包操作。zip 是个使用广泛的压缩程序，文件经它压缩后会另外产生具有“.zip”扩展名的压缩文件。</p>
<p>参考：<a href="http://man.linuxde.net/zip">http://man.linuxde.net/zip</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 将 /home/Blinux/html/ 这个目录下所有文件和文件夹打包为当前目录下的 html.zip</span></span><br><span class="line">zip -q -r html.zip /home/Blinux/html</span><br></pre></td></tr></table></figure>

<h3 id="2-4-unzip"><a href="#2-4-unzip" class="headerlink" title="2.4. unzip"></a>2.4. unzip</h3><blockquote>
<p>unzip 命令用于解压缩由 zip 命令压缩的“.zip”压缩包。</p>
<p>参考：<a href="http://man.linuxde.net/unzip">http://man.linuxde.net/unzip</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">unzip test.zip              <span class="comment"># 解压 zip 文件</span></span><br><span class="line">unzip -n test.zip -d /tmp/  <span class="comment"># 在指定目录下解压缩</span></span><br><span class="line">unzip -o test.zip -d /tmp/  <span class="comment"># 在指定目录下解压缩，如果有相同文件存在则覆盖</span></span><br><span class="line">unzip -v test.zip           <span class="comment"># 查看压缩文件目录，但不解压</span></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 文件内容查看编辑</title>
    <url>/2022/02/20/linux-cli-file/</url>
    <content><![CDATA[<h1 id="Linux-文件内容查看编辑"><a href="#Linux-文件内容查看编辑" class="headerlink" title="Linux 文件内容查看编辑"></a>Linux 文件内容查看编辑</h1><blockquote>
<p>关键词：<code>cat</code>, <code>head</code>, <code>tail</code>, <code>more</code>, <code>less</code>, <code>sed</code>, <code>vi</code>, <code>grep</code></p>
</blockquote>
<h2 id="1-Linux-文件内容查看编辑要点"><a href="#1-Linux-文件内容查看编辑要点" class="headerlink" title="1. Linux 文件内容查看编辑要点"></a>1. Linux 文件内容查看编辑要点</h2><ul>
<li>连接文件并打印到标准输出设备 - 使用 <a href="#cat">cat</a></li>
<li>显示指定文件的开头若干行 - 使用 <a href="#head">head</a></li>
<li>显示指定文件的末尾若干行，常用于实时打印日志文件内容 - 使用 <a href="#tail">tail</a></li>
<li>显示文件内容，每次显示一屏 - 使用 <a href="#more">more</a></li>
<li>显示文件内容，每次显示一屏 - 使用 <a href="#less">less</a></li>
<li>自动编辑一个或多个文件；简化对文件的反复操作；编写转换程序等 - 使用 <a href="#sed">sed</a></li>
<li>文本编辑器 - 使用 <a href="#vi">vi</a></li>
<li>使用正则表达式搜索文本，并把匹配的行打印出来 - 使用 <a href="#grep">grep</a></li>
</ul>
<h2 id="2-命令常见用法"><a href="#2-命令常见用法" class="headerlink" title="2. 命令常见用法"></a>2. 命令常见用法</h2><h3 id="2-1-cat"><a href="#2-1-cat" class="headerlink" title="2.1. cat"></a>2.1. cat</h3><blockquote>
<p>cat 命令用于连接文件并打印到标准输出设备上。</p>
<p>参考：<a href="http://man.linuxde.net/cat">http://man.linuxde.net/cat</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> m1              <span class="comment"># 在屏幕上显示文件 ml 的内容</span></span><br><span class="line"><span class="built_in">cat</span> m1 m2           <span class="comment"># 同时显示文件 ml 和 m2 的内容</span></span><br><span class="line"><span class="built_in">cat</span> m1 m2 &gt; file    <span class="comment"># 将文件 ml 和 m2 合并后放入文件 file 中</span></span><br></pre></td></tr></table></figure>

<h3 id="2-2-head"><a href="#2-2-head" class="headerlink" title="2.2. head"></a>2.2. head</h3><blockquote>
<p>head 命令用于显示文件的开头内容。在默认情况下，head 命令显示文件的头部 10 行内容。</p>
<p>参考：<a href="http://man.linuxde.net/head">http://man.linuxde.net/head</a></p>
</blockquote>
<h3 id="2-3-tail"><a href="#2-3-tail" class="headerlink" title="2.3. tail"></a>2.3. tail</h3><blockquote>
<p>tail 命令用于显示文件的尾部内容。在默认情况下，tail 命令显示文件的尾部 10 行内容。如果给定的文件不止一个，则在显示的每个文件前面加一个文件名标题。如果没有指定文件或者文件名为“-”，则读取标准输入。</p>
<p>参考：<a href="http://man.linuxde.net/tail">http://man.linuxde.net/tail</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">tail</span> file           <span class="comment"># 显示文件file的最后10行</span></span><br><span class="line"><span class="built_in">tail</span> -n +20 file    <span class="comment"># 显示文件file的内容，从第20行至文件末尾</span></span><br><span class="line"><span class="built_in">tail</span> -c 10 file     <span class="comment"># 显示文件file的最后10个字符</span></span><br></pre></td></tr></table></figure>

<h3 id="2-4-more"><a href="#2-4-more" class="headerlink" title="2.4. more"></a>2.4. more</h3><blockquote>
<p>more 命令是一个基于 vi 编辑器文本过滤器，它以全屏幕的方式按页显示文本文件的内容，支持 vi 中的关键字定位操作。more 名单中内置了若干快捷键，常用的有 H（获得帮助信息），Enter（向下翻滚一行），空格（向下滚动一屏），Q（退出命令）。</p>
<p>该命令一次显示一屏文本，满屏后停下来，并且在屏幕的底部出现一个提示信息，给出至今己显示的该文件的百分比：–More–（XX%）可以用下列不同的方法对提示做出回答：</p>
<ul>
<li>按 Space 键：显示文本的下一屏内容。</li>
<li>按 Enier 键：只显示文本的下一行内容。</li>
<li>按斜线符|：接着输入一个模式，可以在文本中寻找下一个相匹配的模式。</li>
<li>按 H 键：显示帮助屏，该屏上有相关的帮助信息。</li>
<li>按 B 键：显示上一屏内容。</li>
<li>按 Q 键：退出 rnore 命令。</li>
</ul>
<p>参考：<a href="http://man.linuxde.net/more">http://man.linuxde.net/more</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 显示文件 file 的内容，但在显示之前先清屏，并且在屏幕的最下方显示完核的百分比。</span></span><br><span class="line">more -dc file</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示文件 file 的内容，每 10 行显示一次，而且在显示之前先清屏。</span></span><br><span class="line">more -c -10 file</span><br></pre></td></tr></table></figure>

<h3 id="2-5-less"><a href="#2-5-less" class="headerlink" title="2.5. less"></a>2.5. less</h3><p>less 命令的作用与 more 十分相似，都可以用来浏览文字档案的内容，不同的是 less 命令允许用户向前或向后浏览文件，而 more 命令只能向前浏览。用 less 命令显示文件时，用 PageUp 键向上翻页，用 PageDown 键向下翻页。要退出 less 程序，应按 Q 键。</p>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">less /var/log/shadowsocks.log</span><br></pre></td></tr></table></figure>

<h3 id="2-6-sed"><a href="#2-6-sed" class="headerlink" title="2.6. sed"></a>2.6. sed</h3><blockquote>
<p>sed 是一种流编辑器，它是文本处理工具，能够完美的配合正则表达式使用，功能不同凡响。处理时，把当前处理的行存储在临时缓冲区中，称为“模式空间”（pattern space），接着用 sed 命令处理缓冲区中的内容，处理完成后，把缓冲区的内容送往屏幕。接着处理下一行，这样不断重复，直到文件末尾。文件内容并没有改变，除非你使用重定向存储输出。Sed 主要用来自动编辑一个或多个文件；简化对文件的反复操作；编写转换程序等。</p>
<p>参考：<a href="http://man.linuxde.net/sed">http://man.linuxde.net/sed</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 替换文本中的字符串</span></span><br><span class="line">sed <span class="string">&#x27;s/book/books/&#x27;</span> file</span><br><span class="line"></span><br><span class="line"><span class="comment"># -n 选项 和 p 命令 一起使用表示只打印那些发生替换的行</span></span><br><span class="line">sed -n <span class="string">&#x27;s/test/TEST/p&#x27;</span> file</span><br><span class="line"></span><br><span class="line"><span class="comment"># 直接编辑文件选项 -i ，会匹配 file 文件中每一行的第一个 book 替换为 books</span></span><br><span class="line">sed -i <span class="string">&#x27;s/book/books/g&#x27;</span> file</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用后缀 /g 标记会替换每一行中的所有匹配</span></span><br><span class="line">sed <span class="string">&#x27;s/book/books/g&#x27;</span> file</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除空白行</span></span><br><span class="line">sed <span class="string">&#x27;/^$/d&#x27;</span> file</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除文件的第2行</span></span><br><span class="line">sed <span class="string">&#x27;2d&#x27;</span> file</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除文件的第2行到末尾所有行</span></span><br><span class="line">sed <span class="string">&#x27;2,$d&#x27;</span> file</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除文件最后一行</span></span><br><span class="line">sed <span class="string">&#x27;$d&#x27;</span> file</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除文件中所有开头是test的行</span></span><br><span class="line">sed <span class="string">&#x27;/^test/&#x27;</span>d file</span><br></pre></td></tr></table></figure>

<h3 id="2-7-vi"><a href="#2-7-vi" class="headerlink" title="2.7. vi"></a>2.7. vi</h3><blockquote>
<p>vi 命令是 UNIX 操作系统和类 UNIX 操作系统中最通用的全屏幕纯文本编辑器。Linux 中的 vi 编辑器叫 vim，它是 vi 的增强版（vi Improved），与 vi 编辑器完全兼容，而且实现了很多增强功能。</p>
<p>参考：<a href="http://man.linuxde.net/vi">http://man.linuxde.net/vi</a></p>
<p>引申阅读：<a href="https://github.com/dunwu/OS/blob/master/docs/vim.md">Vim 入门指南</a></p>
</blockquote>
<h3 id="2-8-grep"><a href="#2-8-grep" class="headerlink" title="2.8. grep"></a>2.8. grep</h3><blockquote>
<p>grep（global search regular expression(RE) and print out the line，全面搜索正则表达式并把行打印出来）是一种强大的文本搜索工具，它能使用正则表达式搜索文本，并把匹配的行打印出来。</p>
<p>参考：<a href="http://man.linuxde.net/grep">http://man.linuxde.net/grep</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 在多级目录中对文本递归搜索(程序员搜代码的最爱）:</span></span><br><span class="line">$ grep <span class="string">&quot;class&quot;</span> . -R -n</span><br><span class="line"></span><br><span class="line"><span class="comment"># 忽略匹配样式中的字符大小写</span></span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">&quot;hello world&quot;</span> | grep -i <span class="string">&quot;HELLO&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 匹配多个模式:</span></span><br><span class="line">$ grep -e <span class="string">&quot;class&quot;</span> -e <span class="string">&quot;vitural&quot;</span> file</span><br><span class="line"></span><br><span class="line"><span class="comment"># 只在目录中所有的.php和.html文件中递归搜索字符&quot;main()&quot;</span></span><br><span class="line">$ grep <span class="string">&quot;main()&quot;</span> . -r --include *.&#123;php,html&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在搜索结果中排除所有README文件</span></span><br><span class="line">$ grep <span class="string">&quot;main()&quot;</span> . -r --exclude <span class="string">&quot;README&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在搜索结果中排除filelist文件列表里的文件</span></span><br><span class="line">$ grep <span class="string">&quot;main()&quot;</span> . -r --exclude-from filelist</span><br></pre></td></tr></table></figure>

<h2 id="3-参考资料"><a href="#3-参考资料" class="headerlink" title="3. 参考资料"></a>3. 参考资料</h2><ul>
<li><a href="http://man.linuxde.net/">Linux 命令大全</a></li>
</ul>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 硬件管理</title>
    <url>/2022/02/20/linux-cli-hardware/</url>
    <content><![CDATA[<h1 id="Linux-硬件管理"><a href="#Linux-硬件管理" class="headerlink" title="Linux 硬件管理"></a>Linux 硬件管理</h1><blockquote>
<p>关键词：<code>df</code>, <code>du</code>, <code>top</code>, <code>free</code>, <code>iotop</code></p>
</blockquote>
<h2 id="1-Linux-硬件管理要点"><a href="#1-Linux-硬件管理要点" class="headerlink" title="1. Linux 硬件管理要点"></a>1. Linux 硬件管理要点</h2><ul>
<li>查看磁盘空间 - 使用 <a href="#df">df</a></li>
<li>查看文件或目录的磁盘空间 - 使用 <a href="#du">du</a></li>
<li>实时查看系统整体运行状态（如：CPU、内存） - 使用 <a href="#top">top</a></li>
<li>查看已使用和未使用的内存 - 使用 <a href="#free">free</a></li>
<li>查看磁盘 I&#x2F;O 使用状况 - 使用 <a href="#iotop">iotop</a></li>
</ul>
<h2 id="2-命令常见用法"><a href="#2-命令常见用法" class="headerlink" title="2. 命令常见用法"></a>2. 命令常见用法</h2><h3 id="2-1-df"><a href="#2-1-df" class="headerlink" title="2.1. df"></a>2.1. df</h3><blockquote>
<p>df 命令用于显示磁盘分区上的可使用的磁盘空间。默认显示单位为 KB。可以利用该命令来获取硬盘被占用了多少空间，目前还剩下多少空间等信息。</p>
<p>参考：<a href="http://man.linuxde.net/df">http://man.linuxde.net/df</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看系统磁盘设备，默认是 KB 为单位</span></span><br><span class="line">[root@LinServ-1 ~]<span class="comment"># df</span></span><br><span class="line">文件系统               1K-块        已用     可用 已用% 挂载点</span><br><span class="line">/dev/sda2            146294492  28244432 110498708  21% /</span><br><span class="line">/dev/sda1              1019208     62360    904240   7% /boot</span><br><span class="line">tmpfs                  1032204         0   1032204   0% /dev/shm</span><br><span class="line">/dev/sdb1            2884284108 218826068 2518944764   8% /data1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 -h 选项以 KB 以上的单位来显示，可读性高</span></span><br><span class="line">[root@LinServ-1 ~]<span class="comment"># df -h</span></span><br><span class="line">文件系统              容量  已用 可用 已用% 挂载点</span><br><span class="line">/dev/sda2             140G   27G  106G  21% /</span><br><span class="line">/dev/sda1             996M   61M  884M   7% /boot</span><br><span class="line">tmpfs                1009M     0 1009M   0% /dev/shm</span><br><span class="line">/dev/sdb1             2.7T  209G  2.4T   8% /data1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看全部文件系统</span></span><br><span class="line">[root@LinServ-1 ~]<span class="comment"># df -a</span></span><br><span class="line">文件系统               1K-块        已用     可用 已用% 挂载点</span><br><span class="line">/dev/sda2            146294492  28244432 110498708  21% /</span><br><span class="line">proc                         0         0         0   -  /proc</span><br><span class="line">sysfs                        0         0         0   -  /sys</span><br><span class="line">devpts                       0         0         0   -  /dev/pts</span><br><span class="line">/dev/sda1              1019208     62360    904240   7% /boot</span><br><span class="line">tmpfs                  1032204         0   1032204   0% /dev/shm</span><br><span class="line">/dev/sdb1            2884284108 218826068 2518944764   8% /data1</span><br><span class="line">none                         0         0         0   -  /proc/sys/fs/binfmt_misc</span><br></pre></td></tr></table></figure>

<h3 id="2-2-du"><a href="#2-2-du" class="headerlink" title="2.2. du"></a>2.2. du</h3><blockquote>
<p>du 命令也是查看使用空间的，但是与 df 命令不同的是：du 命令是对文件和目录磁盘使用的空间的查看，还是和 df 命令有一些区别的。</p>
<p>参考：<a href="http://man.linuxde.net/du">http://man.linuxde.net/du</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 显示目录或者文件所占空间</span></span><br><span class="line">root@localhost [<span class="built_in">test</span>]<span class="comment"># du</span></span><br><span class="line">608 ./test6</span><br><span class="line">308 ./test4</span><br><span class="line">4 ./scf/lib</span><br><span class="line">4 ./scf/service/deploy/product</span><br><span class="line">4 ./scf/service/deploy/info</span><br><span class="line">12 ./scf/service/deploy</span><br><span class="line">16 ./scf/service</span><br><span class="line">4 ./scf/doc</span><br><span class="line">4 ./scf/bin</span><br><span class="line">32 ./scf</span><br><span class="line">8 ./test3</span><br><span class="line">1288 .</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示指定文件所占空间</span></span><br><span class="line">[root@localhost <span class="built_in">test</span>]<span class="comment"># du log2012.log</span></span><br><span class="line">300 log2012.log</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看指定目录的所占空间</span></span><br><span class="line">[root@localhost <span class="built_in">test</span>]<span class="comment"># du scf</span></span><br><span class="line">4 scf/lib</span><br><span class="line">4 scf/service/deploy/product</span><br><span class="line">4 scf/service/deploy/info</span><br><span class="line">12 scf/service/deploy</span><br><span class="line">16 scf/service</span><br><span class="line">4 scf/doc</span><br><span class="line">4 scf/bin</span><br><span class="line">32 scf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示多个文件所占空间</span></span><br><span class="line">[root@localhost <span class="built_in">test</span>]<span class="comment"># du log30.tar.gz log31.tar.gz</span></span><br><span class="line">4 log30.tar.gz</span><br><span class="line">4 log31.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 只显示总和的大小</span></span><br><span class="line">[root@localhost <span class="built_in">test</span>]<span class="comment"># du -s</span></span><br><span class="line">1288 .</span><br><span class="line"></span><br><span class="line">[root@localhost <span class="built_in">test</span>]<span class="comment"># du -s scf</span></span><br><span class="line">32 scf</span><br></pre></td></tr></table></figure>

<h3 id="2-3-top"><a href="#2-3-top" class="headerlink" title="2.3. top"></a>2.3. top</h3><blockquote>
<p>top 命令可以实时动态地查看系统的整体运行情况，是一个综合了多方信息监测系统性能和运行信息的实用工具。通过 top 命令所提供的互动式界面，用热键可以管理。</p>
<p>参考：<a href="http://man.linuxde.net/top">http://man.linuxde.net/top</a></p>
</blockquote>
<h3 id="2-4-free"><a href="#2-4-free" class="headerlink" title="2.4. free"></a>2.4. free</h3><blockquote>
<p>free 命令可以显示当前系统未使用的和已使用的内存数目，还可以显示被内核使用的内存缓冲区。</p>
<p>参考：<a href="http://man.linuxde.net/free">http://man.linuxde.net/free</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">free -t    <span class="comment"># 以总和的形式显示内存的使用信息</span></span><br><span class="line">free -s 10 <span class="comment"># 周期性的查询内存使用信息，每10s 执行一次命令</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示内存使用情况</span></span><br><span class="line"></span><br><span class="line">free -m</span><br><span class="line">             total       used       free     shared    buffers     cached</span><br><span class="line">Mem:          2016       1973         42          0        163       1497</span><br><span class="line">-/+ buffers/cache:        312       1703</span><br><span class="line">Swap:         4094          0       4094</span><br></pre></td></tr></table></figure>

<h3 id="2-5-iotop"><a href="#2-5-iotop" class="headerlink" title="2.5. iotop"></a>2.5. iotop</h3><blockquote>
<p>iotop 命令是一个用来监视磁盘 I&#x2F;O 使用状况的 top 类工具。iotop 具有与 top 相似的 UI，其中包括 PID、用户、I&#x2F;O、进程等相关信息。Linux 下的 IO 统计工具如 iostat，nmon 等大多数是只能统计到 per 设备的读写情况，如果你想知道每个进程是如何使用 IO 的就比较麻烦，使用 iotop 命令可以很方便的查看。</p>
<p>参考：<a href="http://man.linuxde.net/iotop">http://man.linuxde.net/iotop</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Total DISK <span class="built_in">read</span>:       0.00 B/s | Total DISK write:       0.00 B/s</span><br><span class="line">  TID  PRIO  USER     DISK READ  DISK WRITE  SWAPIN     IO&gt;    <span class="built_in">command</span></span><br><span class="line">    1 be/4 root        0.00 B/s    0.00 B/s  0.00 %  0.00 % init [3]</span><br><span class="line">    2 be/4 root        0.00 B/s    0.00 B/s  0.00 %  0.00 % [kthreadd]</span><br><span class="line">    3 rt/4 root        0.00 B/s    0.00 B/s  0.00 %  0.00 % [migration/0]</span><br><span class="line">    4 be/4 root        0.00 B/s    0.00 B/s  0.00 %  0.00 % [ksoftirqd/0]</span><br><span class="line">    5 rt/4 root        0.00 B/s    0.00 B/s  0.00 %  0.00 % [watchdog/0]</span><br><span class="line">    6 rt/4 root        0.00 B/s    0.00 B/s  0.00 %  0.00 % [migration/1]</span><br><span class="line">    7 be/4 root        0.00 B/s    0.00 B/s  0.00 %  0.00 % [ksoftirqd/1]</span><br><span class="line">    8 rt/4 root        0.00 B/s    0.00 B/s  0.00 %  0.00 % [watchdog/1]</span><br><span class="line">    9 be/4 root        0.00 B/s    0.00 B/s  0.00 %  0.00 % [events/0]</span><br><span class="line">   10 be/4 root        0.00 B/s    0.00 B/s  0.00 %  0.00 % [events/1]</span><br><span class="line">   11 be/4 root        0.00 B/s    0.00 B/s  0.00 %  0.00 % [khelper]</span><br><span class="line">2572 be/4 root        0.00 B/s    0.00 B/s  0.00 %  0.00 % [bluetooth]</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>查看 Linux 命令帮助信息</title>
    <url>/2022/02/20/linux-cli-help/</url>
    <content><![CDATA[<h1 id="查看-Linux-命令帮助信息"><a href="#查看-Linux-命令帮助信息" class="headerlink" title="查看 Linux 命令帮助信息"></a>查看 Linux 命令帮助信息</h1><blockquote>
<p>Linux 中有非常多的命令，想全部背下来是很困难的事。所以，我认为学习 Linux 的第一步，就是了解如何快速检索命令说明。</p>
<p>关键词：<code>help</code>, <code>whatis</code>, <code>info</code>, <code>which</code>, <code>whereis</code>, <code>man</code></p>
</blockquote>
<h2 id="1-查看-Linux-命令帮助信息的要点"><a href="#1-查看-Linux-命令帮助信息的要点" class="headerlink" title="1. 查看 Linux 命令帮助信息的要点"></a>1. 查看 Linux 命令帮助信息的要点</h2><ul>
<li>查看 Shell 内部命令的帮助信息 - 使用 <a href="#help">help</a></li>
<li>查看命令的简要说明 - 使用 <a href="#whatis">whatis</a></li>
<li>查看命令的详细说明 - 使用 <a href="#info">info</a></li>
<li>查看命令的位置 - 使用 <a href="#which">which</a></li>
<li>定位指令的二进制程序、源代码文件和 man 手册页等相关文件的路径 - 使用 <a href="#whereis">whereis</a></li>
<li>查看命令的帮助手册（包含说明、用法等信息） - 使用 <a href="#man">man</a></li>
<li>只记得部分命令关键字 - 使用 man -k</li>
</ul>
<blockquote>
<p>注：推荐一些 Linux 命令中文手册：</p>
<ul>
<li><a href="http://man.linuxde.net/">Linux 命令大全</a></li>
<li><a href="https://github.com/jaywcjlove/linux-command">linux-command</a></li>
</ul>
</blockquote>
<h2 id="2-命令常见用法"><a href="#2-命令常见用法" class="headerlink" title="2. 命令常见用法"></a>2. 命令常见用法</h2><h3 id="2-1-help"><a href="#2-1-help" class="headerlink" title="2.1. help"></a>2.1. help</h3><blockquote>
<p>help 命令用于查看 Shell 内部命令的帮助信息。而对于外部命令的帮助信息只能使用 man 或者 info 命令查看。</p>
<p>参考：<a href="http://man.linuxde.net/help">http://man.linuxde.net/help</a></p>
</blockquote>
<h3 id="2-2-whatis"><a href="#2-2-whatis" class="headerlink" title="2.2. whatis"></a>2.2. whatis</h3><blockquote>
<p>whatis 用于查询一个命令执行什么功能。</p>
<p>参考：<a href="http://man.linuxde.net/whatis">http://man.linuxde.net/whatis</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看 man 命令的简要说明</span></span><br><span class="line">$ whatis man</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看以 loca 开拓的命令的简要说明</span></span><br><span class="line">$ whatis -w <span class="string">&quot;loca*&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="2-3-info"><a href="#2-3-info" class="headerlink" title="2.3. info"></a>2.3. info</h3><blockquote>
<p>info 是 Linux 下 info 格式的帮助指令。</p>
<p>参考：<a href="http://man.linuxde.net/info">http://man.linuxde.net/info</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看 man 命令的详细说明</span></span><br><span class="line">$ info man</span><br></pre></td></tr></table></figure>

<h3 id="2-4-which"><a href="#2-4-which" class="headerlink" title="2.4. which"></a>2.4. which</h3><blockquote>
<p>which 命令用于查找并显示给定命令的绝对路径，环境变量 PATH 中保存了查找命令时需要遍历的目录。which 指令会在环境变量$PATH 设置的目录里查找符合条件的文件。也就是说，使用 which 命令，就可以看到某个系统命令是否存在，以及执行的到底是哪一个位置的命令。</p>
<p>参考：<a href="http://man.linuxde.net/which">http://man.linuxde.net/which</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">which</span> <span class="built_in">pwd</span> <span class="comment"># 查找命令的路径</span></span><br></pre></td></tr></table></figure>

<p>说明：which 是根据使用者所配置的 PATH 变量内的目录去搜寻可运行档的！所以，不同的 PATH 配置内容所找到的命令当然不一样的！</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># which cd</span></span><br><span class="line"><span class="built_in">cd</span>: shell built-in <span class="built_in">command</span></span><br></pre></td></tr></table></figure>

<p>cd 这个常用的命令竟然找不到啊！为什么呢？这是因为 cd 是 bash 内建的命令！但是 which 默认是找 PATH 内所规范的目录，所以当然一定找不到的！</p>
<h3 id="2-5-whereis"><a href="#2-5-whereis" class="headerlink" title="2.5. whereis"></a>2.5. whereis</h3><blockquote>
<p>whereis 命令用来定位指令的二进制程序、源代码文件和 man 手册页等相关文件的路径。</p>
<p>whereis 命令只能用于程序名的搜索，而且只搜索二进制文件（参数-b）、man 说明文件（参数-m）和源代码文件（参数-s）。如果省略参数，则返回所有信息。</p>
<p>参考：<a href="http://man.linuxde.net/whereis">http://man.linuxde.net/whereis</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">whereis git <span class="comment"># 将相关的文件都查找出来</span></span><br></pre></td></tr></table></figure>

<h3 id="2-6-man"><a href="#2-6-man" class="headerlink" title="2.6. man"></a>2.6. man</h3><blockquote>
<p>man 命令是 Linux 下的帮助指令，通过 man 指令可以查看 Linux 中的指令帮助、配置文件帮助和编程帮助等信息。</p>
<p>参考：<a href="http://man.linuxde.net/man">http://man.linuxde.net/man</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ man <span class="built_in">date</span> <span class="comment"># 查看 date 命令的帮助手册</span></span><br><span class="line">$ man 3 <span class="built_in">printf</span> <span class="comment"># 查看 printf 命令的帮助手册中的第 3 类</span></span><br><span class="line">$ man -k keyword <span class="comment"># 根据命令中部分关键字来查询命令</span></span><br></pre></td></tr></table></figure>

<h4 id="2-6-1-man-要点"><a href="#2-6-1-man-要点" class="headerlink" title="2.6.1. man 要点"></a>2.6.1. man 要点</h4><p>在 man 的帮助手册中，可以使用 page up 和 page down 来上下翻页。</p>
<p>man 的帮助手册中，将帮助文档分为了 9 个类别，对于有的关键字可能存在多个类别中， 我们就需要指定特定的类别来查看；（一般我们查询 bash 命令，归类在 1 类中）。</p>
<p>man 页面的分类(常用的是分类 1 和分类 3)：</p>
<ol>
<li>可执行程序或 shell 命令</li>
<li>系统调用(内核提供的函数)</li>
<li>库调用(程序库中的函数)</li>
<li>特殊文件(通常位于 &#x2F;dev)</li>
<li>文件格式和规范，如 &#x2F;etc&#x2F;passwd</li>
<li>游戏</li>
<li>杂项(包括宏包和规范，如 man(7)，groff(7))</li>
<li>系统管理命令(通常只针对 root 用户)</li>
<li>内核例程 [非标准]</li>
</ol>
<p>前面说到使用 whatis 会显示命令所在的具体的文档类别，我们学习如何使用它</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ whatis <span class="built_in">printf</span></span><br><span class="line"><span class="built_in">printf</span> (1) - format and <span class="built_in">print</span> data</span><br><span class="line"><span class="built_in">printf</span> (1p) - write formatted output</span><br><span class="line"><span class="built_in">printf</span> (3) - formatted output conversion</span><br><span class="line"><span class="built_in">printf</span> (3p) - <span class="built_in">print</span> formatted output</span><br><span class="line"><span class="built_in">printf</span> [builtins](1) - bash built-in commands, see bash(1)</span><br></pre></td></tr></table></figure>

<p>我们看到 printf 在分类 1 和分类 3 中都有；分类 1 中的页面是命令操作及可执行文件的帮助；而 3 是常用函数库说明；如果我们想看的是 C 语言中 printf 的用法，可以指定查看分类 3 的帮助：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ man 3 <span class="built_in">printf</span></span><br></pre></td></tr></table></figure>

<h2 id="3-参考资料"><a href="#3-参考资料" class="headerlink" title="3. 参考资料"></a>3. 参考资料</h2><p><a href="https://linuxtools-rst.readthedocs.io/zh_CN/latest/base/01_use_man.html">https://linuxtools-rst.readthedocs.io/zh_CN/latest/base/01_use_man.html</a></p>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 网络管理</title>
    <url>/2022/02/20/linux-cli-net/</url>
    <content><![CDATA[<h1 id="Linux-网络管理"><a href="#Linux-网络管理" class="headerlink" title="Linux 网络管理"></a>Linux 网络管理</h1><blockquote>
<p>关键词：<code>curl</code>, <code>wget</code>, <code>telnet</code>, <code>ip</code>, <code>hostname</code>, <code>ifconfig</code>, <code>route</code>, <code>ssh</code>, <code>ssh-keygen</code>, <code>firewalld</code>, <code>iptables</code>, <code>host</code>, <code>nslookup</code>, <code>nc</code>&#x2F;<code>netcat</code>, <code>ping</code>, <code>traceroute</code>, <code>netstat</code></p>
</blockquote>
<h2 id="1-Linux-网络应用要点"><a href="#1-Linux-网络应用要点" class="headerlink" title="1. Linux 网络应用要点"></a>1. Linux 网络应用要点</h2><ul>
<li>下载文件 - 使用 <a href="#curl">curl</a>、<a href="#wget">wget</a></li>
<li>telnet 方式登录远程主机，对远程主机进行管理 - 使用 <a href="#telnet">telnet</a></li>
<li>查看或操纵 Linux 主机的路由、网络设备、策略路由和隧道 - 使用 <a href="#ip">ip</a></li>
<li>查看和设置系统的主机名 - 使用 <a href="#hostname">hostname</a></li>
<li>查看和配置 Linux 内核中网络接口的网络参数 - 使用 <a href="#ifconfig">ifconfig</a></li>
<li>查看和设置 Linux 内核中的网络路由表 - 使用 <a href="#route">route</a></li>
<li>ssh 方式连接远程主机 - 使用 ssh</li>
<li>为 ssh 生成、管理和转换认证密钥 - 使用 <a href="#ssh-keygen">ssh-keygen</a></li>
<li>查看、设置防火墙（Centos7），使用 <a href="#firewalld">firewalld</a></li>
<li>查看、设置防火墙（Centos7 以前），使用 <a href="#iptables">iptables</a></li>
<li>查看域名信息 - 使用 <a href="#host">host</a>, <a href="#nslookup">nslookup</a></li>
<li>设置路由 - 使用 <a href="#ncnetcat">nc&#x2F;netcat</a></li>
<li>测试主机之间网络是否连通 - 使用 <a href="#ping">ping</a></li>
<li>追踪数据在网络上的传输时的全部路径 - 使用 <a href="#traceroute">traceroute</a></li>
<li>查看当前工作的端口信息 - 使用 <a href="#netstat">netstat</a></li>
</ul>
<h2 id="2-命令常见用法"><a href="#2-命令常见用法" class="headerlink" title="2. 命令常见用法"></a>2. 命令常见用法</h2><h3 id="2-1-curl"><a href="#2-1-curl" class="headerlink" title="2.1. curl"></a>2.1. curl</h3><blockquote>
<p>curl 命令是一个利用 URL 规则在命令行下工作的文件传输工具。它支持文件的上传和下载，所以是综合传输工具，但按传统，习惯称 curl 为下载工具。作为一款强力工具，curl 支持包括 HTTP、HTTPS、ftp 等众多协议，还支持 POST、cookies、认证、从指定偏移处下载部分文件、用户代理字符串、限速、文件大小、进度条等特征。做网页处理流程和数据检索自动化，curl 可以祝一臂之力。</p>
<p>参考：<a href="http://man.linuxde.net/curl">http://man.linuxde.net/curl</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 下载文件</span></span><br><span class="line">$ curl http://man.linuxde.net/text.iso --silent</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载文件，指定下载路径，并查看进度</span></span><br><span class="line">$ curl http://man.linuxde.net/test.iso -o filename.iso --progress</span><br><span class="line"><span class="comment">########################################## 100.0%</span></span><br></pre></td></tr></table></figure>

<h3 id="2-2-wget"><a href="#2-2-wget" class="headerlink" title="2.2. wget"></a>2.2. wget</h3><blockquote>
<p>wget 命令用来从指定的 URL 下载文件。</p>
<p>参考：<a href="http://man.linuxde.net/wget">http://man.linuxde.net/wget</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 使用 wget 下载单个文件</span></span><br><span class="line">$ wget http://www.linuxde.net/testfile.zip</span><br></pre></td></tr></table></figure>

<h3 id="2-3-telnet"><a href="#2-3-telnet" class="headerlink" title="2.3. telnet"></a>2.3. telnet</h3><blockquote>
<p>telnet 命令用于登录远程主机，对远程主机进行管理。</p>
<p>参考：<a href="http://man.linuxde.net/telnet">http://man.linuxde.net/telnet</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">telnet 192.168.2.10</span><br><span class="line">Trying 192.168.2.10...</span><br><span class="line">Connected to 192.168.2.10 (192.168.2.10).</span><br><span class="line">Escape character is <span class="string">&#x27;^]&#x27;</span>.</span><br><span class="line"></span><br><span class="line">    localhost (Linux release 2.6.18-274.18.1.el5 <span class="comment">#1 SMP Thu Feb 9 12:45:44 EST 2012) (1)</span></span><br><span class="line"></span><br><span class="line">login: root</span><br><span class="line">Password:</span><br><span class="line">Login incorrect</span><br></pre></td></tr></table></figure>

<h3 id="2-4-ip"><a href="#2-4-ip" class="headerlink" title="2.4. ip"></a>2.4. ip</h3><blockquote>
<p>ip 命令用来查看或操纵 Linux 主机的路由、网络设备、策略路由和隧道，是 Linux 下较新的功能强大的网络配置工具。</p>
<p>参考：<a href="http://man.linuxde.net/ip">http://man.linuxde.net/ip</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ip <span class="built_in">link</span> show                     <span class="comment"># 查看网络接口信息</span></span><br><span class="line">$ ip <span class="built_in">link</span> <span class="built_in">set</span> eth0 upi             <span class="comment"># 开启网卡</span></span><br><span class="line">$ ip <span class="built_in">link</span> <span class="built_in">set</span> eth0 down            <span class="comment"># 关闭网卡</span></span><br><span class="line">$ ip <span class="built_in">link</span> <span class="built_in">set</span> eth0 promisc on      <span class="comment"># 开启网卡的混合模式</span></span><br><span class="line">$ ip <span class="built_in">link</span> <span class="built_in">set</span> eth0 promisc offi    <span class="comment"># 关闭网卡的混个模式</span></span><br><span class="line">$ ip <span class="built_in">link</span> <span class="built_in">set</span> eth0 txqueuelen 1200 <span class="comment"># 设置网卡队列长度</span></span><br><span class="line">$ ip <span class="built_in">link</span> <span class="built_in">set</span> eth0 mtu 1400        <span class="comment"># 设置网卡最大传输单元</span></span><br><span class="line">$ ip addr show     <span class="comment"># 查看网卡IP信息</span></span><br><span class="line">$ ip addr add 192.168.0.1/24 dev eth0 <span class="comment"># 设置eth0网卡IP地址192.168.0.1</span></span><br><span class="line">$ ip addr del 192.168.0.1/24 dev eth0 <span class="comment"># 删除eth0网卡IP地址</span></span><br><span class="line"></span><br><span class="line">$ ip route show <span class="comment"># 查看系统路由</span></span><br><span class="line">$ ip route add default via 192.168.1.254   <span class="comment"># 设置系统默认路由</span></span><br><span class="line">$ ip route list                 <span class="comment"># 查看路由信息</span></span><br><span class="line">$ ip route add 192.168.4.0/24  via  192.168.0.254 dev eth0 <span class="comment"># 设置192.168.4.0网段的网关为192.168.0.254,数据走eth0接口</span></span><br><span class="line">$ ip route add default via  192.168.0.254  dev eth0        <span class="comment"># 设置默认网关为192.168.0.254</span></span><br><span class="line">$ ip route del 192.168.4.0/24   <span class="comment"># 删除192.168.4.0网段的网关</span></span><br><span class="line">$ ip route del default          <span class="comment"># 删除默认路由</span></span><br><span class="line">$ ip route delete 192.168.1.0/24 dev eth0 <span class="comment"># 删除路由</span></span><br></pre></td></tr></table></figure>

<h3 id="2-5-hostname"><a href="#2-5-hostname" class="headerlink" title="2.5. hostname"></a>2.5. hostname</h3><blockquote>
<p>hostname 命令用于查看和设置系统的主机名称。环境变量 HOSTNAME 也保存了当前的主机名。在使用 hostname 命令设置主机名后，系统并不会永久保存新的主机名，重新启动机器之后还是原来的主机名。如果需要永久修改主机名，需要同时修改 <code>/etc/hosts</code> 和 <code>/etc/sysconfig/network</code> 的相关内容。</p>
<p>参考：<a href="http://man.linuxde.net/hostname">http://man.linuxde.net/hostname</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hostname</span><br><span class="line">AY1307311912260196fcZ</span><br></pre></td></tr></table></figure>

<h3 id="2-6-ifconfig"><a href="#2-6-ifconfig" class="headerlink" title="2.6. ifconfig"></a>2.6. ifconfig</h3><blockquote>
<p>ifconfig 命令被用于查看和配置 Linux 内核中网络接口的网络参数。用 ifconfig 命令配置的网卡信息，在网卡重启后机器重启后，配置就不存在。要想将上述的配置信息永远的存的电脑里，那就要修改网卡的配置文件了。</p>
<p>参考：<a href="http://man.linuxde.net/ifconfig">http://man.linuxde.net/ifconfig</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看网络设备信息（激活状态的）</span></span><br><span class="line">[root@localhost ~]<span class="comment"># ifconfig</span></span><br><span class="line">eth0      Link encap:Ethernet  HWaddr 00:16:3E:00:1E:51</span><br><span class="line">          inet addr:10.160.7.81  Bcast:10.160.15.255  Mask:255.255.240.0</span><br><span class="line">          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1</span><br><span class="line">          RX packets:61430830 errors:0 dropped:0 overruns:0 frame:0</span><br><span class="line">          TX packets:88534 errors:0 dropped:0 overruns:0 carrier:0</span><br><span class="line">          collisions:0 txqueuelen:1000</span><br><span class="line">          RX bytes:3607197869 (3.3 GiB)  TX bytes:6115042 (5.8 MiB)</span><br><span class="line"></span><br><span class="line">lo        Link encap:Local Loopback</span><br><span class="line">          inet addr:127.0.0.1  Mask:255.0.0.0</span><br><span class="line">          UP LOOPBACK RUNNING  MTU:16436  Metric:1</span><br><span class="line">          RX packets:56103 errors:0 dropped:0 overruns:0 frame:0</span><br><span class="line">          TX packets:56103 errors:0 dropped:0 overruns:0 carrier:0</span><br><span class="line">          collisions:0 txqueuelen:0</span><br><span class="line">          RX bytes:5079451 (4.8 MiB)  TX bytes:5079451 (4.8 MiB)</span><br></pre></td></tr></table></figure>

<h3 id="2-7-route"><a href="#2-7-route" class="headerlink" title="2.7. route"></a>2.7. route</h3><blockquote>
<p>route 命令用来查看和设置 Linux 内核中的网络路由表，route 命令设置的路由主要是静态路由。要实现两个不同的子网之间的通信，需要一台连接两个网络的路由器，或者同时位于两个网络的网关来实现。</p>
<p>参考：<a href="http://man.linuxde.net/route">http://man.linuxde.net/route</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看当前路由</span></span><br><span class="line">route</span><br><span class="line">Kernel IP routing table</span><br><span class="line">Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</span><br><span class="line">112.124.12.0    *               255.255.252.0   U     0      0        0 eth1</span><br><span class="line">10.160.0.0      *               255.255.240.0   U     0      0        0 eth0</span><br><span class="line">192.168.0.0     10.160.15.247   255.255.0.0     UG    0      0        0 eth0</span><br><span class="line">172.16.0.0      10.160.15.247   255.240.0.0     UG    0      0        0 eth0</span><br><span class="line">10.0.0.0        10.160.15.247   255.0.0.0       UG    0      0        0 eth0</span><br><span class="line">default         112.124.15.247  0.0.0.0         UG    0      0        0 eth1</span><br><span class="line"></span><br><span class="line">route add -net 224.0.0.0 netmask 240.0.0.0 dev eth0    <span class="comment"># 添加网关/设置网关</span></span><br><span class="line">route add -net 224.0.0.0 netmask 240.0.0.0 reject      <span class="comment"># 屏蔽一条路由</span></span><br><span class="line">route del -net 224.0.0.0 netmask 240.0.0.0             <span class="comment"># 删除路由记录</span></span><br><span class="line">route add default gw 192.168.120.240                   <span class="comment"># 添加默认网关</span></span><br><span class="line">route del default gw 192.168.120.240                   <span class="comment"># 删除默认网关</span></span><br></pre></td></tr></table></figure>

<h3 id="2-8-ssh"><a href="#2-8-ssh" class="headerlink" title="2.8. ssh"></a>2.8. ssh</h3><blockquote>
<p>ssh 命令是 openssh 套件中的客户端连接工具，可以给予 ssh 加密协议实现安全的远程登录服务器。</p>
<p>参考：<a href="http://man.linuxde.net/ssh">http://man.linuxde.net/ssh</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ssh 用户名@远程服务器地址</span></span><br><span class="line">ssh user1@172.24.210.101</span><br><span class="line"><span class="comment"># 指定端口</span></span><br><span class="line">ssh -p 2211 root@140.206.185.170</span><br></pre></td></tr></table></figure>

<p>引申阅读：<a href="https://linux.cn/article-8476-1.html">ssh 背后的故事</a></p>
<h3 id="2-9-ssh-keygen"><a href="#2-9-ssh-keygen" class="headerlink" title="2.9. ssh-keygen"></a>2.9. ssh-keygen</h3><blockquote>
<p>ssh-keygen 命令用于为 ssh 生成、管理和转换认证密钥，它支持 RSA 和 DSA 两种认证密钥。</p>
<p>参考：<a href="http://man.linuxde.net/ssh-keygen">http://man.linuxde.net/ssh-keygen</a></p>
</blockquote>
<h3 id="2-10-firewalld"><a href="#2-10-firewalld" class="headerlink" title="2.10. firewalld"></a>2.10. firewalld</h3><blockquote>
<p>firewalld 命令是 Linux 上的防火墙软件（Centos7 默认防火墙）。</p>
<p>参考：<a href="https://www.cnblogs.com/moxiaoan/p/5683743.html">https://www.cnblogs.com/moxiaoan/p/5683743.html</a></p>
</blockquote>
<h4 id="2-10-1-firewalld-的基本使用"><a href="#2-10-1-firewalld-的基本使用" class="headerlink" title="2.10.1. firewalld 的基本使用"></a>2.10.1. firewalld 的基本使用</h4><ul>
<li>启动 - systemctl start firewalld</li>
<li>关闭 - systemctl stop firewalld</li>
<li>查看状态 - systemctl status firewalld</li>
<li>开机禁用 - systemctl disable firewalld</li>
<li>开机启用 - systemctl enable firewalld</li>
</ul>
<h4 id="2-10-2-使用-systemctl-管理-firewalld-服务"><a href="#2-10-2-使用-systemctl-管理-firewalld-服务" class="headerlink" title="2.10.2. 使用 systemctl 管理 firewalld 服务"></a>2.10.2. 使用 systemctl 管理 firewalld 服务</h4><p>systemctl 是 CentOS7 的服务管理工具中主要的工具，它融合之前 service 和 chkconfig 的功能于一体。</p>
<ul>
<li>启动一个服务 - systemctl start firewalld.service</li>
<li>关闭一个服务 - systemctl stop firewalld.service</li>
<li>重启一个服务 - systemctl restart firewalld.service</li>
<li>显示一个服务的状态 - systemctl status firewalld.service</li>
<li>在开机时启用一个服务 - systemctl enable firewalld.service</li>
<li>在开机时禁用一个服务 - systemctl disable firewalld.service</li>
<li>查看服务是否开机启动 - systemctl is-enabled firewalld.service</li>
<li>查看已启动的服务列表 - systemctl list-unit-files|grep enabled</li>
<li>查看启动失败的服务列表 - systemctl –failed</li>
</ul>
<h4 id="2-10-3-配置-firewalld-cmd"><a href="#2-10-3-配置-firewalld-cmd" class="headerlink" title="2.10.3. 配置 firewalld-cmd"></a>2.10.3. 配置 firewalld-cmd</h4><ul>
<li>查看版本 - firewall-cmd –version</li>
<li>查看帮助 - firewall-cmd –help</li>
<li>显示状态 - firewall-cmd –state</li>
<li>查看所有打开的端口 - firewall-cmd –zone&#x3D;public –list-ports</li>
<li>更新防火墙规则 - firewall-cmd –reload</li>
<li>查看区域信息: firewall-cmd –get-active-zones</li>
<li>查看指定接口所属区域 - firewall-cmd –get-zone-of-interface&#x3D;eth0</li>
<li>拒绝所有包：firewall-cmd –panic-on</li>
<li>取消拒绝状态 - firewall-cmd –panic-off</li>
<li>查看是否拒绝 - firewall-cmd –query-panic</li>
</ul>
<h4 id="2-10-4-在防火墙中开放一个端口"><a href="#2-10-4-在防火墙中开放一个端口" class="headerlink" title="2.10.4. 在防火墙中开放一个端口"></a>2.10.4. 在防火墙中开放一个端口</h4><ul>
<li>添加（–permanent 永久生效，没有此参数重启后失效） - firewall-cmd –zone&#x3D;public –add-port&#x3D;80&#x2F;tcp –permanent</li>
<li>重新载入 - firewall-cmd –reload</li>
<li>查看 - firewall-cmd –zone&#x3D; public –query-port&#x3D;80&#x2F;tcp</li>
<li>删除 - firewall-cmd –zone&#x3D; public –remove-port&#x3D;80&#x2F;tcp –permanent</li>
</ul>
<h3 id="2-11-iptables"><a href="#2-11-iptables" class="headerlink" title="2.11. iptables"></a>2.11. iptables</h3><blockquote>
<p>iptables 命令是 Linux 上常用的防火墙软件，是 netfilter 项目的一部分。可以直接配置，也可以通过许多前端和图形界面配置。</p>
<p>参考：<a href="http://man.linuxde.net/iptables">http://man.linuxde.net/iptables</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 开放指定的端口</span></span><br><span class="line">iptables -A INPUT -s 127.0.0.1 -d 127.0.0.1 -j ACCEPT               <span class="comment">#允许本地回环接口(即运行本机访问本机)</span></span><br><span class="line">iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT    <span class="comment">#允许已建立的或相关连的通行</span></span><br><span class="line">iptables -A OUTPUT -j ACCEPT         <span class="comment">#允许所有本机向外的访问</span></span><br><span class="line">iptables -A INPUT -p tcp --dport 22 -j ACCEPT    <span class="comment">#允许访问22端口</span></span><br><span class="line">iptables -A INPUT -p tcp --dport 80 -j ACCEPT    <span class="comment">#允许访问80端口</span></span><br><span class="line">iptables -A INPUT -p tcp --dport 21 -j ACCEPT    <span class="comment">#允许ftp服务的21端口</span></span><br><span class="line">iptables -A INPUT -p tcp --dport 20 -j ACCEPT    <span class="comment">#允许FTP服务的20端口</span></span><br><span class="line">iptables -A INPUT -j reject       <span class="comment">#禁止其他未允许的规则访问</span></span><br><span class="line">iptables -A FORWARD -j REJECT     <span class="comment">#禁止其他未允许的规则访问</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 屏蔽IP</span></span><br><span class="line">iptables -I INPUT -s 123.45.6.7 -j DROP       <span class="comment">#屏蔽单个IP的命令</span></span><br><span class="line">iptables -I INPUT -s 123.0.0.0/8 -j DROP      <span class="comment">#封整个段即从123.0.0.1到123.255.255.254的命令</span></span><br><span class="line">iptables -I INPUT -s 124.45.0.0/16 -j DROP    <span class="comment">#封IP段即从123.45.0.1到123.45.255.254的命令</span></span><br><span class="line">iptables -I INPUT -s 123.45.6.0/24 -j DROP    <span class="comment">#封IP段即从123.45.6.1到123.45.6.254的命令是</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看已添加的iptables规则</span></span><br><span class="line">iptables -L -n -v</span><br><span class="line">Chain INPUT (policy DROP 48106 packets, 2690K bytes)</span><br><span class="line"> pkts bytes target     prot opt <span class="keyword">in</span>     out     <span class="built_in">source</span>               destination</span><br><span class="line"> 5075  589K ACCEPT     all  --  lo     *       0.0.0.0/0            0.0.0.0/0</span><br><span class="line"> 191K   90M ACCEPT     tcp  --  *      *       0.0.0.0/0            0.0.0.0/0           tcp dpt:22</span><br><span class="line">1499K  133M ACCEPT     tcp  --  *      *       0.0.0.0/0            0.0.0.0/0           tcp dpt:80</span><br><span class="line">4364K 6351M ACCEPT     all  --  *      *       0.0.0.0/0            0.0.0.0/0           state RELATED,ESTABLISHED</span><br><span class="line"> 6256  327K ACCEPT     icmp --  *      *       0.0.0.0/0            0.0.0.0/0</span><br><span class="line"></span><br><span class="line">Chain FORWARD (policy ACCEPT 0 packets, 0 bytes)</span><br><span class="line"> pkts bytes target     prot opt <span class="keyword">in</span>     out     <span class="built_in">source</span>               destination</span><br><span class="line"></span><br><span class="line">Chain OUTPUT (policy ACCEPT 3382K packets, 1819M bytes)</span><br><span class="line"> pkts bytes target     prot opt <span class="keyword">in</span>     out     <span class="built_in">source</span>               destination</span><br><span class="line"> 5075  589K ACCEPT     all  --  *      lo      0.0.0.0/0            0.0.0.0/0</span><br></pre></td></tr></table></figure>

<h3 id="2-12-host"><a href="#2-12-host" class="headerlink" title="2.12. host"></a>2.12. host</h3><blockquote>
<p>host 命令是常用的分析域名查询工具，可以用来测试域名系统工作是否正常。</p>
<p>参考：<a href="http://man.linuxde.net/host">http://man.linuxde.net/host</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># host www.jsdig.com</span></span><br><span class="line">www.jsdig.com is an <span class="built_in">alias</span> <span class="keyword">for</span> host.1.jsdig.com.</span><br><span class="line">host.1.jsdig.com has address 100.42.212.8</span><br><span class="line"></span><br><span class="line">[root@localhost ~]<span class="comment"># host -a www.jsdig.com</span></span><br><span class="line">Trying <span class="string">&quot;www.jsdig.com&quot;</span></span><br><span class="line">;; -&gt;&gt;HEADER&lt;&lt;- <span class="string">opcode: QUERY, status: NOERROR, id: 34671</span></span><br><span class="line"><span class="string">;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 0</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">;; QUESTION SECTION:</span></span><br><span class="line"><span class="string">;www.jsdig.com.               IN      ANY</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">;; ANSWER SECTION:</span></span><br><span class="line"><span class="string">www.jsdig.com.        463     IN      CNAME   host.1.jsdig.com.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Received 54 bytes from 202.96.104.15#53 in 0 ms</span></span><br></pre></td></tr></table></figure>

<h3 id="2-13-nslookup"><a href="#2-13-nslookup" class="headerlink" title="2.13. nslookup"></a>2.13. nslookup</h3><blockquote>
<p>nslookup 命令是常用域名查询工具，就是查 DNS 信息用的命令。</p>
<p>参考：<a href="http://man.linuxde.net/nslookup">http://man.linuxde.net/nslookup</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># nslookup www.jsdig.com</span></span><br><span class="line">Server:         202.96.104.15</span><br><span class="line">Address:        202.96.104.15<span class="comment">#53</span></span><br><span class="line"></span><br><span class="line">Non-authoritative answer:</span><br><span class="line">www.jsdig.com canonical name = host.1.jsdig.com.</span><br><span class="line">Name:   host.1.jsdig.com</span><br><span class="line">Address: 100.42.212.8</span><br></pre></td></tr></table></figure>

<h3 id="2-14-nc-netcat"><a href="#2-14-nc-netcat" class="headerlink" title="2.14. nc&#x2F;netcat"></a>2.14. nc&#x2F;netcat</h3><blockquote>
<p>nc 命令是 netcat 命令的简称，都是用来设置路由器。</p>
<p>参考：<a href="http://man.linuxde.net/nc_netcat">http://man.linuxde.net/nc_netcat</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># TCP 端口扫描</span></span><br><span class="line">[root@localhost ~]<span class="comment"># nc -v -z -w2 192.168.0.3 1-100</span></span><br><span class="line">192.168.0.3: inverse host lookup failed: Unknown host</span><br><span class="line">(UNKNOWN) [192.168.0.3] 80 (http) open</span><br><span class="line">(UNKNOWN) [192.168.0.3] 23 (telnet) open</span><br><span class="line">(UNKNOWN) [192.168.0.3] 22 (ssh) open</span><br><span class="line"></span><br><span class="line"><span class="comment"># UDP 端口扫描</span></span><br><span class="line">[root@localhost ~]<span class="comment"># nc -u -z -w2 192.168.0.1 1-1000  # 扫描192.168.0.3 的端口 范围是 1-1000</span></span><br></pre></td></tr></table></figure>

<h3 id="2-15-ping"><a href="#2-15-ping" class="headerlink" title="2.15. ping"></a>2.15. ping</h3><blockquote>
<p>ping 命令用来测试主机之间网络的连通性。执行 ping 指令会使用 ICMP 传输协议，发出要求回应的信息，若远端主机的网络功能没有问题，就会回应该信息，因而得知该主机运作正常。</p>
<p>参考：<a href="http://man.linuxde.net/ping">http://man.linuxde.net/ping</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@AY1307311912260196fcZ ~]<span class="comment"># ping www.jsdig.com</span></span><br><span class="line">PING host.1.jsdig.com (100.42.212.8) 56(84) bytes of data.</span><br><span class="line">64 bytes from 100-42-212-8.static.webnx.com (100.42.212.8): icmp_seq=1 ttl=50 time=177 ms</span><br><span class="line">64 bytes from 100-42-212-8.static.webnx.com (100.42.212.8): icmp_seq=2 ttl=50 time=178 ms</span><br><span class="line">64 bytes from 100-42-212-8.static.webnx.com (100.42.212.8): icmp_seq=3 ttl=50 time=174 ms</span><br><span class="line">64 bytes from 100-42-212-8.static.webnx.com (100.42.212.8): icmp_seq=4 ttl=50 time=177 ms</span><br><span class="line">...按Ctrl+C结束</span><br><span class="line"></span><br><span class="line">--- host.1.jsdig.com ping statistics ---</span><br><span class="line">4 packets transmitted, 4 received, 0% packet loss, time 2998ms</span><br><span class="line">rtt min/avg/max/mdev = 174.068/176.916/178.182/1.683 ms</span><br></pre></td></tr></table></figure>

<h3 id="2-16-traceroute"><a href="#2-16-traceroute" class="headerlink" title="2.16. traceroute"></a>2.16. traceroute</h3><blockquote>
<p>traceroute 命令用于追踪数据包在网络上的传输时的全部路径，它默认发送的数据包大小是 40 字节。</p>
<p>参考：<a href="http://man.linuxde.net/traceroute">http://man.linuxde.net/traceroute</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">traceroute www.58.com</span><br><span class="line">traceroute to www.58.com (211.151.111.30), 30 hops max, 40 byte packets</span><br><span class="line"> 1  unknown (192.168.2.1)  3.453 ms  3.801 ms  3.937 ms</span><br><span class="line"> 2  221.6.45.33 (221.6.45.33)  7.768 ms  7.816 ms  7.840 ms</span><br><span class="line"> 3  221.6.0.233 (221.6.0.233)  13.784 ms  13.827 ms 221.6.9.81 (221.6.9.81)  9.758 ms</span><br><span class="line"> 4  221.6.2.169 (221.6.2.169)  11.777 ms 122.96.66.13 (122.96.66.13)  34.952 ms 221.6.2.53 (221.6.2.53)  41.372 ms</span><br><span class="line"> 5  219.158.96.149 (219.158.96.149)  39.167 ms  39.210 ms  39.238 ms</span><br><span class="line"> 6  123.126.0.194 (123.126.0.194)  37.270 ms 123.126.0.66 (123.126.0.66)  37.163 ms  37.441 ms</span><br><span class="line"> 7  124.65.57.26 (124.65.57.26)  42.787 ms  42.799 ms  42.809 ms</span><br><span class="line"> 8  61.148.146.210 (61.148.146.210)  30.176 ms 61.148.154.98 (61.148.154.98)  32.613 ms  32.675 ms</span><br><span class="line"> 9  202.106.42.102 (202.106.42.102)  44.563 ms  44.600 ms  44.627 ms</span><br><span class="line">10  210.77.139.150 (210.77.139.150)  53.302 ms  53.233 ms  53.032 ms</span><br><span class="line">11  211.151.104.6 (211.151.104.6)  39.585 ms  39.502 ms  39.598 ms</span><br><span class="line">12  211.151.111.30 (211.151.111.30)  35.161 ms  35.938 ms  36.005 ms</span><br></pre></td></tr></table></figure>

<h3 id="2-17-netstat"><a href="#2-17-netstat" class="headerlink" title="2.17. netstat"></a>2.17. netstat</h3><blockquote>
<p>netstat 命令用来打印 Linux 中网络系统的状态信息，可让你得知整个 Linux 系统的网络情况。</p>
<p>参考：<a href="http://man.linuxde.net/netstat">http://man.linuxde.net/netstat</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 列出所有端口 (包括监听和未监听的)</span></span><br><span class="line">netstat -a     <span class="comment">#列出所有端口</span></span><br><span class="line">netstat -at    <span class="comment">#列出所有tcp端口</span></span><br><span class="line">netstat -au    <span class="comment">#列出所有udp端口</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出所有处于监听状态的 Sockets</span></span><br><span class="line">netstat -l        <span class="comment">#只显示监听端口</span></span><br><span class="line">netstat -lt       <span class="comment">#只列出所有监听 tcp 端口</span></span><br><span class="line">netstat -lu       <span class="comment">#只列出所有监听 udp 端口</span></span><br><span class="line">netstat -lx       <span class="comment">#只列出所有监听 UNIX 端口</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示每个协议的统计信息</span></span><br><span class="line">netstat -s   显示所有端口的统计信息</span><br><span class="line">netstat -st   显示TCP端口的统计信息</span><br><span class="line">netstat -su   显示UDP端口的统计信息</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 软件管理</title>
    <url>/2022/02/20/linux-cli-software/</url>
    <content><![CDATA[<h1 id="Linux-软件管理"><a href="#Linux-软件管理" class="headerlink" title="Linux 软件管理"></a>Linux 软件管理</h1><blockquote>
<p>关键词：<code>rpm</code>, <code>yum</code>, <code>apt-get</code></p>
</blockquote>
<h2 id="1-rpm"><a href="#1-rpm" class="headerlink" title="1. rpm"></a>1. rpm</h2><blockquote>
<p>rpm 命令是 RPM 软件包的管理工具。rpm 原本是 Red Hat Linux 发行版专门用来管理 Linux 各项套件的程序，由于它遵循 GPL 规则且功能强大方便，因而广受欢迎。逐渐受到其他发行版的采用。RPM 套件管理方式的出现，让 Linux 易于安装，升级，间接提升了 Linux 的适用度。</p>
<p>参考：<a href="http://man.linuxde.net/rpm">http://man.linuxde.net/rpm</a></p>
</blockquote>
<p>示例：</p>
<p>（1）安装 rpm 包</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rpm -ivh xxx.rpm</span><br></pre></td></tr></table></figure>

<p>（2）安装.src.rpm 软件包</p>
<p>这类软件包是包含了源代码的 rpm 包，在安装时需要进行编译</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rpm -i xxx.src.rpm</span><br><span class="line"><span class="built_in">cd</span> /usr/src/redhat/SPECS</span><br><span class="line">rpmbuild -bp xxx.specs             <span class="comment">#一个和你的软件包同名的specs文件</span></span><br><span class="line"><span class="built_in">cd</span> /usr/src/redhat/BUILD/xxx/      <span class="comment">#一个和你的软件包同名的目录</span></span><br><span class="line">./configure                        <span class="comment">#这一步和编译普通的源码软件一样，可以加上参数</span></span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>

<p>（3）卸载 rpm 软件包</p>
<p>使用命令 <code>rpm -e 包名</code>，包名可以包含版本号等信息，但是不可以有后缀.rpm，比如卸载软件包 proftpd-1.2.8-1，可以使用下列格式：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rpm -e proftpd-1.2.8-1</span><br><span class="line">rpm -e proftpd-1.2.8</span><br><span class="line">rpm -e proftpd-</span><br><span class="line">rpm -e proftpd</span><br></pre></td></tr></table></figure>

<p>不可以是下列格式：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rpm -e proftpd-1.2.8-1.i386.rpm</span><br><span class="line">rpm -e proftpd-1.2.8-1.i386</span><br><span class="line">rpm -e proftpd-1.2</span><br><span class="line">rpm -e proftpd-1</span><br></pre></td></tr></table></figure>

<p>有时会出现一些错误或者警告：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">... is needed by ...</span><br></pre></td></tr></table></figure>

<p>这说明这个软件被其他软件需要，不能随便卸载，可以用 rpm -e –nodeps 强制卸载</p>
<p>（4）查看与 rpm 包相关的文件和其他信息</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rpm -qa <span class="comment"># 列出所有安装过的包</span></span><br></pre></td></tr></table></figure>

<h2 id="2-yum"><a href="#2-yum" class="headerlink" title="2. yum"></a>2. yum</h2><blockquote>
<p>yum 命令是在 Fedora 和 RedHat 以及 SUSE 中基于 rpm 的软件包管理器，它可以使系统管理人员交互和自动化地更细与管理 RPM 软件包，能够从指定的服务器自动下载 RPM 包并且安装，可以自动处理依赖性关系，并且一次安装所有依赖的软体包，无须繁琐地一次次下载、安装。</p>
<p>参考：<a href="http://man.linuxde.net/yum">http://man.linuxde.net/yum</a></p>
</blockquote>
<p>示例：</p>
<p>部分常用的命令包括：</p>
<ul>
<li>自动搜索最快镜像插件：<code>yum install yum-fastestmirror</code></li>
<li>安装 yum 图形窗口插件：<code>yum install yumex</code></li>
<li>查看可能批量安装的列表：<code>yum grouplist</code></li>
</ul>
<p><strong>安装</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install              #全部安装</span><br><span class="line">yum install package1     #安装指定的安装包package1</span><br><span class="line">yum groupinsall group1   #安装程序组group1</span><br></pre></td></tr></table></figure>

<p><strong>更新和升级</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum update               #全部更新</span><br><span class="line">yum update package1      #更新指定程序包package1</span><br><span class="line">yum check-update         #检查可更新的程序</span><br><span class="line">yum upgrade package1     #升级指定程序包package1</span><br><span class="line">yum groupupdate group1   #升级程序组group1</span><br></pre></td></tr></table></figure>

<p><strong>查找和显示</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum info package1      #显示安装包信息package1</span><br><span class="line">yum list               #显示所有已经安装和可以安装的程序包</span><br><span class="line">yum list package1      #显示指定程序包安装情况package1</span><br><span class="line">yum groupinfo group1   #显示程序组group1信息yum search string 根据关键字string查找安装包</span><br><span class="line">yum search &lt;keyword&gt;   #查找软件包</span><br></pre></td></tr></table></figure>

<p><strong>删除程序</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum remove &lt;package_name&gt;          #删除程序包package_name</span><br><span class="line">yum groupremove group1             #删除程序组group1</span><br><span class="line">yum deplist package1               #查看程序package1依赖情况</span><br></pre></td></tr></table></figure>

<p><strong>清除缓存</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum clean packages       #清除缓存目录下的软件包</span><br><span class="line">yum clean headers        #清除缓存目录下的 headers</span><br><span class="line">yum clean oldheaders     #清除缓存目录下旧的 headers</span><br></pre></td></tr></table></figure>

<h3 id="2-1-yum-源"><a href="#2-1-yum-源" class="headerlink" title="2.1. yum 源"></a>2.1. yum 源</h3><p>yum 的默认源是国外的，下载速度比较慢，所以最好替换为一个国内的 yum 源。</p>
<table>
<thead>
<tr>
<th>推荐 yum 国内源</th>
<th>源地址</th>
</tr>
</thead>
<tbody><tr>
<td><a href="http://mirrors.163.com/">http://mirrors.163.com/</a></td>
<td>Centos6：<a href="http://mirrors.aliyun.com/repo/Centos-6.repo">http://mirrors.aliyun.com/repo/Centos-6.repo</a><br>Centos7：<a href="http://mirrors.aliyun.com/repo/Centos-7.repo">http://mirrors.aliyun.com/repo/Centos-7.repo</a></td>
</tr>
<tr>
<td><a href="http://mirrors.aliyun.com/">http://mirrors.aliyun.com/</a></td>
<td>Centos6：<a href="http://mirrors.163.com/.help/CentOS6-Base-163.repo">http://mirrors.163.com/.help/CentOS6-Base-163.repo</a><br>Centos7：<a href="http://mirrors.163.com/.help/CentOS7-Base-163.repo">http://mirrors.163.com/.help/CentOS7-Base-163.repo</a></td>
</tr>
</tbody></table>
<blockquote>
<p>🔔 注意：Cento5 已废弃，只能使用 <a href="http://vault.centos.org/">http://vault.centos.org/</a> 替换，但由于是国外镜像，速度较慢。</p>
</blockquote>
<p>替换方法，以 aliyun CentOS7 为例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cp /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.bak</span><br><span class="line">wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line">yum clean all</span><br><span class="line">yum makecache</span><br></pre></td></tr></table></figure>

<h2 id="3-apt-get"><a href="#3-apt-get" class="headerlink" title="3. apt-get"></a>3. apt-get</h2><blockquote>
<p>apt-get 命令是 Debian Linux 发行版中的 APT 软件包管理工具。所有基于 Debian 的发行都使用这个包管理系统。deb 包可以把一个应用的文件包在一起，大体就如同 Windows 上的安装文件。</p>
<p>参考：<a href="http://man.linuxde.net/apt-get">http://man.linuxde.net/apt-get</a></p>
</blockquote>
<p>示例：</p>
<p>使用 apt-get 命令的第一步就是引入必需的软件库，Debian 的软件库也就是所有 Debian 软件包的集合，它们存在互联网上的一些公共站点上。把它们的地址加入，apt-get 就能搜索到我们想要的软件。&#x2F;etc&#x2F;apt&#x2F;sources.list 是存放这些地址列表的配置文件，其格式如下：</p>
<p>deb [web 或 ftp 地址][发行版名字] [main&#x2F;contrib&#x2F;non-free]<br>我们常用的 Ubuntu 就是一个基于 Debian 的发行，我们使用 apt-get 命令获取这个列表，以下是我整理的常用命令：</p>
<p>在修改 &#x2F;etc&#x2F;apt&#x2F;sources.list 或者 &#x2F;etc&#x2F;apt&#x2F;preferences 之后运行该命令。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 更新 apt-get</span></span><br><span class="line">apt-get update</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装一个软件包</span></span><br><span class="line">apt-get install packagename</span><br><span class="line"></span><br><span class="line"><span class="comment"># 卸载一个已安装的软件包（保留配置文件）</span></span><br><span class="line">apt-get remove packagename</span><br><span class="line"></span><br><span class="line"><span class="comment"># 卸载一个已安装的软件包（删除配置文件）</span></span><br><span class="line">apt-get –purge remove packagename</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果需要空间的话，可以让这个命令来删除你已经删掉的软件</span></span><br><span class="line">apt-get autoclean apt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 把安装的软件的备份也删除，不过这样不会影响软件的使用的</span></span><br><span class="line">apt-get clean</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新所有已安装的软件包</span></span><br><span class="line">apt-get upgrade</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将系统升级到新版本</span></span><br><span class="line">apt-get dist-upgrade</span><br></pre></td></tr></table></figure>

<h2 id="4-参考资料"><a href="#4-参考资料" class="headerlink" title="4. 参考资料"></a>4. 参考资料</h2><ul>
<li><a href="http://man.linuxde.net/rpm">http://man.linuxde.net/rpm</a></li>
<li><a href="http://man.linuxde.net/yum">http://man.linuxde.net/yum</a></li>
<li><a href="http://man.linuxde.net/apt-get">http://man.linuxde.net/apt-get</a></li>
<li><a href="http://www.runoob.com/linux/linux-yum.html">http://www.runoob.com/linux/linux-yum.html</a></li>
</ul>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 系统管理</title>
    <url>/2022/02/20/linux-cli-system/</url>
    <content><![CDATA[<h1 id="Linux-系统管理"><a href="#Linux-系统管理" class="headerlink" title="Linux 系统管理"></a>Linux 系统管理</h1><blockquote>
<p>关键词：<code>lsb_release</code>, <code>reboot</code>, <code>exit</code>, <code>shutdown</code>, <code>date</code>, <code>mount</code>, <code>umount</code>, <code>ps</code>, <code>kill</code>, <code>systemctl</code>, <code>service</code>, <code>crontab</code></p>
</blockquote>
<h2 id="1-Linux-系统管理要点"><a href="#1-Linux-系统管理要点" class="headerlink" title="1. Linux 系统管理要点"></a>1. Linux 系统管理要点</h2><ul>
<li>查看 Linux 系统发行版本<ul>
<li>使用 <a href="#lsb_release">lsb_release</a>（此命令适用于所有的 Linux 发行版本）</li>
<li>使用 <code>cat /etc/redhat-release</code>（此方法只适合 Redhat 系的 Linux）</li>
</ul>
</li>
<li>查看 CPU 信息 - 使用 <code>cat /proc/cpuinfo</code></li>
<li>重新启动 Linux 操作系统 - 使用 <a href="#reboot">reboot</a></li>
<li>退出 shell，并返回给定值 - 使用 <a href="#exit">exit</a></li>
<li>关闭系统 - 使用 <a href="#shutdown">shutdown</a></li>
<li>查看或设置系统时间与日期 - 使用 <a href="#date">date</a></li>
<li>挂载文件系统 - 使用 <a href="#mount">mount</a></li>
<li>取消挂载文件系统 - 使用 <a href="#umount">umount</a></li>
<li>查看系统当前进程状态 - 使用 <a href="#ps">ps</a></li>
<li>删除当前正在运行的进程 - 使用 <a href="#kill">kill</a></li>
<li>启动、停止、重启、关闭、显示系统服务（Centos7），使用 <a href="#systemctl">systemctl</a></li>
<li>启动、停止、重启、关闭、显示系统服务（Centos7 以前），使用 <a href="#service">service</a></li>
<li>管理需要周期性执行的任务，使用 <a href="#crontab">crontab</a></li>
</ul>
<h2 id="2-命令常见用法"><a href="#2-命令常见用法" class="headerlink" title="2. 命令常见用法"></a>2. 命令常见用法</h2><h3 id="2-1-lsb-release"><a href="#2-1-lsb-release" class="headerlink" title="2.1. lsb_release"></a>2.1. lsb_release</h3><p>lsb_release 不是 bash 默认命令，如果要使用，需要先安装。</p>
<p>安装方法：</p>
<ol>
<li>执行 <code>yum provides lsb_release</code>，查看支持 lsb_release 命令的包。</li>
<li>选择合适版本，执行类似这样的安装命令：<code>yum install -y redhat-lsb-core-4.1-27.el7.centos.1.x86_64</code></li>
</ol>
<h3 id="2-2-reboot"><a href="#2-2-reboot" class="headerlink" title="2.2. reboot"></a>2.2. reboot</h3><blockquote>
<p>reboot 命令用来重新启动正在运行的 Linux 操作系统。</p>
<p>参考：<a href="http://man.linuxde.net/reboot">http://man.linuxde.net/reboot</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">reboot        <span class="comment"># 重开机。</span></span><br><span class="line">reboot -w     <span class="comment"># 做个重开机的模拟（只有纪录并不会真的重开机）。</span></span><br></pre></td></tr></table></figure>

<h3 id="2-3-exit"><a href="#2-3-exit" class="headerlink" title="2.3. exit"></a>2.3. exit</h3><blockquote>
<p>exit 命令同于退出 shell，并返回给定值。在 shell 脚本中可以终止当前脚本执行。执行 exit 可使 shell 以指定的状态值退出。若不设置状态值参数，则 shell 以预设值退出。状态值 0 代表执行成功，其他值代表执行失败。</p>
<p>参考：<a href="http://man.linuxde.net/exit">http://man.linuxde.net/exit</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 退出当前 shell</span></span><br><span class="line">[root@localhost ~]<span class="comment"># exit</span></span><br><span class="line"><span class="built_in">logout</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在脚本中，进入脚本所在目录，否则退出</span></span><br><span class="line"><span class="built_in">cd</span> $(<span class="built_in">dirname</span> <span class="variable">$0</span>) || <span class="built_in">exit</span> 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在脚本中，判断参数数量，不匹配就打印使用方式，退出</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$#</span>&quot;</span> -ne <span class="string">&quot;2&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;usage: <span class="variable">$0</span> &lt;area&gt; &lt;hours&gt;&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 2</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在脚本中，退出时删除临时文件</span></span><br><span class="line"><span class="built_in">trap</span> <span class="string">&quot;rm -f tmpfile; echo Bye.&quot;</span> EXIT</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查上一命令的退出码</span></span><br><span class="line">./mycommand.sh</span><br><span class="line">EXCODE=$?</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$EXCODE</span>&quot;</span> == <span class="string">&quot;0&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;O.K&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>

<h3 id="2-4-shutdown"><a href="#2-4-shutdown" class="headerlink" title="2.4. shutdown"></a>2.4. shutdown</h3><blockquote>
<p>shutdown 命令用来系统关机命令。shutdown 指令可以关闭所有程序，并依用户的需要，进行重新开机或关机的动作。</p>
<p>参考：<a href="http://man.linuxde.net/shutdown">http://man.linuxde.net/shutdown</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 指定现在立即关机</span></span><br><span class="line">shutdown -h now</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定 5 分钟后关机，同时送出警告信息给登入用户</span></span><br><span class="line">shutdown +5 <span class="string">&quot;System will shutdown after 5 minutes&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="2-5-date"><a href="#2-5-date" class="headerlink" title="2.5. date"></a>2.5. date</h3><blockquote>
<p>date 命令是显示或设置系统时间与日期。</p>
<p>参考：<a href="http://man.linuxde.net/date">http://man.linuxde.net/date</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 格式化输出</span></span><br><span class="line"><span class="built_in">date</span> +<span class="string">&quot;%Y-%m-%d&quot;</span></span><br><span class="line">2009-12-07</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出昨天日期</span></span><br><span class="line"><span class="built_in">date</span> -d <span class="string">&quot;1 day ago&quot;</span> +<span class="string">&quot;%Y-%m-%d&quot;</span></span><br><span class="line">2012-11-19</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2 秒后输出</span></span><br><span class="line"><span class="built_in">date</span> -d <span class="string">&quot;2 second&quot;</span> +<span class="string">&quot;%Y-%m-%d %H:%M.%S&quot;</span></span><br><span class="line">2012-11-20 14:21.31</span><br><span class="line"></span><br><span class="line"><span class="comment"># 传说中的 1234567890 秒</span></span><br><span class="line"><span class="built_in">date</span> -d <span class="string">&quot;1970-01-01 1234567890 seconds&quot;</span> +<span class="string">&quot;%Y-%m-%d %H:%m:%S&quot;</span></span><br><span class="line">2009-02-13 23:02:30</span><br><span class="line"></span><br><span class="line"><span class="comment"># 普通转格式</span></span><br><span class="line"><span class="built_in">date</span> -d <span class="string">&quot;2009-12-12&quot;</span> +<span class="string">&quot;%Y/%m/%d %H:%M.%S&quot;</span></span><br><span class="line">2009/12/12 00:00.00</span><br><span class="line"></span><br><span class="line"><span class="comment"># apache 格式转换</span></span><br><span class="line"><span class="built_in">date</span> -d <span class="string">&quot;Dec 5, 2009 12:00:37 AM&quot;</span> +<span class="string">&quot;%Y-%m-%d %H:%M.%S&quot;</span></span><br><span class="line">2009-12-05 00:00.37</span><br><span class="line"></span><br><span class="line"><span class="comment"># 格式转换后时间游走</span></span><br><span class="line"><span class="built_in">date</span> -d <span class="string">&quot;Dec 5, 2009 12:00:37 AM 2 year ago&quot;</span> +<span class="string">&quot;%Y-%m-%d %H:%M.%S&quot;</span></span><br><span class="line">2007-12-05 00:00.37</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加减操作</span></span><br><span class="line"><span class="built_in">date</span> +%Y%m%d                   <span class="comment"># 显示前天年月日</span></span><br><span class="line"><span class="built_in">date</span> -d <span class="string">&quot;+1 day&quot;</span> +%Y%m%d       <span class="comment"># 显示前一天的日期</span></span><br><span class="line"><span class="built_in">date</span> -d <span class="string">&quot;-1 day&quot;</span> +%Y%m%d       <span class="comment"># 显示后一天的日期</span></span><br><span class="line"><span class="built_in">date</span> -d <span class="string">&quot;-1 month&quot;</span> +%Y%m%d     <span class="comment"># 显示上一月的日期</span></span><br><span class="line"><span class="built_in">date</span> -d <span class="string">&quot;+1 month&quot;</span> +%Y%m%d     <span class="comment"># 显示下一月的日期</span></span><br><span class="line"><span class="built_in">date</span> -d <span class="string">&quot;-1 year&quot;</span> +%Y%m%d      <span class="comment"># 显示前一年的日期</span></span><br><span class="line"><span class="built_in">date</span> -d <span class="string">&quot;+1 year&quot;</span> +%Y%m%d      <span class="comment"># 显示下一年的日期</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设定时间</span></span><br><span class="line"><span class="built_in">date</span> -s                        <span class="comment"># 设置当前时间，只有root权限才能设置，其他只能查看</span></span><br><span class="line"><span class="built_in">date</span> -s 20120523               <span class="comment"># 设置成20120523，这样会把具体时间设置成空00:00:00</span></span><br><span class="line"><span class="built_in">date</span> -s 01:01:01               <span class="comment"># 设置具体时间，不会对日期做更改</span></span><br><span class="line"><span class="built_in">date</span> -s <span class="string">&quot;01:01:01 2012-05-23&quot;</span>  <span class="comment"># 这样可以设置全部时间</span></span><br><span class="line"><span class="built_in">date</span> -s <span class="string">&quot;01:01:01 20120523&quot;</span>    <span class="comment"># 这样可以设置全部时间</span></span><br><span class="line"><span class="built_in">date</span> -s <span class="string">&quot;2012-05-23 01:01:01&quot;</span>  <span class="comment"># 这样可以设置全部时间</span></span><br><span class="line"><span class="built_in">date</span> -s <span class="string">&quot;20120523 01:01:01&quot;</span>    <span class="comment"># 这样可以设置全部时间</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 有时需要检查一组命令花费的时间</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">start=$(<span class="built_in">date</span> +%s)</span><br><span class="line">nmap man.linuxde.net &amp;&gt; /dev/null</span><br><span class="line"></span><br><span class="line">end=$(<span class="built_in">date</span> +%s)</span><br><span class="line">difference=$(( end - start ))</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$difference</span> seconds.</span><br></pre></td></tr></table></figure>

<h3 id="2-6-mount"><a href="#2-6-mount" class="headerlink" title="2.6. mount"></a>2.6. mount</h3><blockquote>
<p>mount 命令用于挂载文件系统到指定的挂载点。此命令的最常用于挂载 cdrom，使我们可以访问 cdrom 中的数据，因为你将光盘插入 cdrom 中，Linux 并不会自动挂载，必须使用 Linux mount 命令来手动完成挂载。</p>
<p>参考：<a href="http://man.linuxde.net/mount">http://man.linuxde.net/mount</a> &gt; <a href="https://blog.csdn.net/weishujie000/article/details/76531924">https://blog.csdn.net/weishujie000/article/details/76531924</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 将 /dev/hda1 挂在 /mnt 之下</span></span><br><span class="line">mount /dev/hda1 /mnt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将 /dev/hda1 用唯读模式挂在 /mnt 之下</span></span><br><span class="line">mount -o ro /dev/hda1 /mnt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将 /tmp/image.iso 这个光碟的 image 档使用 loop 模式挂在 /mnt/cdrom 之下</span></span><br><span class="line"><span class="comment"># 用这种方法可以将一般网络上可以找到的 Linux ISO 在不烧录成光碟的情况下检视其内容</span></span><br><span class="line">mount -o loop /tmp/image.iso /mnt/cdrom</span><br></pre></td></tr></table></figure>

<h3 id="2-7-umount"><a href="#2-7-umount" class="headerlink" title="2.7. umount"></a>2.7. umount</h3><blockquote>
<p>umount 命令用于卸载已经挂载的文件系统。利用设备名或挂载点都能 umount 文件系统，不过最好还是通过挂载点卸载，以免使用绑定挂载（一个设备，多个挂载点）时产生混乱。</p>
<p>参考：<a href="http://man.linuxde.net/umount">http://man.linuxde.net/umount</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 通过设备名卸载</span></span><br><span class="line">umount -v /dev/sda1</span><br><span class="line">/dev/sda1 umounted</span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过挂载点卸载</span></span><br><span class="line">umount -v /mnt/mymount/</span><br><span class="line">/tmp/diskboot.img umounted</span><br></pre></td></tr></table></figure>

<h3 id="2-8-ps"><a href="#2-8-ps" class="headerlink" title="2.8. ps"></a>2.8. ps</h3><blockquote>
<p>ps 命令用于报告当前系统的进程状态。可以搭配 kill 指令随时中断、删除不必要的程序。ps 命令是最基本同时也是非常强大的进程查看命令，使用该命令可以确定有哪些进程正在运行和运行的状态、进程是否结束、进程有没有僵死、哪些进程占用了过多的资源等等，总之大部分信息都是可以通过执行该命令得到的。</p>
<p>参考：<a href="http://man.linuxde.net/ps">http://man.linuxde.net/ps</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 按内存资源的使用量对进程进行排序</span></span><br><span class="line">ps aux | <span class="built_in">sort</span> -rnk 4</span><br><span class="line"></span><br><span class="line"><span class="comment"># 按 CPU 资源的使用量对进程进行排序</span></span><br><span class="line">ps aux | <span class="built_in">sort</span> -nk 3</span><br></pre></td></tr></table></figure>

<h3 id="2-9-kill"><a href="#2-9-kill" class="headerlink" title="2.9. kill"></a>2.9. kill</h3><blockquote>
<p>kill 命令用来删除执行中的程序或工作。kill 可将指定的信息送至程序。预设的信息为 SIGTERM(15),可将指定程序终止。若仍无法终止该程序，可使用 SIGKILL(9) 信息尝试强制删除程序。程序或工作的编号可利用 ps 指令或 job 指令查看。</p>
<p>参考：<a href="http://man.linuxde.net/kill">http://man.linuxde.net/kill</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 列出所有信号名称</span></span><br><span class="line"> <span class="built_in">kill</span> -l</span><br><span class="line"> 1) SIGHUP       2) SIGINT       3) SIGQUIT      4) SIGILL</span><br><span class="line"> 5) SIGTRAP      6) SIGABRT      7) SIGBUS       8) SIGFPE</span><br><span class="line"> 9) SIGKILL     10) SIGUSR1     11) SIGSEGV     12) SIGUSR2</span><br><span class="line">13) SIGPIPE     14) SIGALRM     15) SIGTERM     16) SIGSTKFLT</span><br><span class="line">17) SIGCHLD     18) SIGCONT     19) SIGSTOP     20) SIGTSTP</span><br><span class="line">21) SIGTTIN     22) SIGTTOU     23) SIGURG      24) SIGXCPU</span><br><span class="line">25) SIGXFSZ     26) SIGVTALRM   27) SIGPROF     28) SIGWINCH</span><br><span class="line">29) SIGIO       30) SIGPWR      31) SIGSYS      34) SIGRTMIN</span><br><span class="line">35) SIGRTMIN+1  36) SIGRTMIN+2  37) SIGRTMIN+3  38) SIGRTMIN+4</span><br><span class="line">39) SIGRTMIN+5  40) SIGRTMIN+6  41) SIGRTMIN+7  42) SIGRTMIN+8</span><br><span class="line">43) SIGRTMIN+9  44) SIGRTMIN+10 45) SIGRTMIN+11 46) SIGRTMIN+12</span><br><span class="line">47) SIGRTMIN+13 48) SIGRTMIN+14 49) SIGRTMIN+15 50) SIGRTMAX-14</span><br><span class="line">51) SIGRTMAX-13 52) SIGRTMAX-12 53) SIGRTMAX-11 54) SIGRTMAX-10</span><br><span class="line">55) SIGRTMAX-9  56) SIGRTMAX-8  57) SIGRTMAX-7  58) SIGRTMAX-6</span><br><span class="line">59) SIGRTMAX-5  60) SIGRTMAX-4  61) SIGRTMAX-3  62) SIGRTMAX-2</span><br><span class="line">63) SIGRTMAX-1  64) SIGRTMAX</span><br><span class="line"></span><br><span class="line"><span class="comment"># 先用 ps 查找进程，然后用 kill 杀掉</span></span><br><span class="line">ps -ef | grep vim</span><br><span class="line">root      3268  2884  0 16:21 pts/1    00:00:00 vim install.log</span><br><span class="line">root      3370  2822  0 16:21 pts/0    00:00:00 grep vim</span><br><span class="line"></span><br><span class="line"><span class="built_in">kill</span> 3268</span><br><span class="line"><span class="built_in">kill</span> 3268</span><br><span class="line">-bash: <span class="built_in">kill</span>: (3268) - 没有那个进程</span><br></pre></td></tr></table></figure>

<h3 id="2-10-systemctl"><a href="#2-10-systemctl" class="headerlink" title="2.10. systemctl"></a>2.10. systemctl</h3><blockquote>
<p>systemctl 命令是系统服务管理器指令，它实际上将 service 和 chkconfig 这两个命令组合到一起。</p>
<p>参考：<a href="http://man.linuxde.net/systemctl">http://man.linuxde.net/systemctl</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1.启动 nfs 服务</span></span><br><span class="line">systemctl start nfs-server.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.设置开机自启动</span></span><br><span class="line">systemctl <span class="built_in">enable</span> nfs-server.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.停止开机自启动</span></span><br><span class="line">systemctl <span class="built_in">disable</span> nfs-server.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.查看服务当前状态</span></span><br><span class="line">systemctl status nfs-server.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.重新启动某服务</span></span><br><span class="line">systemctl restart nfs-server.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6.查看所有已启动的服务</span></span><br><span class="line">systemctl list -units --<span class="built_in">type</span>=service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 7. 开启防火墙 22 端口</span></span><br><span class="line">iptables -I INPUT -p tcp --dport 22 -j accept</span><br><span class="line"></span><br><span class="line"><span class="comment"># 8. 彻底关闭防火墙</span></span><br><span class="line">sudo systemctl status firewalld.service</span><br><span class="line">sudo systemctl stop firewalld.service</span><br><span class="line">sudo systemctl <span class="built_in">disable</span> firewalld.service</span><br></pre></td></tr></table></figure>

<h3 id="2-11-service"><a href="#2-11-service" class="headerlink" title="2.11. service"></a>2.11. service</h3><blockquote>
<p>service 命令是 Redhat Linux 兼容的发行版中用来控制系统服务的实用工具，它以启动、停止、重新启动和关闭系统服务，还可以显示所有系统服务的当前状态。</p>
<p>参考：<a href="http://man.linuxde.net/service">http://man.linuxde.net/service</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">service network status</span><br><span class="line">配置设备：</span><br><span class="line">lo eth0</span><br><span class="line">当前的活跃设备：</span><br><span class="line">lo eth0</span><br><span class="line"></span><br><span class="line">service network restart</span><br><span class="line">正在关闭接口 eth0：                                        [  确定  ]</span><br><span class="line">关闭环回接口：                                             [  确定  ]</span><br><span class="line">设置网络参数：                                             [  确定  ]</span><br><span class="line">弹出环回接口：                                             [  确定  ]</span><br><span class="line">弹出界面 eth0：                                            [  确定  ]</span><br></pre></td></tr></table></figure>

<h3 id="2-12-crontab"><a href="#2-12-crontab" class="headerlink" title="2.12. crontab"></a>2.12. crontab</h3><blockquote>
<p>crontab 命令被用来提交和管理用户的需要周期性执行的任务，与 windows 下的计划任务类似，当安装完成操作系统后，默认会安装此服务工具，并且会自动启动 crond 进程，crond 进程每分钟会定期检查是否有要执行的任务，如果有要执行的任务，则自动执行该任务。</p>
<p>参考：<a href="http://man.linuxde.net/crontab">http://man.linuxde.net/crontab</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 每 1 分钟执行一次 command</span></span><br><span class="line">* * * * * <span class="built_in">command</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 每小时的第 3 和第 15 分钟执行</span></span><br><span class="line">3,15 * * * * <span class="built_in">command</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在上午 8 点到 11 点的第 3 和第 15 分钟执行</span></span><br><span class="line">3,15 8-11 * * * <span class="built_in">command</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 每隔两天的上午 8 点到 11 点的第 3 和第 15 分钟执行</span></span><br><span class="line">3,15 8-11 */2 * * <span class="built_in">command</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 每个星期一的上午 8 点到 11 点的第 3 和第 15 分钟执行</span></span><br><span class="line">3,15 8-11 * * 1 <span class="built_in">command</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 每晚的 21:30 重启 smb</span></span><br><span class="line">30 21 * * * /etc/init.d/smb restart</span><br><span class="line"></span><br><span class="line"><span class="comment"># 每月 1、10、22 日的 4 : 45 重启 smb</span></span><br><span class="line">45 4 1,10,22 * * /etc/init.d/smb restart</span><br><span class="line"></span><br><span class="line"><span class="comment"># 每周六、周日的 1:10 重启 smb</span></span><br><span class="line">10 1 * * 6,0 /etc/init.d/smb restart</span><br><span class="line"></span><br><span class="line"><span class="comment"># 每天 18 : 00 至 23 : 00 之间每隔 30 分钟重启 smb</span></span><br><span class="line">0,30 18-23 * * * /etc/init.d/smb restart</span><br><span class="line"></span><br><span class="line"><span class="comment"># 每星期六的晚上 11:00 pm 重启 smb</span></span><br><span class="line">0 23 * * 6 /etc/init.d/smb restart</span><br><span class="line"></span><br><span class="line"><span class="comment"># 每一小时重启 smb</span></span><br><span class="line">* */1 * * * /etc/init.d/smb restart</span><br><span class="line"></span><br><span class="line"><span class="comment"># 晚上 11 点到早上 7 点之间，每隔一小时重启 smb</span></span><br><span class="line">* 23-7/1 * * * /etc/init.d/smb restart</span><br><span class="line"></span><br><span class="line"><span class="comment"># 每月的 4 号与每周一到周三的 11 点重启 smb</span></span><br><span class="line">0 11 4 * mon-wed /etc/init.d/smb restart</span><br><span class="line"></span><br><span class="line"><span class="comment"># 一月一号的 4 点重启 smb</span></span><br><span class="line">0 4 1 jan * /etc/init.d/smb restart</span><br><span class="line"></span><br><span class="line"><span class="comment"># 每小时执行`/etc/cron.hourly`目录内的脚本</span></span><br><span class="line">01 * * * * root run-parts /etc/cron.hourly</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 用户管理</title>
    <url>/2022/02/20/linux-cli-user/</url>
    <content><![CDATA[<h1 id="Linux-用户管理"><a href="#Linux-用户管理" class="headerlink" title="Linux 用户管理"></a>Linux 用户管理</h1><blockquote>
<p>关键词：<code>groupadd</code>, <code>groupdel</code>, <code>groupmod</code>, <code>useradd</code>, <code>userdel</code>, <code>usermod</code>, <code>passwd</code>, <code>su</code>, <code>sudo</code></p>
</blockquote>
<h2 id="1-Linux-用户管理要点"><a href="#1-Linux-用户管理要点" class="headerlink" title="1. Linux 用户管理要点"></a>1. Linux 用户管理要点</h2><ul>
<li>创建用户组 - 使用 <a href="#groupadd">groupadd</a></li>
<li>删除用户组 - 使用 <a href="#groupdel">groupdel</a></li>
<li>修改用户组信息 - 使用 <a href="#groupmod">groupmod</a></li>
<li>创建用户 - 使用 <a href="#useradd">useradd</a></li>
<li>删除用户 - 使用 <a href="#userdel">userdel</a></li>
<li>修改用户信息 - 使用 <a href="#usermod">usermod</a></li>
<li>设置用户认证信息 - 使用 <a href="#passwd">passwd</a></li>
<li>切换用户 - 使用 <a href="#su">su</a></li>
<li>当前用户想执行没有权限执行的命令时，使用其他用户身份去执行 - 使用 <a href="#sudo">sudo</a></li>
</ul>
<h2 id="2-命令常见用法"><a href="#2-命令常见用法" class="headerlink" title="2. 命令常见用法"></a>2. 命令常见用法</h2><h3 id="2-1-groupadd"><a href="#2-1-groupadd" class="headerlink" title="2.1. groupadd"></a>2.1. groupadd</h3><blockquote>
<p>groupadd 命令用于创建一个新的用户组，新用户组的信息将被添加到系统文件中。</p>
<p>参考：<a href="http://man.linuxde.net/groupadd">http://man.linuxde.net/groupadd</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 建立一个新组，并设置组 ID 加入系统</span></span><br><span class="line">$ groupadd -g 344 jsdigname</span><br></pre></td></tr></table></figure>

<h3 id="2-2-groupdel"><a href="#2-2-groupdel" class="headerlink" title="2.2. groupdel"></a>2.2. groupdel</h3><blockquote>
<p>groupdel 命令用于删除指定的用户组，本命令要修改的系统文件包括 <code>/ect/group</code> 和 <code>/ect/gshadow</code>。若该群组中仍包括某些用户，则必须先删除这些用户后，方能删除群组。</p>
<p>参考：<a href="http://man.linuxde.net/groupdel">http://man.linuxde.net/groupdel</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ groupadd damon  <span class="comment"># 创建damon用户组</span></span><br><span class="line">$ groupdel damon  <span class="comment"># 删除这个用户组</span></span><br></pre></td></tr></table></figure>

<h3 id="2-3-groupmod"><a href="#2-3-groupmod" class="headerlink" title="2.3. groupmod"></a>2.3. groupmod</h3><blockquote>
<p>groupmod 命令更改群组识别码或名称。需要更改群组的识别码或名称时，可用 groupmod 指令来完成这项工作。</p>
<p>参考：<a href="http://man.linuxde.net/groupmod">http://man.linuxde.net/groupmod</a></p>
</blockquote>
<h3 id="2-4-useradd"><a href="#2-4-useradd" class="headerlink" title="2.4. useradd"></a>2.4. useradd</h3><blockquote>
<p>useradd 命令用于 Linux 中创建的新的系统用户。useradd 可用来建立用户帐号。帐号建好之后，再用 passwd 设定帐号的密码．而可用 userdel 删除帐号。使用 useradd 指令所建立的帐号，实际上是保存在 <code>/etc/passwd</code> 文本文件中。</p>
<p>参考：<a href="http://man.linuxde.net/useradd">http://man.linuxde.net/useradd</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 新建用户加入组</span></span><br><span class="line">$ useradd –g sales jack –G company,employees    <span class="comment"># -g：加入主要组、-G：加入次要组</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 建立一个新用户账户，并设置 ID</span></span><br><span class="line">$ useradd caojh -u 544</span><br></pre></td></tr></table></figure>

<h3 id="2-5-userdel"><a href="#2-5-userdel" class="headerlink" title="2.5. userdel"></a>2.5. userdel</h3><blockquote>
<p>userdel 命令用于删除给定的用户，以及与用户相关的文件。若不加选项，则仅删除用户帐号，而不删除相关文件。</p>
<p>参考：<a href="http://man.linuxde.net/userdel">http://man.linuxde.net/userdel</a></p>
</blockquote>
<p>示例：</p>
<p>userdel 命令很简单，比如我们现在有个用户 linuxde，其 home 目录位于<code>/var</code>目录中，现在我们来删除这个用户：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ userdel linuxde       <span class="comment"># 删除用户linuxde，但不删除其家目录及文件；</span></span><br><span class="line">$ userdel -r linuxde    <span class="comment"># 删除用户linuxde，其 home 目录及文件一并删除；</span></span><br></pre></td></tr></table></figure>

<h3 id="2-6-usermod"><a href="#2-6-usermod" class="headerlink" title="2.6. usermod"></a>2.6. usermod</h3><blockquote>
<p>usermod 命令用于修改用户的基本信息。usermod 命令不允许你改变正在线上的使用者帐号名称。当 usermod 命令用来改变 user id，必须确认这名 user 没在电脑上执行任何程序。你需手动更改使用者的 crontab 档。也需手动更改使用者的 at 工作档。采用 NIS server 须在 server 上更动相关的 NIS 设定。</p>
<p>参考：<a href="http://man.linuxde.net/usermod">http://man.linuxde.net/usermod</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 将 newuser2 添加到组 staff 中</span></span><br><span class="line">$ usermod -G staff newuser2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改 newuser 的用户名为 newuser1</span></span><br><span class="line">$ usermod -l newuser1 newuser</span><br><span class="line"></span><br><span class="line"><span class="comment"># 锁定账号 newuser1</span></span><br><span class="line">$ usermod -L newuser1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解除对 newuser1 的锁定</span></span><br><span class="line">$ usermod -U newuser1</span><br></pre></td></tr></table></figure>

<h3 id="2-7-passwd"><a href="#2-7-passwd" class="headerlink" title="2.7. passwd"></a>2.7. passwd</h3><blockquote>
<p>passwd 命令用于设置用户的认证信息，包括用户密码、密码过期时间等。系统管理者则能用它管理系统用户的密码。只有管理者可以指定用户名称，一般用户只能变更自己的密码。</p>
<p>参考：<a href="http://man.linuxde.net/passwd">http://man.linuxde.net/passwd</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 如果是普通用户执行 passwd 只能修改自己的密码。</span></span><br><span class="line"><span class="comment"># 如果新建用户后，要为新用户创建密码，则用 passwd 用户名，注意要以 root 用户的权限来创建。</span></span><br><span class="line">$ passwd linuxde    <span class="comment"># 更改或创建linuxde用户的密码；</span></span><br><span class="line">Changing password <span class="keyword">for</span> user linuxde.</span><br><span class="line">New UNIX password:          <span class="comment"># 请输入新密码；</span></span><br><span class="line">Retype new UNIX password:   <span class="comment"># 再输入一次；</span></span><br><span class="line">passwd: all authentication tokens updated successfully. <span class="comment"># 成功；</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 普通用户如果想更改自己的密码，直接运行 passwd 即可，比如当前操作的用户是 linuxde。</span></span><br><span class="line">$ passwd</span><br><span class="line">Changing password <span class="keyword">for</span> user linuxde. <span class="comment"># 更改linuxde用户的密码；</span></span><br><span class="line">(current) UNIX password:   <span class="comment"># 请输入当前密码；</span></span><br><span class="line">New UNIX password:         <span class="comment"># 请输入新密码；</span></span><br><span class="line">Retype new UNIX password:  <span class="comment"># 确认新密码；</span></span><br><span class="line">passwd: all authentication tokens updated successfully. <span class="comment"># 更改成功；</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 比如我们让某个用户不能修改密码，可以用`-l`选项来锁定：</span></span><br><span class="line">$ passwd -l linuxde    <span class="comment"># 锁定用户linuxde不能更改密码；</span></span><br><span class="line">Locking password <span class="keyword">for</span> user linuxde.</span><br><span class="line">passwd: Success           <span class="comment"># 锁定成功；</span></span><br><span class="line"></span><br><span class="line">$ su linuxde   <span class="comment"># 通过su切换到linuxde用户；</span></span><br><span class="line">$ passwd      <span class="comment"># linuxde来更改密码；</span></span><br><span class="line">Changing password <span class="keyword">for</span> user linuxde.</span><br><span class="line">Changing password <span class="keyword">for</span> linuxde</span><br><span class="line">(current) UNIX password:          <span class="comment"># 输入linuxde的当前密码；</span></span><br><span class="line">passwd: Authentication token manipulation error     <span class="comment"># 失败，不能更改密码；</span></span><br><span class="line"></span><br><span class="line">$ passwd -d linuxde  <span class="comment"># 清除linuxde用户密码；</span></span><br><span class="line">Removing password <span class="keyword">for</span> user linuxde.</span><br><span class="line">passwd: Success                         <span class="comment"># 清除成功；</span></span><br><span class="line"></span><br><span class="line">$ passwd -S linuxde    <span class="comment"># 查询linuxde用户密码状态；</span></span><br><span class="line">Empty password.                         <span class="comment"># 空密码，也就是没有密码；</span></span><br></pre></td></tr></table></figure>

<h3 id="2-8-su"><a href="#2-8-su" class="headerlink" title="2.8. su"></a>2.8. su</h3><blockquote>
<p>su 命令用于切换当前用户身份到其他用户身份，变更时须输入所要变更的用户帐号与密码。</p>
<p>参考：<a href="http://man.linuxde.net/su">http://man.linuxde.net/su</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 变更帐号为 root 并在执行 ls 指令后退出变回原使用者：</span></span><br><span class="line">$ su -c <span class="built_in">ls</span> root</span><br><span class="line"></span><br><span class="line"><span class="comment"># 变更帐号为 root 并传入`-f`选项给新执行的 shell：</span></span><br><span class="line">$ su root -f</span><br><span class="line"></span><br><span class="line"><span class="comment"># 变更帐号为 test 并改变工作目录至 test 的家目录：</span></span><br><span class="line">$ su -<span class="built_in">test</span></span><br></pre></td></tr></table></figure>

<h3 id="2-9-sudo"><a href="#2-9-sudo" class="headerlink" title="2.9. sudo"></a>2.9. sudo</h3><blockquote>
<p>sudo 命令用来以其他身份来执行命令，预设的身份为 root。在 <code>/etc/sudoers</code> 中设置了可执行 sudo 指令的用户。若其未经授权的用户企图使用 sudo，则会发出警告的邮件给管理员。用户使用 sudo 时，必须先输入密码，之后有 5 分钟的有效期限，超过期限则必须重新输入密码。</p>
<p>参考：<a href="http://man.linuxde.net/sudo">http://man.linuxde.net/sudo</a></p>
</blockquote>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 指定用户执行命令</span></span><br><span class="line">$ sudo -u userb <span class="built_in">ls</span> -l</span><br><span class="line"><span class="comment"># 列出目前的权限</span></span><br><span class="line">$ sudo -l</span><br><span class="line"><span class="comment"># 显示sudo设置</span></span><br><span class="line">$ sudo -L</span><br></pre></td></tr></table></figure>

<h4 id="2-9-1-给普通用户授权-sudo"><a href="#2-9-1-给普通用户授权-sudo" class="headerlink" title="2.9.1. 给普通用户授权 sudo"></a>2.9.1. 给普通用户授权 sudo</h4><p>假设要给普通用户 mary 配置 sudo 权限：</p>
<ol>
<li><code>/etc/sudoers</code> 文件存放了 sudo 的相关用户，但是默认是没有写权限的，所以需要设为可写：<code>chmod u+w /etc/sudoers</code></li>
<li>在该文件中添加 <code>mary ALL=(ALL) ALL</code> ，保存并退出，让 mary 具有 sudo 的所有权限</li>
<li>再将 <code>/etc/sudoers</code> 的权限恢复到默认状态：<code>chmod u-w /etc/sudoers</code></li>
</ol>
<h4 id="2-9-2-免密码授权-sudo"><a href="#2-9-2-免密码授权-sudo" class="headerlink" title="2.9.2. 免密码授权 sudo"></a>2.9.2. 免密码授权 sudo</h4><p>与给普通用户授权 sudo 类似，区别仅在于第 2 步：<code>mary ALL=(ALL) NOPASSWD: ALL</code>。</p>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Mourn RARBG</title>
    <url>/2023/06/01/mourn-rarbg/</url>
    <content><![CDATA[<blockquote>
<p>Hello guys,<br>We would like to inform you that we have decided to shut down our site.<br>The past 2 years have been very difficult for us - some of the people in our team died due to covid complications,<br>others still suffer the side effects of it - not being able to work at all.<br>Some are also fighting the war in Europe - ON BOTH SIDES.<br>Also, the power price increase in data centers in Europe hit us pretty hard.<br>Inflation makes our daily expenses impossible to bare.<br>Therefore we can no longer run this site without massive expenses that we can no longer cover out of pocket.<br>After an unanimous vote we’ve decided that we can no longer do it.<br>We are sorry :(<br>Bye</p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/duzhuoshanwai/Image-Hosting/master/img/202306011052237.jpg"></p>
<p>妈的 我用 AdBlock 把 RARBG 的广告屏蔽了 我真是个畜生 😭</p>
<p><img src="https://raw.githubusercontent.com/duzhuoshanwai/Image-Hosting/master/img/202306011057458.png"></p>
<p>Peace. 🥀</p>
]]></content>
  </entry>
  <entry>
    <title>Linux 典型运维应用</title>
    <url>/2022/02/20/network-ops/</url>
    <content><![CDATA[<h1 id="Linux-典型运维应用"><a href="#Linux-典型运维应用" class="headerlink" title="Linux 典型运维应用"></a>Linux 典型运维应用</h1><blockquote>
<p>💡 如果没有特殊说明，本文的案例都是针对 Centos 发行版本。</p>
</blockquote>
<h2 id="网络操作"><a href="#网络操作" class="headerlink" title="网络操作"></a>网络操作</h2><h3 id="无法访问外网域名"><a href="#无法访问外网域名" class="headerlink" title="无法访问外网域名"></a>无法访问外网域名</h3><p>（1）在 hosts 中添加本机实际 IP 和本机实际域名的映射</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">echo &quot;192.168.0.1 hostname&quot; &gt;&gt; /etc/hosts</span><br></pre></td></tr></table></figure>

<p>如果不知道本机域名，使用 <code>hostname</code> 命令查一下；如果不知道本机实际 IP，使用 <code>ifconfig</code> 查一下。</p>
<p>（2）配置信赖的 DNS 服务器</p>
<p>执行 <code>vi /etc/resolv.conf</code> ，添加以下内容：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nameserver 114.114.114.114</span><br><span class="line">nameserver 8.8.8.8</span><br></pre></td></tr></table></figure>

<blockquote>
<p>114.114.114.114 是国内老牌 DNS</p>
<p>8.8.8.8 是 Google DNS</p>
<p>:point_right: 参考：<a href="https://www.zhihu.com/question/32229915">公共 DNS 哪家强</a></p>
</blockquote>
<p>（3）测试一下能否 ping 通 <a href="http://www.baidu.com/">www.baidu.com</a></p>
<h3 id="配置网卡"><a href="#配置网卡" class="headerlink" title="配置网卡"></a>配置网卡</h3><p>使用 root 权限编辑 <code>/etc/sysconfig/network-scripts/ifcfg-eno16777736X</code> 文件</p>
<p>参考以下进行配置：</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">TYPE</span>=<span class="string">Ethernet                        # 网络类型：Ethernet以太网</span></span><br><span class="line"><span class="attr">BOOTPROTO</span>=<span class="string">none                       # 引导协议：自动获取、static静态、none不指定</span></span><br><span class="line"><span class="attr">DEFROUTE</span>=<span class="string">yes                         # 启动默认路由</span></span><br><span class="line"><span class="attr">IPV4_FAILURE_FATAL</span>=<span class="string">no                # 不启用IPV4错误检测功能</span></span><br><span class="line"><span class="attr">IPV6INIT</span>=<span class="string">yes                         # 启用IPV6协议</span></span><br><span class="line"><span class="attr">IPV6_AUTOCONF</span>=<span class="string">yes                    # 自动配置IPV6地址</span></span><br><span class="line"><span class="attr">IPV6_DEFROUTE</span>=<span class="string">yes                    # 启用IPV6默认路由</span></span><br><span class="line"><span class="attr">IPV6_FAILURE_FATAL</span>=<span class="string">no                # 不启用IPV6错误检测功能</span></span><br><span class="line"><span class="attr">IPV6_PEERDNS</span>=<span class="string">yes</span></span><br><span class="line"><span class="attr">IPV6_PEERROUTES</span>=<span class="string">yes</span></span><br><span class="line"><span class="attr">IPV6_PRIVACY</span>=<span class="string">&quot;no&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">NAME</span>=<span class="string">eno16777736                     # 网卡设备的别名（需要和文件名同名）</span></span><br><span class="line"><span class="attr">UUID</span>=<span class="string">90528772-9967-46da-b401-f82b64b4acbc  # 网卡设备的UUID唯一标识号</span></span><br><span class="line"><span class="attr">DEVICE</span>=<span class="string">eno16777736                   # 网卡的设备名称</span></span><br><span class="line"><span class="attr">ONBOOT</span>=<span class="string">yes                           # 开机自动激活网卡</span></span><br><span class="line"><span class="attr">IPADDR</span>=<span class="string">192.168.1.199                 # 网卡的固定IP地址</span></span><br><span class="line"><span class="attr">PREFIX</span>=<span class="string">24                            # 子网掩码</span></span><br><span class="line"><span class="attr">GATEWAY</span>=<span class="string">192.168.1.1                  # 默认网关IP地址</span></span><br><span class="line"><span class="attr">DNS1</span>=<span class="string">8.8.8.8                         # DNS域名解析服务器的IP地址</span></span><br></pre></td></tr></table></figure>

<p>修改完后，执行 <code>systemctl restart network.service</code> 重启网卡服务。</p>
<h2 id="系统维护"><a href="#系统维护" class="headerlink" title="系统维护"></a>系统维护</h2><h2 id="自动化脚本"><a href="#自动化脚本" class="headerlink" title="自动化脚本"></a>自动化脚本</h2><h3 id="Linux-开机自启动脚本"><a href="#Linux-开机自启动脚本" class="headerlink" title="Linux 开机自启动脚本"></a>Linux 开机自启动脚本</h3><p>（1）在 <code>/etc/rc.local</code> 文件中添加命令</p>
<p>如果不想将脚本粘来粘去，或创建链接，可以在 <code>/etc/rc.local</code> 文件中添加启动命令</p>
<ol>
<li>先修改好脚本，使其所有模块都能在任意目录启动时正常执行;</li>
<li>再在 <code>/etc/rc.local</code> 的末尾添加一行以绝对路径启动脚本的行;</li>
</ol>
<p>例：</p>
<p>执行 <code>vim /etc/rc.local</code> 命令，输入以下内容：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/sh</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># This script will be executed *after* all the other init scripts.</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">You can put your own initialization stuff <span class="keyword">in</span> here <span class="keyword">if</span> you don<span class="string">&#x27;t</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">want to do the full Sys V style init stuff.</span></span></span><br><span class="line"></span><br><span class="line">touch /var/lock/subsys/local</span><br><span class="line">/opt/pjt_test/test.pl</span><br></pre></td></tr></table></figure>

<p>（2）在 <code>/etc/rc.d/init.d</code> 目录下添加自启动脚本</p>
<p>Linux 在 <code>/etc/rc.d/init.d</code> 下有很多的文件，每个文件都是可以看到内容的，其实都是一些 shell 脚本或者可执行二进制文件。</p>
<p>Linux 开机的时候，会加载运行 <code>/etc/rc.d/init.d</code> 目录下的程序，因此我们可以把想要自动运行的脚本放到这个目录下即可。系统服务的启动就是通过这种方式实现的。</p>
<p>（3）运行级别设置</p>
<p>简单的说，运行级就是操作系统当前正在运行的功能级别。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">不同的运行级定义如下:</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">0 - 停机（千万不能把initdefault 设置为0 ）</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">1 - 单用户模式       　　进入方法<span class="comment">#init s = init 1</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">2 - 多用户，没有 NFS</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">3 - 完全多用户模式(标准的运行级)</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">4 - 没有用到</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">5 - X11 多用户图形模式（xwindow)</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">6 - 重新启动 （千万不要把initdefault 设置为6 ）</span></span><br></pre></td></tr></table></figure>

<p>这些级别在 <code>/etc/inittab</code> 文件里指定，这个文件是 init 程序寻找的主要文件，最先运行的服务是放在&#x2F;etc&#x2F;rc.d 目录下的文件。</p>
<p>在 <code>/etc</code> 目录下面有这么几个目录值得注意：rcS.d rc0.d rc1.d … rc6.d (0，1… 6 代表启动级别 0 代表停止，1 代表单用户模式，2-5 代表多用户模式，6 代表重启) 它们的作用就相当于 redhat 下的 rc.d ，你可以把脚本放到 rcS.d，然后修改文件名，给它一个启动序号，如: S88mysql</p>
<p>不过，最好的办法是放到相应的启动级别下面。具体作法:</p>
<p>（1）先把脚本 mysql 放到 &#x2F;etc&#x2F;init.d 目录下</p>
<p>（2）查看当前系统的启动级别</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">runlevel</span></span><br><span class="line">N 3</span><br></pre></td></tr></table></figure>

<p>（3）设定启动级别</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"> 98 为启动序号</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"> 2 是系统的运行级别，可自己调整，注意不要忘了结尾的句点</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">update-rc.d mysql start 98 2 .</span></span><br></pre></td></tr></table></figure>

<p>现在我们到 &#x2F;etc&#x2F;rc2.d 下，就多了一个 S98mysql 这样的符号链接。</p>
<p>（4）重启系统，验证设置是否有效。</p>
<p>（5）移除符号链接</p>
<p>当你需要移除这个符号连接时，方法有三种：</p>
<ol>
<li><p>直接到 <code>/etc/rc2.d</code> 下删掉相应的链接，当然不是最好的方法；</p>
</li>
<li><p>推荐做法：<code>update-rc.d -f s10 remove</code></p>
</li>
<li><p>如果 update-rc.d 命令你不熟悉，还可以试试看 rcconf 这个命令，也很方便。</p>
</li>
</ol>
<blockquote>
<p>:point_right: 参考：</p>
<ul>
<li><a href="https://blog.csdn.net/linuxshine/article/details/50717272">linux 添加开机自启动脚本示例详解</a></li>
<li><a href="https://www.cnblogs.com/ssooking/p/6094740.html">linux 设置开机自启动</a></li>
</ul>
</blockquote>
<h3 id="定时执行脚本"><a href="#定时执行脚本" class="headerlink" title="定时执行脚本"></a>定时执行脚本</h3><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="设置-Linux-启动模式"><a href="#设置-Linux-启动模式" class="headerlink" title="设置 Linux 启动模式"></a>设置 Linux 启动模式</h3><ol>
<li>停机(记得不要把 initdefault 配置为 0，因为这样会使 Linux 不能启动)</li>
<li>单用户模式，就像 Win9X 下的安全模式</li>
<li>多用户，但是没有 NFS</li>
<li>完全多用户模式，准则的运行级</li>
<li>通常不用，在一些特殊情况下可以用它来做一些事情</li>
<li>X11，即进到 X-Window 系统</li>
<li>重新启动 (记得不要把 initdefault 配置为 6，因为这样会使 Linux 不断地重新启动)</li>
</ol>
<p>设置方法：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sed -i &#x27;s/id:5:initdefault:/id:3:initdefault:/&#x27; /etc/inittab</span><br></pre></td></tr></table></figure>

<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul>
<li><a href="https://www.cnblogs.com/moxiaoan/p/5683743.html">CentOS7 使用 firewalld 打开关闭防火墙与端口</a></li>
<li><a href="https://blog.csdn.net/z_yong_cool/article/details/79288397">linux 定时执行脚本</a></li>
</ul>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>时间服务器-NTP</title>
    <url>/2022/02/20/ntp/</url>
    <content><![CDATA[<h1 id="时间服务器-NTP"><a href="#时间服务器-NTP" class="headerlink" title="时间服务器 - NTP"></a>时间服务器 - NTP</h1><h2 id="一、NTP-简介"><a href="#一、NTP-简介" class="headerlink" title="一、NTP 简介"></a>一、NTP 简介</h2><p>网络时间协议（英语：Network Time Protocol，缩写：NTP）是在数据网络潜伏时间可变的计算机系统之间通过分组交换进行时钟同步的一个网络协议，位于 OSI 模型的应用层。自 1985 年以来，NTP 是目前仍在使用的最古老的互联网协议之一。NTP 由特拉华大学的 David L. Mills（英语：David L. Mills）设计。</p>
<p><strong>NTP 意图将所有参与计算机的协调世界时（UTC）时间同步到几毫秒的误差内</strong>。</p>
<p>NTP 要点：</p>
<ul>
<li>地球共有 24 个时区，而以格林威治时间 (GMT) 为标准时间；</li>
<li>中国本地时间为 GMT +8 小时；</li>
<li>最准确的时间为使用原子钟 (Atomic clock) 所计算的，例如 UTC (Coordinated Universal Time) 就是一例；</li>
<li>Linux 系统本来就有两种时间，一种是 Linux 以 <code>1970/01/01</code> 开始计数的系统时间，一种则是 BIOS 记载的硬件时间；</li>
<li>Linux 可以透过网络校时，最常见的网络校时为使用 NTP 服务器，这个服务启动在 <code>udp port 123</code>；</li>
<li>时区档案主要放置于 <code>/usr/share/zoneinfo/</code> 目录下，而本地时区则参考 <code>/etc/localtime</code>；</li>
<li>NTP 服务器为一种阶层式的服务，所以 NTP 服务器本来就会与上层时间服务器作时间的同步化， 因此 <code>nptd</code> 与 <code>ntpdate</code> 两个指令不可同时使用；</li>
<li>NTP 服务器的联机状态可以使用 <code>ntpstat</code> 及 <code>ntpq -p</code> 来查询；</li>
<li>NTP 提供的客户端软件为 <code>ntpdate</code> 这个指令；</li>
<li>在 Linux 下想要手动处理时间时，需以 <code>date</code> 设定时间后，以 <code>hwclock -w</code> 来写入 BIOS 所记录的时间。</li>
<li>NTP 服务器之间的时间误差不可超过 1000 秒，否则 NTP 服务会自动关闭。</li>
</ul>
<blockquote>
<p>更多 NTP 详情可以参考：<a href="http://cn.linux.vbird.org/linux_server/0440ntp.php">鸟哥的 Linux 私房菜– NTP 时间服务器</a></p>
</blockquote>
<h2 id="二、ntpd-服务"><a href="#二、ntpd-服务" class="headerlink" title="二、ntpd 服务"></a>二、ntpd 服务</h2><blockquote>
<p>环境：CentOS</p>
</blockquote>
<h3 id="yum-安装"><a href="#yum-安装" class="headerlink" title="yum 安装"></a>yum 安装</h3><p>CentOS 安装 NTP 很简单，执行以下命令即可：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum -y install ntp</span><br></pre></td></tr></table></figure>

<h3 id="ntpd-配置"><a href="#ntpd-配置" class="headerlink" title="ntpd 配置"></a>ntpd 配置</h3><p>ntp 的配置文件路径为： <code>/etc/ntp.conf</code> ，参考配置：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">1. 先处理权限方面的问题，包括放行上层服务器以及开放区网用户来源：</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">restrict default kod nomodify notrap nopeer noquery     <span class="comment"># 拒绝 IPv4 的用户</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">restrict -6 default kod nomodify notrap nopeer noquery  <span class="comment"># 拒绝 IPv6 的用户</span></span></span><br><span class="line">restrict default nomodify notrap nopeer noquery</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">restrict 192.168.100.0 mask 255.255.255.0 nomodify <span class="comment"># 放行同局域网来源（根据网关和子网掩码决定）</span></span></span><br><span class="line">restrict 127.0.0.1   # 默认值，放行本机 IPv4 来源</span><br><span class="line">restrict ::1         # 默认值，放行本机 IPv6 来源</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">2. 设定 NTP 主机来源</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">注释掉默认 NTP 来源</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">server 0.centos.pool.ntp.org iburst</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">server 1.centos.pool.ntp.org iburst</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">server 2.centos.pool.ntp.org iburst</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">server 3.centos.pool.ntp.org iburst</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置国内 NTP 来源</span></span><br><span class="line">server cn.pool.ntp.org prefer # 以这个主机为优先</span><br><span class="line">server ntp1.aliyun.com</span><br><span class="line">server ntp.sjtu.edu.cn</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">3. 预设时间差异分析档案与暂不用到的 keys 等，不需要更改它：</span></span><br><span class="line">driftfile /var/lib/ntp/drift</span><br><span class="line">keys /etc/ntp/keys</span><br><span class="line">includefile /etc/ntp/crypto/pw</span><br></pre></td></tr></table></figure>

<blockquote>
<p>注意：如果更改配置，必须重启 NTP 服务（<code>systemctl restart ntpd</code>）才能生效。</p>
</blockquote>
<h3 id="放开防火墙限制"><a href="#放开防火墙限制" class="headerlink" title="放开防火墙限制"></a>放开防火墙限制</h3><p>NTP 服务的端口是 <code>123</code>，使用的是 udp 协议，所以 NTP 服务器的防火墙必须对外开放 udp 123 这个端口。</p>
<p>如果防火墙使用 **<code>iptables</code>**，执行以下命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">iptables -A INPUT -p UDP -i eth0 -s 192.168.0.0/24 --dport 123 -j ACCEPT</span><br></pre></td></tr></table></figure>

<p>如果防火墙使用 **<code>firewalld</code>**，执行以下命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=123/udp --permanent</span><br></pre></td></tr></table></figure>

<h3 id="ntpd-服务命令"><a href="#ntpd-服务命令" class="headerlink" title="ntpd 服务命令"></a>ntpd 服务命令</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl enable ntpd.service  # 开启服务（开机自动启动服务）</span><br><span class="line">systemctl disable ntpd.service # 关闭服务（开机不会自动启动服务）</span><br><span class="line">systemctl start ntpd.service   # 启动服务</span><br><span class="line">systemctl stop ntpd.service    # 停止服务</span><br><span class="line">systemctl restart ntpd.service # 重启服务</span><br><span class="line">systemctl reload ntpd.service  # 重新载入配置</span><br><span class="line">systemctl status ntpd.service  # 查看服务状态</span><br></pre></td></tr></table></figure>

<h3 id="查看-ntp-服务状态"><a href="#查看-ntp-服务状态" class="headerlink" title="查看 ntp 服务状态"></a>查看 ntp 服务状态</h3><h4 id="验证-NTP-服务正常工作"><a href="#验证-NTP-服务正常工作" class="headerlink" title="验证 NTP 服务正常工作"></a>验证 NTP 服务正常工作</h4><p>执行 <code>ntpstat</code> 可以查看 ntp 服务器有无和上层 ntp 连通，，如果成功，可以看到类似以下的内容：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ntpstat</span></span><br><span class="line">synchronised to NTP server (5.79.108.34) at stratum 3</span><br><span class="line">   time correct to within 1129 ms</span><br><span class="line">   polling server every 64 s</span><br></pre></td></tr></table></figure>

<h4 id="查看-ntp-服务器与上层-ntp-的状态"><a href="#查看-ntp-服务器与上层-ntp-的状态" class="headerlink" title="查看 ntp 服务器与上层 ntp 的状态"></a>查看 ntp 服务器与上层 ntp 的状态</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ntpq -p</span><br><span class="line">     remote           refid      st t when poll reach   delay   offset  jitter</span><br><span class="line">==============================================================================</span><br><span class="line">*ntp1.ams1.nl.le 130.133.1.10     2 u   36   64  367  230.801    5.271   2.791</span><br><span class="line"> 120.25.115.20   10.137.53.7      2 u   33   64  377   25.930   15.908   3.168</span><br><span class="line"> time.cloudflare 10.21.8.251      3 u   31   64  367  251.109   16.976   3.264</span><br></pre></td></tr></table></figure>

<h2 id="三、ntpdate-命令"><a href="#三、ntpdate-命令" class="headerlink" title="三、ntpdate 命令"></a>三、ntpdate 命令</h2><blockquote>
<p>注意：NTP 服务器为一种阶层式的服务，所以 NTP 服务器本来就会与上层时间服务器作时间的同步化， 因此 <code>nptd</code> 与 <code>ntpdate</code> 两个指令不可同时使用。</p>
</blockquote>
<h3 id="手动执行时间同步"><a href="#手动执行时间同步" class="headerlink" title="手动执行时间同步"></a>手动执行时间同步</h3><p><code>ntpdate</code> 命令是 NTP 的客户端软件，它可以用于请求时间同步。</p>
<p>语法：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">/usr/sbin/ntpdate &lt;ntp_server&gt;</span><br></pre></td></tr></table></figure>

<p><code>ntp_server</code> 可以从 [国内 NTP 服务器](#国内 NTP 服务器) 中选择。</p>
<p>示例：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ntpdate cn.pool.ntp.org</span></span><br><span class="line">11 Feb 10:47:12 ntpdate[30423]: step time server 84.16.73.33 offset -49.894774 sec</span><br></pre></td></tr></table></figure>

<h3 id="自动定时同步时间"><a href="#自动定时同步时间" class="headerlink" title="自动定时同步时间"></a>自动定时同步时间</h3><p>如果需要自动定时同步时间，可以利用 <a href="#crontab">Crontab</a> 工具。本质就是用 crontab 定时执行一次手动时间同步命令 ntp。</p>
<p>示例：执行如下命令，就可以在每天凌晨 3 点同步系统时间：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">echo &quot;0 3 * * * /usr/sbin/ntpdate cn.pool.ntp.org&quot; &gt;&gt; /etc/crontab # 修改 crond 服务配置</span><br><span class="line">systemctl restart crond # 重启 crond 服务以生效</span><br></pre></td></tr></table></figure>

<h2 id="四、国内-NTP-服务器"><a href="#四、国内-NTP-服务器" class="headerlink" title="四、国内 NTP 服务器"></a>四、国内 NTP 服务器</h2><p>以下 NTP 服务器搜集自网络：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cn.pool.ntp.org  # 最常用的国内NTP服务器，参考：https://www.ntppool.org/zh/use.html</span><br><span class="line">cn.ntp.org.cn    # 中国</span><br><span class="line">edu.ntp.org.cn   # 中国教育网</span><br><span class="line">ntp1.aliyun.com  # 阿里云</span><br><span class="line">ntp2.aliyun.com  # 阿里云</span><br><span class="line">ntp.sjtu.edu.cn  # 上海交通大学</span><br><span class="line">s1a.time.edu.cn  # 北京邮电大学</span><br><span class="line">s1b.time.edu.cn  # 清华大学</span><br><span class="line">s1c.time.edu.cn  # 北京大学</span><br><span class="line">s1d.time.edu.cn  # 东南大学</span><br><span class="line">s1e.time.edu.cn  # 清华大学</span><br><span class="line">s2a.time.edu.cn  # 清华大学</span><br><span class="line">s2b.time.edu.cn  # 清华大学</span><br><span class="line">s2c.time.edu.cn  # 北京邮电大学</span><br><span class="line">s2d.time.edu.cn  # 西南地区网络中心</span><br><span class="line">s2e.time.edu.cn  # 西北地区网络中心</span><br><span class="line">s2f.time.edu.cn  # 东北地区网络中心</span><br><span class="line">s2g.time.edu.cn  # 华东南地区网络中心</span><br><span class="line">s2h.time.edu.cn  # 四川大学网络管理中心</span><br><span class="line">s2j.time.edu.cn  # 大连理工大学网络中心</span><br><span class="line">s2k.time.edu.cn  # CERNET桂林主节点</span><br></pre></td></tr></table></figure>

<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul>
<li><a href="http://cn.linux.vbird.org/linux_server/0440ntp.php">鸟哥的 Linux 私房菜– NTP 时间服务器</a></li>
<li><a href="https://www.cnblogs.com/quchunhui/p/7658853.html">Linux 配置 ntp 时间服务器</a></li>
</ul>
]]></content>
      <tags>
        <tag>linux</tag>
        <tag>NTP</tag>
      </tags>
  </entry>
  <entry>
    <title>pandora+docker 私有化部署ChatGPT</title>
    <url>/2023/04/06/pandora-guide/</url>
    <content><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><h2 id="更新环境"><a href="#更新环境" class="headerlink" title="更新环境"></a>更新环境</h2><h3 id="Debian11-Docker"><a href="#Debian11-Docker" class="headerlink" title="Debian11 + Docker"></a>Debian11 + Docker</h3><ul>
<li><p>Linux duzhuo 5.10.0-21-amd64 #1 SMP Debian 5.10.162-1 (2023-01-21) x86_64 GNU&#x2F;Linux</p>
</li>
<li><p>Docker Compose version v2.17.2</p>
</li>
<li><p>Docker version 23.0.2, build 569dd73</p>
</li>
<li><p><code>apt-get update -y</code></p>
</li>
<li><p><code>apt-get install apt-transport-https software-properties-common ca-certificates curl gnupg lsb-release -y</code></p>
</li>
<li><p><code>sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin</code></p>
</li>
</ul>
<h3 id="需要的-Docker-镜像"><a href="#需要的-Docker-镜像" class="headerlink" title="需要的 Docker 镜像"></a>需要的 Docker 镜像</h3><ul>
<li><p>pengzhile&#x2F;pandora</p>
<p><code>docker pull pengzhile/pandora</code></p>
</li>
<li><p>nginx</p>
<p><code>docker pull nginx</code></p>
</li>
</ul>
<h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><h3 id="tree"><a href="#tree" class="headerlink" title="tree"></a>tree</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@duzhuo:~/.pandora# tree</span><br><span class="line">.</span><br><span class="line">├── data</span><br><span class="line">│   └── access_token.dat</span><br><span class="line">├── docker-compose-pandora.yaml</span><br><span class="line">├── docker-compose.yaml.bak</span><br><span class="line">└── nginx</span><br><span class="line">    ├── certs</span><br><span class="line">    │   ├── cert.pem</span><br><span class="line">    │   └── key.pem</span><br><span class="line">    ├── htpasswd</span><br><span class="line">    └── nginx.conf</span><br><span class="line"></span><br><span class="line">3 directories, 7 files</span><br><span class="line">root@duzhuo:~/.pandora# </span><br></pre></td></tr></table></figure>

<h3 id="docker-compose-yaml"><a href="#docker-compose-yaml" class="headerlink" title="docker-compose.yaml"></a>docker-compose.yaml</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">version: &#x27;3.8&#x27;</span><br><span class="line"></span><br><span class="line"># 定义一个名为 &quot;pandora&quot; 的 Docker 网络</span><br><span class="line">networks:</span><br><span class="line">  pandora:</span><br><span class="line">    driver: bridge</span><br><span class="line">    ipam:</span><br><span class="line">      config:</span><br><span class="line">        - subnet: 192.168.0.0/24</span><br><span class="line"></span><br><span class="line"># 定义两个 Docker 服务: &quot;Nginx-Reverse-proxy&quot; 和 &quot;pandora&quot;</span><br><span class="line">services:</span><br><span class="line">  # Nginx-Reverse-proxy 服务</span><br><span class="line">  Nginx-Reverse-proxy:</span><br><span class="line">    # 使用 nginx Docker 镜像</span><br><span class="line">    image: nginx</span><br><span class="line">    # 将端口 80 和 443 映射到宿主机</span><br><span class="line">    ports:</span><br><span class="line">      - 80:80</span><br><span class="line">      - 443:443</span><br><span class="line">    # 除非停止，否则重新启动容器</span><br><span class="line">    restart: unless-stopped</span><br><span class="line">    # 挂载多个卷以进行配置文件和 SSL 证书</span><br><span class="line">    volumes:</span><br><span class="line">      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro</span><br><span class="line">      - ./nginx/certs:/etc/nginx/certs:ro</span><br><span class="line">      - ./nginx/htpasswd:/etc/nginx/htpasswd:ro</span><br><span class="line">      - ./nginx/html:/usr/share/nginx/html:ro</span><br><span class="line">    # 将容器连接到 &quot;pandora&quot; 网络并分配一个 IPv4 地址</span><br><span class="line">    networks:</span><br><span class="line">      pandora:</span><br><span class="line">        ipv4_address: 192.168.0.4</span><br><span class="line"></span><br><span class="line">  # pandora 服务</span><br><span class="line">  pandora:</span><br><span class="line">    # 使用 pengzhile/pandora Docker 镜像</span><br><span class="line">    image: pengzhile/pandora</span><br><span class="line">    # 将容器命名为 &quot;pandoraGPT&quot;</span><br><span class="line">    container_name: pandoraGPT</span><br><span class="line">    # 将容器连接到 &quot;pandora&quot; 网络并分配一个 IPv4 地址</span><br><span class="line">    networks:</span><br><span class="line">      pandora:</span><br><span class="line">        ipv4_address: 192.168.0.2</span><br><span class="line">    # 将 &quot;data&quot; 目录作为容器内的卷挂载</span><br><span class="line">    volumes:</span><br><span class="line">      - ./data:/data</span><br><span class="line">    # 除非停止，否则重新启动容器</span><br><span class="line">    restart: unless-stopped</span><br><span class="line">    # 设置多个环境变量</span><br><span class="line">    environment:</span><br><span class="line">      # 将 PANDORA_SERVER 环境变量设置为监听所有可用的网络接口和端口 18888</span><br><span class="line">      PANDORA_SERVER: 0.0.0.0:18888</span><br><span class="line">      # 将 OPENAI_EMAIL 环境变量设置为指定的电子邮件地址</span><br><span class="line">      OPENAI_EMAIL: &#123;YourAccount&#125;</span><br><span class="line">      # 将 OPENAI_PASSWORD 环境变量设置为指定的密码</span><br><span class="line">      OPENAI_PASSWORD: &#123;YourPassword&#125;</span><br><span class="line">      # 建议替换 OPENAI_EMAIL 和 OPENAI_PASSWORD</span><br><span class="line">      # PANDORA_ACCESS_TOKEN: &#123;YourAccessToken&#125;</span><br></pre></td></tr></table></figure>

<h4 id="ACCESS-TOKEN-获取"><a href="#ACCESS-TOKEN-获取" class="headerlink" title="ACCESS TOKEN 获取"></a>ACCESS TOKEN 获取</h4><p><a href="https://chat.gateway.do/auth">https://chat.gateway.do/auth</a></p>
<h3 id="Nginx-conf"><a href="#Nginx-conf" class="headerlink" title="Nginx.conf"></a>Nginx.conf</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">user  nginx;  # 设置运行Nginx的用户为nginx</span><br><span class="line"></span><br><span class="line">worker_processes  1;  # 设置工作进程数为1</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line"></span><br><span class="line">    worker_connections  128;  # 每个worker进程最多允许的连接数</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen 80;  # 监听80端口，处理http请求</span><br><span class="line"></span><br><span class="line">        server_name chat.duzhuo.eu.org;  # 域名</span><br><span class="line"></span><br><span class="line">        return 301 https://$host$request_uri;  # 将所有http请求重定向到https</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen 443 ssl http2;  # 监听443端口，处理https请求，启用http2协议</span><br><span class="line">        server_name chat.duzhuo.eu.org;  # 域名</span><br><span class="line"></span><br><span class="line">        ssl_certificate /etc/nginx/certs/cert.pem;  # SSL证书路径</span><br><span class="line">        ssl_certificate_key /etc/nginx/certs/key.pem;  # SSL证书密钥路径</span><br><span class="line"></span><br><span class="line">        auth_basic &quot;Restricted&quot;;  # 开启基本认证</span><br><span class="line">        auth_basic_user_file /etc/nginx/htpasswd;  # 用户名密码文件路径</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">            proxy_pass http://192.168.0.2:18888;  # 将请求转发给目标服务器</span><br><span class="line">            proxy_set_header Host $host;  # 设置Host请求头</span><br><span class="line">            proxy_set_header X-Real-IP $remote_addr;  # 设置X-Real-IP请求头</span><br><span class="line">            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # 设置X-Forwarded-For请求头</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="auth-basic密码设置"><a href="#auth-basic密码设置" class="headerlink" title="auth_basic密码设置"></a>auth_basic密码设置</h4><p><code>apt-get update</code></p>
<p><code>apt-get install apache2-utils</code></p>
<p>初次创建htpasswd文件 并添加一个叫user的用户</p>
<p><code>htpasswd -c /path/to/htpasswd user</code></p>
<p>向htpasswd文件中添加一个叫anotheruser的用户</p>
<p><code>htpasswd /path/to/htpasswd anotheruser</code></p>
<h2 id="获取一个SSL证书"><a href="#获取一个SSL证书" class="headerlink" title="获取一个SSL证书"></a>获取一个SSL证书</h2><h3 id="通过acme-sh"><a href="#通过acme-sh" class="headerlink" title="通过acme.sh"></a>通过acme.sh</h3><p><a href="https://acme.sh/">https://acme.sh</a></p>
<h3 id="通过Cloudflare"><a href="#通过Cloudflare" class="headerlink" title="通过Cloudflare"></a>通过Cloudflare</h3><p><a href="https://cloudflare.com/">https://cloudflare.com</a></p>
<p>证书放置目录 参考 <a href="#tree" title="tree">tree</a></p>
<h2 id="启动和停止服务"><a href="#启动和停止服务" class="headerlink" title="启动和停止服务"></a>启动和停止服务</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@duzhuo:~/.pandora# docker-compose -f docker-compose-pandora.yaml up -d</span><br><span class="line">[+] Running 3/3</span><br><span class="line"> ✔ Network pandora_pandora                  Created                                                                                                    0.2s </span><br><span class="line"> ✔ Container pandoraGPT                     Started                                                                                                    3.1s </span><br><span class="line"> ✔ Container pandora-Nginx-Reverse-proxy-1  Started                                                                                                    3.1s </span><br><span class="line">root@duzhuo:~/.pandora#</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@duzhuo:~/.pandora# docker-compose -f docker-compose-pandora.yaml down</span><br><span class="line">[+] Running 3/3</span><br><span class="line"> ✔ Container pandoraGPT                     Removed                                                                                                   12.4s </span><br><span class="line"> ✔ Container pandora-Nginx-Reverse-proxy-1  Removed                                                                                                    3.0s </span><br><span class="line"> ✔ Network pandora_pandora                  Removed                                                                                                    0.4s </span><br><span class="line">root@duzhuo:~/.pandora#  </span><br></pre></td></tr></table></figure>

<h2 id="Open-and-play"><a href="#Open-and-play" class="headerlink" title="Open and play !"></a>Open and play !</h2><p><img src="https://s2.loli.net/2023/04/06/Myb6QP8z5EC1G2n.png" alt="pic"></p>
]]></content>
  </entry>
  <entry>
    <title>phpMyAdmin + MySQL docker-compose.yaml</title>
    <url>/2023/09/12/phpMyAdmin-MySQL/</url>
    <content><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">version: &#x27;3&#x27;</span><br><span class="line"></span><br><span class="line">networks:</span><br><span class="line">  mysql-phpmyadmin:</span><br><span class="line">    name: mysql-phpmyadmin</span><br><span class="line">    driver: bridge</span><br><span class="line"></span><br><span class="line">volumes:</span><br><span class="line">  mysqldata:</span><br><span class="line">    driver: local</span><br><span class="line">    driver_opts:</span><br><span class="line">      type: &#x27;none&#x27;</span><br><span class="line">      o: &#x27;bind&#x27;</span><br><span class="line">      device: &#x27;/home/duzhuo/docker/mysql/data&#x27;</span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line">  mysql:</span><br><span class="line">    image: mysql</span><br><span class="line">    container_name: mysql</span><br><span class="line">    environment:</span><br><span class="line">      MYSQL_ROOT_PASSWORD: 123456</span><br><span class="line">      MYSQL_DATABASE: database</span><br><span class="line">      MYSQL_USER: duzhuo</span><br><span class="line">      MYSQL_PASSWORD: 123456</span><br><span class="line">    ports:</span><br><span class="line">      - &quot;33060:3306&quot;</span><br><span class="line">    volumes:</span><br><span class="line">      - mysqldata:/var/lib/mysql</span><br><span class="line">    networks:</span><br><span class="line">      # Connect the mysql container to the mysql-phpmyadmin network and set the alias as mysql</span><br><span class="line">      mysql-phpmyadmin:</span><br><span class="line">        aliases:</span><br><span class="line">          - mysql</span><br><span class="line"></span><br><span class="line">  phpmyadmin:</span><br><span class="line">    image: phpmyadmin</span><br><span class="line">    container_name: phpmyadmin</span><br><span class="line">    links:</span><br><span class="line">      - mysql</span><br><span class="line">    environment:</span><br><span class="line">      PMA_HOST: mysql</span><br><span class="line">      PMA_PORT: 3306</span><br><span class="line">    ports:</span><br><span class="line">      - 8081:80</span><br><span class="line">    networks:</span><br><span class="line">      # Connect the phpmyadmin container to the mysql-phpmyadmin network and set the alias as phpmyadmin</span><br><span class="line">      mysql-phpmyadmin:</span><br><span class="line">        aliases:</span><br><span class="line">          - phpmyadmin</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>Python中main函数的使用</title>
    <url>/2024/06/19/python%E4%B8%ADmain%E5%87%BD%E6%95%B0%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<p>在查看Python代码中，经常会看到类似这样的代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># module.py</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">example</span>() -&gt; <span class="literal">None</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;This is an example.&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    example()</span><br></pre></td></tr></table></figure>

<p>这里直接运行文件可以获得输出内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ python3 module.py</span><br><span class="line">This is an example.</span><br></pre></td></tr></table></figure>

<p>现在我们在另一个文件中将<code>module.py</code>作为模块导入并运行：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># main.py</span></span><br><span class="line"><span class="keyword">from</span> module <span class="keyword">import</span> example</span><br><span class="line"></span><br><span class="line">example()</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ python3 main.py</span><br><span class="line">This is an example.</span><br></pre></td></tr></table></figure>

<p>我们修改<code>module.py</code>文件，在测试中我们经常会这么写：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># module.py</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">example</span>() -&gt; <span class="literal">None</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;This is an example.&quot;</span>)</span><br><span class="line"></span><br><span class="line">example()</span><br></pre></td></tr></table></figure>

<p>分别运行<code>module.py</code> <code>main.py</code>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ python3 module.py</span><br><span class="line">This is an example.</span><br><span class="line"></span><br><span class="line">$ python3 main.py</span><br><span class="line">This is an example.</span><br><span class="line">This is an example.</span><br></pre></td></tr></table></figure>

<p>我们注意到，<code>main.py</code>在运行时输出了两遍。这是因为python解释器第一次导入一个模块时，解释器会为我们找到并执行其顶层代码。其中包括任何变量声明、函数和类定义，以及任何顶层的可执行代码。</p>
<p>故为了避免我们将文件作为模块导入使用时运行不必要的代码，需要使用<code>if __name__ == &quot;__main__&quot;:</code> 对当作模块导入时不需要运行的部分进行屏蔽。</p>
<p>但是，当作模块导入并不需要使用<code>if __name__ == &quot;__main__&quot;:</code> 的情况也会存在，其中最有名的就是<code>import this</code>使得程序在运行时输出大名鼎鼎的<a href="https://peps.python.org/pep-0020/">PEP 20 – The Zen of Python</a>。</p>
<p>在代码测试部分中添加<code>if __name__ == &#39;__main__&#39;:</code>避免不必要的初始化是一个好习惯，也可以按照需求进行选择。</p>
]]></content>
  </entry>
  <entry>
    <title>Samba</title>
    <url>/2022/02/20/samba/</url>
    <content><![CDATA[<h1 id="Samba-应用"><a href="#Samba-应用" class="headerlink" title="Samba 应用"></a>Samba 应用</h1><blockquote>
<p>samba 是在 Linux 和 UNIX 系统上实现 SMB 协议的一个免费软件。</p>
<p>samba 提供了在不同计算机（即使操作系统不同）上共享服务的能力。</p>
<p>关键词：<code>samba</code>, <code>selinux</code></p>
</blockquote>
<h2 id="1-安装配置-samba"><a href="#1-安装配置-samba" class="headerlink" title="1. 安装配置 samba"></a>1. 安装配置 samba</h2><p>本文将以一个完整的示例来展示如何配置 samba 来实现 Linux 和 Windows 的文件共享。</p>
<p>目标：假设希望共享 Linux 服务器上的 &#x2F;share&#x2F;fs 目录。</p>
<h3 id="1-1-查看是否已经安装-samba"><a href="#1-1-查看是否已经安装-samba" class="headerlink" title="1.1. 查看是否已经安装 samba"></a>1.1. 查看是否已经安装 samba</h3><ul>
<li>CentOS：<code>rpm -qa | grep samba</code></li>
<li>Ubuntu：<code>dpkg -l | grep samba</code></li>
</ul>
<h3 id="1-2-安装-samba-工具"><a href="#1-2-安装-samba-工具" class="headerlink" title="1.2. 安装 samba 工具"></a>1.2. 安装 samba 工具</h3><ul>
<li>CentOS：<code>yum install -y samba samba-client samba-common</code></li>
<li>Ubuntu：<code>sudo apt-get install -y samba samba-client</code></li>
</ul>
<h3 id="1-3-配置-samba"><a href="#1-3-配置-samba" class="headerlink" title="1.3. 配置 samba"></a>1.3. 配置 samba</h3><p>samba 服务的配置文件是 <code>/etc/samba/smb.conf</code>，如果没有则 samba 无法启动。</p>
<p>执行以下命令，编辑配置文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/samba/smb.conf</span><br></pre></td></tr></table></figure>

<p>修改配置如下：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[global]</span></span><br><span class="line">        <span class="attr">workgroup</span> = SAMBA</span><br><span class="line">        <span class="attr">security</span> = user</span><br><span class="line"></span><br><span class="line">        passdb <span class="attr">backend</span> = tdbsam</span><br><span class="line"></span><br><span class="line">        <span class="attr">printing</span> = cups</span><br><span class="line">        printcap <span class="attr">name</span> = cups</span><br><span class="line">        load <span class="attr">printers</span> = <span class="literal">yes</span></span><br><span class="line">        cups <span class="attr">options</span> = raw</span><br><span class="line"></span><br><span class="line"><span class="section">[homes]</span></span><br><span class="line">        <span class="attr">comment</span> = Home Directories</span><br><span class="line">        valid <span class="attr">users</span> = %S, %D%w%S</span><br><span class="line">        <span class="attr">browseable</span> = <span class="literal">No</span></span><br><span class="line">        read <span class="attr">only</span> = <span class="literal">No</span></span><br><span class="line">        inherit <span class="attr">acls</span> = <span class="literal">Yes</span></span><br><span class="line"></span><br><span class="line"><span class="section">[printers]</span></span><br><span class="line">        <span class="attr">comment</span> = All Printers</span><br><span class="line">        <span class="attr">path</span> = /var/tmp</span><br><span class="line">        <span class="attr">printable</span> = <span class="literal">Yes</span></span><br><span class="line">        create <span class="attr">mask</span> = <span class="number">0600</span></span><br><span class="line">        <span class="attr">browseable</span> = <span class="literal">No</span></span><br><span class="line"></span><br><span class="line"><span class="section">[print$]</span></span><br><span class="line">        <span class="attr">comment</span> = Printer Drivers</span><br><span class="line">        <span class="attr">path</span> = /var/lib/samba/drivers</span><br><span class="line">        write <span class="attr">list</span> = @printadmin root</span><br><span class="line">        force <span class="attr">group</span> = @printadmin</span><br><span class="line">        create <span class="attr">mask</span> = <span class="number">0664</span></span><br><span class="line">        directory <span class="attr">mask</span> = <span class="number">0775</span></span><br><span class="line"></span><br><span class="line"><span class="section">[fs]</span></span><br><span class="line">        <span class="attr">comment</span> = share folder</span><br><span class="line">        <span class="attr">path</span> = /share/fs</span><br><span class="line">        <span class="attr">browseable</span> = <span class="literal">yes</span></span><br><span class="line">        <span class="attr">writable</span> = <span class="literal">yes</span></span><br><span class="line">        read <span class="attr">only</span> = <span class="literal">no</span></span><br><span class="line">        guest <span class="attr">ok</span> = <span class="literal">yes</span></span><br><span class="line">        create <span class="attr">mask</span> = <span class="number">0777</span></span><br><span class="line">        directory <span class="attr">mask</span> = <span class="number">0777</span></span><br><span class="line">        <span class="attr">public</span> = <span class="literal">yes</span></span><br><span class="line">        valid <span class="attr">users</span> = root</span><br></pre></td></tr></table></figure>

<blockquote>
<p>说明：</p>
<ul>
<li>我在这里添加了一个 <strong>[fs]</strong> 标签，这就是共享区域的配置。</li>
<li>这里设置 <code>path</code> 属性为 <code>/share/fs</code>，意味着准备共享 <code>/share/fs</code> 目录，需要根据实际需要设置路径。<code>/share/fs</code> 目录的权限要设置为 <strong>777</strong>：<code>chmod 777 /share/fs</code>。</li>
<li><code>browseable</code>、<code>writable</code> 等属性就比较容易理解了，即配置共享目录的访问权限。</li>
<li><code>valid users</code> 属性指定允许访问的用户，需要注意的是指定的用户必须是 Linux 机器上实际存在的用户。</li>
</ul>
</blockquote>
<h3 id="1-4-创建-samba-用户"><a href="#1-4-创建-samba-用户" class="headerlink" title="1.4. 创建 samba 用户"></a>1.4. 创建 samba 用户</h3><p>创建的 samba 用户必须是 Linux 机器上实际存在的用户。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo smbpasswd -a root</span><br><span class="line">New SMB password:</span><br><span class="line">Retype new SMB password:</span><br><span class="line">Added user root.</span><br></pre></td></tr></table></figure>

<p>根据提示输入 samba 用户的密码。当 samba 服务成功安装、启动后，通过 Windows 系统访问机器共享目录时，就要输入这里配置的用户名、密码。</p>
<ul>
<li>查看 samba 服务器中已拥有哪些用户 - <code>pdbedit -L</code></li>
<li>删除 samba 服务中的某个用户 - <code>smbpasswd -x 用户名</code></li>
</ul>
<h3 id="1-5-启动-samba-服务"><a href="#1-5-启动-samba-服务" class="headerlink" title="1.5. 启动 samba 服务"></a>1.5. 启动 samba 服务</h3><p>CentOS 6</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo service samba restart  <span class="comment"># 重启 samba</span></span><br><span class="line">$ sudo service smb restart    <span class="comment"># 重启 samba</span></span><br></pre></td></tr></table></figure>

<p>CentOS 7</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo systemctl start smb.service     <span class="comment"># 启动 samba</span></span><br><span class="line">$ sudo systemctl restart smb.service   <span class="comment"># 重启 samba</span></span><br><span class="line">$ sudo systemctl <span class="built_in">enable</span> smb.service    <span class="comment"># 设置开机自动启动</span></span><br><span class="line">$ sudo systemctl status smb.service    <span class="comment"># 查询 samba 状态</span></span><br></pre></td></tr></table></figure>

<p>Ubuntu 16.04.3</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ sudo service smbd restart</span><br></pre></td></tr></table></figure>

<h3 id="1-6-为-samba-添加防火墙规则"><a href="#1-6-为-samba-添加防火墙规则" class="headerlink" title="1.6. 为 samba 添加防火墙规则"></a>1.6. 为 samba 添加防火墙规则</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ sudo firewall-cmd --permanent --zone=public --add-service=samba</span><br><span class="line">$ sudo firewall-cmd --reload</span><br></pre></td></tr></table></figure>

<h3 id="1-7-测试-samba-服务"><a href="#1-7-测试-samba-服务" class="headerlink" title="1.7. 测试 samba 服务"></a>1.7. 测试 samba 服务</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ smbclient //localhost/fs -U root</span><br></pre></td></tr></table></figure>

<p>输入 samba 用户的密码，如果成功，就会进入 <code>smb: \&gt;</code>。</p>
<h3 id="1-8-访问-samba-服务共享的目录"><a href="#1-8-访问-samba-服务共享的目录" class="headerlink" title="1.8. 访问 samba 服务共享的目录"></a>1.8. 访问 samba 服务共享的目录</h3><p>Windows：</p>
<p>访问：<code>\\&lt;你的ip&gt;\&lt;你的共享路径&gt;</code> ：</p>
<p><img src="https://raw.githubusercontent.com/dunwu/images/dev/snap/20180920180928161334.png" alt="img"></p>
<p>Mac：</p>
<p>与 Windows 类似，直接在 Finder 中访问 <code>smb://&lt;你的ip&gt;/&lt;你的共享路径&gt;</code> 即可。</p>
<h2 id="2-配置详解"><a href="#2-配置详解" class="headerlink" title="2. 配置详解"></a>2. 配置详解</h2><h3 id="2-1-samba-默认配置"><a href="#2-1-samba-默认配置" class="headerlink" title="2.1. samba 默认配置"></a>2.1. samba 默认配置</h3><p>你可以从 <a href="https://git.samba.org/samba.git/?p=samba.git;a=blob_plain;f=examples/smb.conf.default;hb=HEAD">这里</a> 获取到默认配置文件：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ cp /etc/samba/smb.conf /etc/samba/smb.conf.bak</span><br><span class="line">$ wget &quot;https://git.samba.org/samba.git/?p=samba.git;a=blob_plain;f=examples/smb.conf.default;hb=HEAD&quot; -O /etc/samba/smb.conf</span><br></pre></td></tr></table></figure>

<p>smb.conf 默认内容如下：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[global]</span></span><br><span class="line">        <span class="attr">workgroup</span> = SAMBA</span><br><span class="line">        <span class="attr">security</span> = user</span><br><span class="line"></span><br><span class="line">        passdb <span class="attr">backend</span> = tdbsam</span><br><span class="line"></span><br><span class="line">        <span class="attr">printing</span> = cups</span><br><span class="line">        printcap <span class="attr">name</span> = cups</span><br><span class="line">        load <span class="attr">printers</span> = <span class="literal">yes</span></span><br><span class="line">        cups <span class="attr">options</span> = raw</span><br><span class="line"></span><br><span class="line"><span class="section">[homes]</span></span><br><span class="line">        <span class="attr">comment</span> = Home Directories</span><br><span class="line">        valid <span class="attr">users</span> = %S, %D%w%S</span><br><span class="line">        <span class="attr">browseable</span> = <span class="literal">No</span></span><br><span class="line">        read <span class="attr">only</span> = <span class="literal">No</span></span><br><span class="line">        inherit <span class="attr">acls</span> = <span class="literal">Yes</span></span><br><span class="line"></span><br><span class="line"><span class="section">[printers]</span></span><br><span class="line">        <span class="attr">comment</span> = All Printers</span><br><span class="line">        <span class="attr">path</span> = /var/tmp</span><br><span class="line">        <span class="attr">printable</span> = <span class="literal">Yes</span></span><br><span class="line">        create <span class="attr">mask</span> = <span class="number">0600</span></span><br><span class="line">        <span class="attr">browseable</span> = <span class="literal">No</span></span><br><span class="line"></span><br><span class="line"><span class="section">[print$]</span></span><br><span class="line">        <span class="attr">comment</span> = Printer Drivers</span><br><span class="line">        <span class="attr">path</span> = /var/lib/samba/drivers</span><br><span class="line">        write <span class="attr">list</span> = root</span><br><span class="line">        create <span class="attr">mask</span> = <span class="number">0664</span></span><br><span class="line">        directory <span class="attr">mask</span> = <span class="number">0775</span></span><br></pre></td></tr></table></figure>

<h3 id="2-2-全局参数-global"><a href="#2-2-全局参数-global" class="headerlink" title="2.2. 全局参数 [global]"></a>2.2. 全局参数 [global]</h3><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[global]</span></span><br><span class="line"></span><br><span class="line">config <span class="attr">file</span> = /usr/local/samba/lib/smb.conf.%m</span><br><span class="line">说明：config file可以让你使用另一个配置文件来覆盖缺省的配置文件。如果文件 不存在，则该项无效。这个参数很有用，可以使得samba配置更灵活，可以让一台samba服务器模拟多台不同配置的服务器。比如，你想让PC1（主机名）这台电脑在访问Samba Server时使用它自己的配置文件，那么先在/etc/samba/host/下为PC1配置一个名为smb.conf.pc1的文件，然后在smb.conf中加入：config <span class="attr">file</span>=/etc/samba/host/smb.conf.%m。这样当PC1请求连接Samba Server时，smb.conf.%m就被替换成smb.conf.pc1。这样，对于PC1来说，它所使用的Samba服务就是由smb.conf.pc1定义的，而其他机器访问Samba Server则还是应用smb.conf。</span><br><span class="line"></span><br><span class="line"><span class="attr">workgroup</span> = WORKGROUP</span><br><span class="line">说明：设定 Samba Server 所要加入的工作组或者域。</span><br><span class="line"></span><br><span class="line">server <span class="attr">string</span> = Samba Server Version %v</span><br><span class="line">说明：设定 Samba Server 的注释，可以是任何字符串，也可以不填。宏%v表示显示Samba的版本号。</span><br><span class="line"></span><br><span class="line">netbios <span class="attr">name</span> = smbserver</span><br><span class="line">说明：设置Samba Server的NetBIOS名称。如果不填，则默认会使用该服务器的DNS名称的第一部分。netbios name和workgroup名字不要设置成一样了。</span><br><span class="line"></span><br><span class="line"><span class="attr">interfaces</span> = lo eth0 <span class="number">192.168</span>.<span class="number">12.2</span>/<span class="number">24</span> <span class="number">192.168</span>.<span class="number">13.2</span>/<span class="number">24</span></span><br><span class="line">说明：设置Samba Server监听哪些网卡，可以写网卡名，也可以写该网卡的IP地址。</span><br><span class="line"></span><br><span class="line">hosts <span class="attr">allow</span> = <span class="number">127.192</span>.<span class="number">168.1</span> <span class="number">192.168</span>.<span class="number">10.1</span></span><br><span class="line">说明：表示允许连接到Samba Server的客户端，多个参数以空格隔开。可以用一个IP表示，也可以用一个网段表示。hosts deny 与hosts allow 刚好相反。</span><br><span class="line">例如：</span><br><span class="line"><span class="comment"># 表示容许来自172.17.2.*.*的主机连接，但排除172.17.2.50</span></span><br><span class="line">hosts <span class="attr">allow</span>=<span class="number">172.17</span>.<span class="number">2</span>.EXCEPT172.<span class="number">17.2</span>.<span class="number">50</span></span><br><span class="line"><span class="comment"># 表示容许来自172.17.2.0/255.255.0.0子网中的所有主机连接</span></span><br><span class="line">hosts <span class="attr">allow</span>=<span class="number">172.17</span>.<span class="number">2.0</span>/<span class="number">255.255</span>.<span class="number">0.0</span></span><br><span class="line"><span class="comment"># 表示容许来自M1和M2两台计算机连接</span></span><br><span class="line">hosts <span class="attr">allow</span>=M1，M2</span><br><span class="line"><span class="comment"># 表示容许来自SC域的所有计算机连接</span></span><br><span class="line">hosts <span class="attr">allow</span>=@SC</span><br><span class="line">max <span class="attr">connections</span> = <span class="number">0</span></span><br><span class="line">说明：max connections用来指定连接Samba Server的最大连接数目。如果超出连接数目，则新的连接请求将被拒绝。0表示不限制。</span><br><span class="line"></span><br><span class="line"><span class="attr">deadtime</span> = <span class="number">0</span></span><br><span class="line">说明：deadtime用来设置断掉一个没有打开任何文件的连接的时间。单位是分钟，0代表Samba Server不自动切断任何连接。</span><br><span class="line"></span><br><span class="line">time <span class="attr">server</span> = <span class="literal">yes</span>/<span class="literal">no</span></span><br><span class="line">说明：time server用来设置让nmdb成为windows客户端的时间服务器。</span><br><span class="line"></span><br><span class="line">log <span class="attr">file</span> = /var/log/samba/log.%m</span><br><span class="line">说明：设置Samba Server日志文件的存储位置以及日志文件名称。在文件名后加个宏%m（主机名），表示对每台访问Samba Server的机器都单独记录一个日志文件。如果pc1、pc2访问过Samba Server，就会在/var/log/samba目录下留下log.pc1和log.pc2两个日志文件。</span><br><span class="line"></span><br><span class="line">max log <span class="attr">size</span> = <span class="number">50</span></span><br><span class="line">说明：设置Samba Server日志文件的最大容量，单位为kB，0代表不限制。</span><br><span class="line"></span><br><span class="line"><span class="attr">security</span> = user</span><br><span class="line">说明：设置用户访问Samba Server的验证方式，一共有四种验证方式。</span><br><span class="line">1. share：用户访问Samba Server不需要提供用户名和口令, 安全性能较低。</span><br><span class="line">2. user：Samba Server共享目录只能被授权的用户访问,由Samba Server负责检查账号和密码的正确性。账号和密码要在本Samba Server中建立。</span><br><span class="line">3. server：依靠其他Windows NT/2000或Samba Server来验证用户的账号和密码,是一种代理验证。此种安全模式下,系统管理员可以把所有的Windows用户和口令集中到一个NT系统上,使用Windows NT进行Samba认证, 远程服务器可以自动认证全部用户和口令,如果认证失败,Samba将使用用户级安全模式作为替代的方式。</span><br><span class="line">4. domain：域安全级别,使用主域控制器(PDC)来完成认证。</span><br><span class="line"></span><br><span class="line">passdb <span class="attr">backend</span> = tdbsam</span><br><span class="line">说明：passdb backend就是用户后台的意思。目前有三种后台：smbpasswd、tdbsam和ldapsam。sam应该是security account manager（安全账户管理）的简写。</span><br><span class="line"></span><br><span class="line">smbpasswd：该方式是使用smb自己的工具smbpasswd来给系统用户（真实</span><br><span class="line">用户或者虚拟用户）设置一个Samba密码，客户端就用这个密码来访问Samba的资源。</span><br><span class="line">1. smbpasswd文件默认在/etc/samba目录下，不过有时候要手工建立该文件。</span><br><span class="line">2. tdbsam：该方式则是使用一个数据库文件来建立用户数据库。数据库文件叫passdb.tdb，默认在/etc/samba目录下。passdb.tdb用户数据库可以使用smbpasswd –a来建立Samba用户，不过要建立的Samba用户必须先是系统用户。我们也可以使用pdbedit命令来建立Samba账户。pdbedit命令的参数很多，我们列出几个主要的。</span><br><span class="line">  pdbedit –a username：新建Samba账户。</span><br><span class="line">  pdbedit –x username：删除Samba账户。</span><br><span class="line">  pdbedit –L：列出Samba用户列表，读取passdb.tdb数据库文件。</span><br><span class="line">  pdbedit –Lv：列出Samba用户列表的详细信息。</span><br><span class="line">  pdbedit –c “<span class="section">[D]</span>” –u username：暂停该Samba用户的账号。</span><br><span class="line">  pdbedit –c “<span class="section">[]</span>” –u username：恢复该Samba用户的账号。</span><br><span class="line">3. ldapsam：该方式则是基于LDAP的账户管理方式来验证用户。首先要建立LDAP服务，然后设置“passdb <span class="attr">backend</span> = ldapsam:ldap://LDAP Server”</span><br><span class="line"></span><br><span class="line">encrypt <span class="attr">passwords</span> = <span class="literal">yes</span>/<span class="literal">no</span></span><br><span class="line">说明：是否将认证密码加密。因为现在windows操作系统都是使用加密密码，所以一般要开启此项。不过配置文件默认已开启。</span><br><span class="line"></span><br><span class="line">smb passwd <span class="attr">file</span> = /etc/samba/smbpasswd</span><br><span class="line">说明：用来定义samba用户的密码文件。smbpasswd文件如果没有那就要手工新建。</span><br><span class="line"></span><br><span class="line">username <span class="attr">map</span> = /etc/samba/smbusers</span><br><span class="line">说明：用来定义用户名映射，比如可以将root换成administrator、admin等。不过要事先在smbusers文件中定义好。比如：<span class="attr">root</span> = administrator admin，这样就可以用administrator或admin这两个用户来代替root登陆Samba Server，更贴近windows用户的习惯。</span><br><span class="line"></span><br><span class="line">guest <span class="attr">account</span> = nobody</span><br><span class="line">说明：用来设置guest用户名。</span><br><span class="line"></span><br><span class="line">socket <span class="attr">options</span> = TCP_NODELAY SO_RCVBUF=<span class="number">8192</span> SO_SNDBUF=<span class="number">8192</span></span><br><span class="line">说明：用来设置服务器和客户端之间会话的Socket选项，可以优化传输速度。</span><br><span class="line"></span><br><span class="line">domain <span class="attr">master</span> = <span class="literal">yes</span>/<span class="literal">no</span></span><br><span class="line">说明：设置Samba服务器是否要成为网域主浏览器，网域主浏览器可以管理跨子网域的浏览服务。</span><br><span class="line"></span><br><span class="line">local <span class="attr">master</span> = <span class="literal">yes</span>/<span class="literal">no</span></span><br><span class="line">说明：local master用来指定Samba Server是否试图成为本地网域主浏览器。如果设为no，则永远不会成为本地网域主浏览器。但是即使设置为yes，也不等于该Samba Server就能成为主浏览器，还需要参加选举。</span><br><span class="line"></span><br><span class="line">preferred <span class="attr">master</span> = <span class="literal">yes</span>/<span class="literal">no</span></span><br><span class="line">说明：设置Samba Server一开机就强迫进行主浏览器选举，可以提高Samba Server成为本地网域主浏览器的机会。如果该参数指定为yes时，最好把domain master也指定为yes。使用该参数时要注意：如果在本Samba Server所在的子网有其他的机器（不论是windows NT还是其他Samba Server）也指定为首要主浏览器时，那么这些机器将会因为争夺主浏览器而在网络上大发广播，影响网络性能。如果同一个区域内有多台Samba Server，将上面三个参数设定在一台即可。</span><br><span class="line"></span><br><span class="line">os <span class="attr">level</span> = <span class="number">200</span></span><br><span class="line">说明：设置samba服务器的os level。该参数决定Samba Server是否有机会成为本地网域的主浏览器。os level从0到255，winNT的os level是32，win95/98的os level是1。Windows 2000的os level是64。如果设置为0，则意味着Samba Server将失去浏览选择。如果想让Samba Server成为PDC，那么将它的os level值设大些。</span><br><span class="line"></span><br><span class="line">domain <span class="attr">logons</span> = <span class="literal">yes</span>/<span class="literal">no</span></span><br><span class="line">说明：设置Samba Server是否要做为本地域控制器。主域控制器和备份域控制器都需要开启此项。</span><br><span class="line"></span><br><span class="line">logon . = %u.bat</span><br><span class="line">说明：当使用者用windows客户端登陆，那么Samba将提供一个登陆档。如果设置成%u.bat，那么就要为每个用户提供一个登陆档。如果人比较多，那就比较麻烦。可以设置成一个具体的文件名，比如start.bat，那么用户登陆后都会去执行start.bat，而不用为每个用户设定一个登陆档了。这个文件要放置在<span class="section">[netlogon]</span>的path设置的目录路径下。</span><br><span class="line"></span><br><span class="line">wins <span class="attr">support</span> = <span class="literal">yes</span>/<span class="literal">no</span></span><br><span class="line">说明：设置samba服务器是否提供wins服务。</span><br><span class="line"></span><br><span class="line">wins <span class="attr">server</span> = wins服务器IP地址</span><br><span class="line">说明：设置Samba Server是否使用别的wins服务器提供wins服务。</span><br><span class="line"></span><br><span class="line">wins <span class="attr">proxy</span> = <span class="literal">yes</span>/<span class="literal">no</span></span><br><span class="line">说明：设置Samba Server是否开启wins代理服务。</span><br><span class="line"></span><br><span class="line">dns <span class="attr">proxy</span> = <span class="literal">yes</span>/<span class="literal">no</span></span><br><span class="line">说明：设置Samba Server是否开启dns代理服务。</span><br><span class="line"></span><br><span class="line">load <span class="attr">printers</span> = <span class="literal">yes</span>/<span class="literal">no</span></span><br><span class="line">说明：设置是否在启动Samba时就共享打印机。</span><br><span class="line"></span><br><span class="line">printcap <span class="attr">name</span> = cups</span><br><span class="line">说明：设置共享打印机的配置文件。</span><br><span class="line"></span><br><span class="line"><span class="attr">printing</span> = cups</span><br><span class="line">说明：设置Samba共享打印机的类型。现在支持的打印系统有：bsd, sysv, plp, lprng, aix, hpux, qnx</span><br></pre></td></tr></table></figure>

<h3 id="2-3-共享参数-共享名"><a href="#2-3-共享参数-共享名" class="headerlink" title="2.3. 共享参数 [共享名]"></a>2.3. 共享参数 [共享名]</h3><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[共享名]</span></span><br><span class="line"></span><br><span class="line"><span class="attr">comment</span> = 任意字符串</span><br><span class="line">说明：comment是对该共享的描述，可以是任意字符串。</span><br><span class="line"></span><br><span class="line"><span class="attr">path</span> = 共享目录路径</span><br><span class="line">说明：path用来指定共享目录的路径。可以用%u、%m这样的宏来代替路径里的unix用户和客户机的Netbios名，用宏表示主要用于<span class="section">[homes]</span>共享域。例如：如果我们不打算用home段做为客户的共享，而是在/home/share/下为每个Linux用户以他的用户名建个目录，作为他的共享目录，这样path就可以写成：<span class="attr">path</span> = /home/share/%u<span class="comment">; 。用户在连接到这共享时具体的路径会被他的用户名代替，要注意这个用户名路径一定要存在，否则，客户机在访问时会找不到网络路径。同样，如果我们不是以用户来划分目录，而是以客户机来划分目录，为网络上每台可以访问samba的机器都各自建个以它的netbios名的路径，作为不同机器的共享资源，就可以这样写：path = /home/share/%m 。</span></span><br><span class="line"></span><br><span class="line"><span class="attr">browseable</span> = <span class="literal">yes</span>/<span class="literal">no</span></span><br><span class="line">说明：browseable用来指定该共享是否可以浏览。</span><br><span class="line"></span><br><span class="line"><span class="attr">writable</span> = <span class="literal">yes</span>/<span class="literal">no</span></span><br><span class="line">说明：writable用来指定该共享路径是否可写。</span><br><span class="line"></span><br><span class="line"><span class="attr">available</span> = <span class="literal">yes</span>/<span class="literal">no</span></span><br><span class="line">说明：available用来指定该共享资源是否可用。</span><br><span class="line"></span><br><span class="line">admin <span class="attr">users</span> = 该共享的管理者</span><br><span class="line">说明：admin users用来指定该共享的管理员（对该共享具有完全控制权限）。在samba 3.0中，如果用户验证方式设置成“<span class="attr">security</span>=share”时，此项无效。</span><br><span class="line">例如：admin <span class="attr">users</span> =bobyuan，jane（多个用户中间用逗号隔开）。</span><br><span class="line"></span><br><span class="line">valid <span class="attr">users</span> = 允许访问该共享的用户</span><br><span class="line">说明：valid users用来指定允许访问该共享资源的用户。</span><br><span class="line">例如：valid <span class="attr">users</span> = bobyuan，@bob，@tech（多个用户或者组中间用逗号隔开，如果要加入一个组就用“@+组名”表示。）</span><br><span class="line"></span><br><span class="line">invalid <span class="attr">users</span> = 禁止访问该共享的用户</span><br><span class="line">说明：invalid users用来指定不允许访问该共享资源的用户。</span><br><span class="line">例如：invalid <span class="attr">users</span> = root，@bob（多个用户或者组中间用逗号隔开。）</span><br><span class="line"></span><br><span class="line">write <span class="attr">list</span> = 允许写入该共享的用户</span><br><span class="line">说明：write list用来指定可以在该共享下写入文件的用户。</span><br><span class="line">例如：write <span class="attr">list</span> = bobyuan，@bob</span><br><span class="line"></span><br><span class="line"><span class="attr">public</span> = <span class="literal">yes</span>/<span class="literal">no</span></span><br><span class="line">说明：public用来指定该共享是否允许guest账户访问。</span><br><span class="line"></span><br><span class="line">guest <span class="attr">ok</span> = <span class="literal">yes</span>/<span class="literal">no</span></span><br><span class="line">说明：意义同“public”。</span><br><span class="line"></span><br><span class="line">几个特殊共享：</span><br><span class="line"><span class="section">[homes]</span></span><br><span class="line"><span class="attr">comment</span> = Home Directories</span><br><span class="line"><span class="attr">browseable</span> = <span class="literal">no</span></span><br><span class="line"><span class="attr">writable</span> = <span class="literal">yes</span></span><br><span class="line">valid <span class="attr">users</span> = %S</span><br><span class="line"><span class="comment">; valid users = MYDOMAIN\%S</span></span><br><span class="line"></span><br><span class="line"><span class="section">[printers]</span></span><br><span class="line"><span class="attr">comment</span> = All Printers</span><br><span class="line"><span class="attr">path</span> = /var/spool/samba</span><br><span class="line"><span class="attr">browseable</span> = <span class="literal">no</span></span><br><span class="line">guest <span class="attr">ok</span> = <span class="literal">no</span></span><br><span class="line"><span class="attr">writable</span> = <span class="literal">no</span></span><br><span class="line"><span class="attr">printable</span> = <span class="literal">yes</span></span><br><span class="line"></span><br><span class="line"><span class="section">[netlogon]</span></span><br><span class="line"><span class="attr">comment</span> = Network Logon Service</span><br><span class="line"><span class="attr">path</span> = /var/lib/samba/netlogon</span><br><span class="line">guest <span class="attr">ok</span> = <span class="literal">yes</span></span><br><span class="line"><span class="attr">writable</span> = <span class="literal">no</span></span><br><span class="line">share <span class="attr">modes</span> = <span class="literal">no</span></span><br><span class="line"></span><br><span class="line"><span class="section">[Profiles]</span></span><br><span class="line"><span class="attr">path</span> = /var/lib/samba/profiles</span><br><span class="line"><span class="attr">browseable</span> = <span class="literal">no</span></span><br><span class="line">guest <span class="attr">ok</span> = <span class="literal">yes</span></span><br></pre></td></tr></table></figure>

<h2 id="3-常见问题"><a href="#3-常见问题" class="headerlink" title="3. 常见问题"></a>3. 常见问题</h2><h3 id="3-1-你可能没有权限访问网络资源"><a href="#3-1-你可能没有权限访问网络资源" class="headerlink" title="3.1. 你可能没有权限访问网络资源"></a>3.1. 你可能没有权限访问网络资源</h3><p>问题现象：</p>
<ul>
<li>出现 <strong>NT_STATUS_ACCESS_DENIED</strong> 错误</li>
<li>Windows 下成功登陆 samba 后，点击共享目录仍然提示——你可能没有权限访问网络资源。</li>
</ul>
<p>解决步骤：</p>
<ol>
<li>检查是否配置了防火墙规则</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 一种方法是强行关闭防火墙</span></span><br><span class="line">$ sudo service iptables stop</span><br><span class="line"></span><br><span class="line"><span class="comment"># 另一种方法是配置防火墙规则</span></span><br><span class="line">$ sudo firewall-cmd --permanent --zone=public --add-service=samba</span><br><span class="line">$ sudo firewall-cmd --reload</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>关闭 selinux</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 将 /etc/selinux/config 文件中的 SELINUX 设为 disabled</span></span><br><span class="line">$ sed -i <span class="string">&#x27;s/SELINUX=enforcing/SELINUX=disabled/&#x27;</span> /etc/selinux/config</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启生效</span></span><br><span class="line">$ reboot</span><br></pre></td></tr></table></figure>

<h3 id="3-2-window-下对-samba-的清理操作"><a href="#3-2-window-下对-samba-的清理操作" class="headerlink" title="3.2. window 下对 samba 的清理操作"></a>3.2. window 下对 samba 的清理操作</h3><ol>
<li>windows 清除访问 samba 局域网密码缓存<ul>
<li>在 dos 窗口中输入 <code>control userpasswords2</code> 或者 <code>control keymgr.dll</code>，然后【高级】&#x2F;【密码管理】，删掉保存的该机器密码。</li>
</ul>
</li>
<li>windows 清除连接的 linux 的 samba 服务缓存<ol>
<li>打开 win 的命令行。</li>
<li>输入 net use，就会打印出当前缓存的连接上列表。</li>
<li>根据列表，一个个删除连接： net use 远程连接名称 &#x2F;del；或者一次性全部删除：<code>net use * /del</code>。</li>
</ol>
</li>
</ol>
<h2 id="4-参考资料"><a href="#4-参考资料" class="headerlink" title="4. 参考资料"></a>4. 参考资料</h2><ul>
<li><a href="http://blog.51cto.com/yuanbin/115761">http://blog.51cto.com/yuanbin/115761</a></li>
<li><a href="https://www.jianshu.com/p/750be209a6f0">https://www.jianshu.com/p/750be209a6f0</a></li>
<li><a href="https://github.com/judasn/Linux-Tutorial/blob/master/markdown-file/Samba.md">https://github.com/judasn/Linux-Tutorial/blob/master/markdown-file/Samba.md</a></li>
<li><a href="https://blog.csdn.net/lan120576664/article/details/50396511">https://blog.csdn.net/lan120576664/article/details/50396511</a></li>
</ul>
]]></content>
      <tags>
        <tag>linux</tag>
        <tag>Samba</tag>
      </tags>
  </entry>
  <entry>
    <title>simple-practicemode 文档</title>
    <url>/2022/02/18/simple-practicemode%20%E6%96%87%E6%A1%A3/</url>
    <content><![CDATA[<h1 id="simple-practicemode"><a href="#simple-practicemode" class="headerlink" title="simple-practicemode"></a>simple-practicemode</h1><h2 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h2><p>基于<a href="https://github.com/splewis/csgo-practice-mode"><strong>csgo-practice-mode</strong></a>，删减了部分内容，更好地适配<a href="https://github.com/hx-w/CSGOWiki-Plugins"><strong>csgowiki-pack</strong></a></p>
<h2 id="Feature"><a href="#Feature" class="headerlink" title="Feature"></a>Feature</h2><ul>
<li><input checked="" disabled="" type="checkbox"> 不再与<a href="https://github.com/splewis/csgo-pug-setup"><strong>csgo-pug-setup</strong></a>和<a href="https://github.com/splewis/get5"><strong>get5</strong></a>兼容。<code>simple-practicemode</code>是一个单独且纯粹的跑图插件。</li>
<li><input checked="" disabled="" type="checkbox"> 删除原跑图插件的<strong>本地道具仓库</strong>功能，<code>.nades</code>、<code>.cats</code>相关功能取消。因为<code>csgowiki-pack</code>已经具有部分道具合集的功能。</li>
<li><input checked="" disabled="" type="checkbox"> 重构<code>botmimic</code>插件，使其适配<code>sourcemod v1.11</code>语法，重构后的插件名&#x2F;Libary名称为<code>botmimic_fix</code>。</li>
<li><input checked="" disabled="" type="checkbox"> 新增计时器面板功能，<code>.timers</code>或<code>。timers</code>开启，整合了三种计时器类型。</li>
<li><input checked="" disabled="" type="checkbox"> 新增<code>。command</code>指令触发方式，方便中文输入法用户避免频繁切换输入法。</li>
<li><input checked="" disabled="" type="checkbox"> 更全面友好的汉化内容。</li>
</ul>
<h2 id="Compiling"><a href="#Compiling" class="headerlink" title="Compiling"></a>Compiling</h2><p>necessary <code>.inc</code> needed</p>
<ul>
<li><a href="https://www.sourcemod.net/downloads.php?branch=stable"><strong>sourcemod v1.10 stable</strong></a></li>
<li><a href="https://github.com/bcserv/smlib/tree/transitional_syntax"><strong>smlib</strong></a></li>
</ul>
<p>compiled files:</p>
<ul>
<li><code>botmimic_fix.smx</code></li>
<li><code>csutils.smx</code></li>
<li><code>practicemode.smx</code></li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>sudo: unable to resolve host hostname: Name or service not known</title>
    <url>/2023/11/09/sudo-unable-to-resolve-host-hostname-Name-or-service-not-known/</url>
    <content><![CDATA[<h2 id="问题复现"><a href="#问题复现" class="headerlink" title="问题复现"></a>问题复现</h2><p>使用 <code>hostnamectl hostname </code> 命令更改 hostname 之后使用 <code>sudo</code> 后出现报错 <code> sudo: unable to resolve host cloudcone: Name or service not known</code></p>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>修改 <code>/etc/hosts</code> 文件 添加 <code>127.0.0.1 cloudcone</code> <code>::1 cloudcone</code> cloudcone 是我设置的新 hostname</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">27.0.0.1       localhost</span><br><span class="line">127.0.0.1       cloudcone</span><br><span class="line"></span><br><span class="line"># The following lines are desirable for IPv6 capable hosts</span><br><span class="line">::1     localhost ip6-localhost ip6-loopback</span><br><span class="line">::1     cloudcone</span><br><span class="line">ff02::1 ip6-allnodes</span><br><span class="line">ff02::2 ip6-allrouters</span><br></pre></td></tr></table></figure>

<p><img src="https://s2.loli.net/2023/11/06/5JPyEbeZHoS3xjR.png" alt="Screenshot_20231106_125230.png"></p>
]]></content>
  </entry>
  <entry>
    <title>Systemd 应用</title>
    <url>/2022/02/20/systemd/</url>
    <content><![CDATA[<h1 id="Systemd-应用"><a href="#Systemd-应用" class="headerlink" title="Systemd 应用"></a>Systemd 应用</h1><blockquote>
<p>搬运自：<a href="http://www.ruanyifeng.com/blog/2016/03/systemd-tutorial-commands.html">Systemd 入门教程：命令篇</a>、<a href="hhttp://www.ruanyifeng.com/blog/2016/03/systemd-tutorial-part-two.html">Systemd 入门教程：实战篇</a></p>
</blockquote>
<p>Systemd 是 Linux 系统工具，用来启动<a href="http://www.ruanyifeng.com/blog/2016/02/linux-daemon.html">守护进程</a>，已成为大多数发行版的标准配置。</p>
<p>本文介绍它的基本用法，分为上下两篇。今天介绍它的主要命令，<a href="http://www.ruanyifeng.com/blog/2016/03/systemd-tutorial-part-two.html">下一篇</a>介绍如何用于实战。</p>
<h2 id="1-由来"><a href="#1-由来" class="headerlink" title="1. 由来"></a>1. 由来</h2><p>历史上，<a href="http://www.ruanyifeng.com/blog/2013/08/linux_boot_process.html">Linux 的启动</a>一直采用<a href="https://en.wikipedia.org/wiki/Init"><code>init</code></a>进程。</p>
<p>下面的命令用来启动服务。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo /etc/init.d/apache2 start</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">$ service apache2 start</span><br></pre></td></tr></table></figure>

<p>这种方法有两个缺点。</p>
<p>一是启动时间长。<code>init</code>进程是串行启动，只有前一个进程启动完，才会启动下一个进程。</p>
<p>二是启动脚本复杂。<code>init</code>进程只是执行启动脚本，不管其他事情。脚本需要自己处理各种<br>情况，这往往使得脚本变得很长。</p>
<h2 id="2-Systemd-概述"><a href="#2-Systemd-概述" class="headerlink" title="2. Systemd 概述"></a>2. Systemd 概述</h2><p>Systemd 就是为了解决这些问题而诞生的。它的设计目标是，为系统的启动和管理提供一套<br>完整的解决方案。</p>
<p>根据 Linux 惯例，字母<code>d</code>是守护进程（daemon）的缩写。 Systemd 这个名字的含义，就<br>是它要守护整个系统。</p>
<p>使用了 Systemd，就不需要再用<code>init</code>了。Systemd 取代了<code>initd</code>，成为系统的第一个进<br>程（PID 等于 1），其他进程都是它的子进程。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ systemctl --version</span><br></pre></td></tr></table></figure>

<p>上面的命令查看 Systemd 的版本。</p>
<p>Systemd 的优点是功能强大，使用方便，缺点是体系庞大，非常复杂。事实上，现在还有很<br>多人反对使用 Systemd，理由就是它过于复杂，与操作系统的其他部分强耦合，违反”keep<br>simple, keep stupid”<br>的<a href="http://www.ruanyifeng.com/blog/2009/06/unix_philosophy.html">Unix 哲学</a>。</p>
<p><img src="http://www.ruanyifeng.com/blogimg/asset/2016/bg2016030703.png" alt="img"></p>
<p>（上图为 Systemd 架构图）</p>
<h2 id="3-系统管理"><a href="#3-系统管理" class="headerlink" title="3. 系统管理"></a>3. 系统管理</h2><p>Systemd 并不是一个命令，而是一组命令，涉及到系统管理的方方面面。</p>
<h3 id="3-1-systemctl"><a href="#3-1-systemctl" class="headerlink" title="3.1. systemctl"></a>3.1. systemctl</h3><p><code>systemctl</code>是 Systemd 的主命令，用于管理系统。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 重启系统</span></span><br><span class="line">$ sudo systemctl reboot</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭系统，切断电源</span></span><br><span class="line">$ sudo systemctl poweroff</span><br><span class="line"></span><br><span class="line"><span class="comment"># CPU停止工作</span></span><br><span class="line">$ sudo systemctl halt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 暂停系统</span></span><br><span class="line">$ sudo systemctl <span class="built_in">suspend</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 让系统进入冬眠状态</span></span><br><span class="line">$ sudo systemctl hibernate</span><br><span class="line"></span><br><span class="line"><span class="comment"># 让系统进入交互式休眠状态</span></span><br><span class="line">$ sudo systemctl hybrid-sleep</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动进入救援状态（单用户状态）</span></span><br><span class="line">$ sudo systemctl rescue</span><br></pre></td></tr></table></figure>

<h3 id="3-2-systemd-analyze"><a href="#3-2-systemd-analyze" class="headerlink" title="3.2. systemd-analyze"></a>3.2. systemd-analyze</h3><p><code>systemd-analyze</code>命令用于查看启动耗时。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看启动耗时</span></span><br><span class="line">$ systemd-analyze</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看每个服务的启动耗时</span></span><br><span class="line">$ systemd-analyze blame</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示瀑布状的启动过程流</span></span><br><span class="line">$ systemd-analyze critical-chain</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示指定服务的启动流</span></span><br><span class="line">$ systemd-analyze critical-chain atd.service</span><br></pre></td></tr></table></figure>

<h3 id="3-3-hostnamectl"><a href="#3-3-hostnamectl" class="headerlink" title="3.3. hostnamectl"></a>3.3. hostnamectl</h3><p><code>hostnamectl</code>命令用于查看当前主机的信息。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 显示当前主机的信息</span></span><br><span class="line">$ hostnamectl</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置主机名。</span></span><br><span class="line">$ sudo hostnamectl set-hostname rhel7</span><br></pre></td></tr></table></figure>

<h3 id="3-4-localectl"><a href="#3-4-localectl" class="headerlink" title="3.4. localectl"></a>3.4. localectl</h3><p><code>localectl</code>命令用于查看本地化设置。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看本地化设置</span></span><br><span class="line">$ localectl</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置本地化参数。</span></span><br><span class="line">$ sudo localectl set-locale LANG=en_GB.utf8</span><br><span class="line">$ sudo localectl set-keymap en_GB</span><br></pre></td></tr></table></figure>

<h3 id="3-5-timedatectl"><a href="#3-5-timedatectl" class="headerlink" title="3.5. timedatectl"></a>3.5. timedatectl</h3><p><code>timedatectl</code>命令用于查看当前时区设置。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看当前时区设置</span></span><br><span class="line">$ timedatectl</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示所有可用的时区</span></span><br><span class="line">$ timedatectl list-timezones</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置当前时区</span></span><br><span class="line">$ sudo timedatectl set-timezone America/New_York</span><br><span class="line">$ sudo timedatectl set-time YYYY-MM-DD</span><br><span class="line">$ sudo timedatectl set-time HH:MM:SS</span><br></pre></td></tr></table></figure>

<h3 id="3-6-loginctl"><a href="#3-6-loginctl" class="headerlink" title="3.6. loginctl"></a>3.6. loginctl</h3><p><code>loginctl</code>命令用于查看当前登录的用户。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 列出当前session</span></span><br><span class="line">$ loginctl list-sessions</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出当前登录用户</span></span><br><span class="line">$ loginctl list-users</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出显示指定用户的信息</span></span><br><span class="line">$ loginctl show-user ruanyf</span><br></pre></td></tr></table></figure>

<h2 id="4-Unit"><a href="#4-Unit" class="headerlink" title="4. Unit"></a>4. Unit</h2><h3 id="4-1-含义"><a href="#4-1-含义" class="headerlink" title="4.1. 含义"></a>4.1. 含义</h3><p>Systemd 可以管理所有系统资源。不同的资源统称为 Unit（单位）。</p>
<p>Unit 一共分成 12 种。</p>
<ul>
<li>Service unit：系统服务</li>
<li>Target unit：多个 Unit 构成的一个组</li>
<li>Device Unit：硬件设备</li>
<li>Mount Unit：文件系统的挂载点</li>
<li>Automount Unit：自动挂载点</li>
<li>Path Unit：文件或路径</li>
<li>Scope Unit：不是由 Systemd 启动的外部进程</li>
<li>Slice Unit：进程组</li>
<li>Snapshot Unit：Systemd 快照，可以切回某个快照</li>
<li>Socket Unit：进程间通信的 socket</li>
<li>Swap Unit：swap 文件</li>
<li>Timer Unit：定时器</li>
</ul>
<p><code>systemctl list-units</code>命令可以查看当前系统的所有 Unit 。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 列出正在运行的 Unit</span></span><br><span class="line">$ systemctl list-units</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出所有Unit，包括没有找到配置文件的或者启动失败的</span></span><br><span class="line">$ systemctl list-units --all</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出所有没有运行的 Unit</span></span><br><span class="line">$ systemctl list-units --all --state=inactive</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出所有加载失败的 Unit</span></span><br><span class="line">$ systemctl list-units --failed</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出所有正在运行的、类型为 service 的 Unit</span></span><br><span class="line">$ systemctl list-units --<span class="built_in">type</span>=service</span><br></pre></td></tr></table></figure>

<h3 id="4-2-Unit-的状态"><a href="#4-2-Unit-的状态" class="headerlink" title="4.2. Unit 的状态"></a>4.2. Unit 的状态</h3><p><code>systemctl status</code>命令用于查看系统状态和单个 Unit 的状态。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 显示系统状态</span></span><br><span class="line">$ systemctl status</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示单个 Unit 的状态</span></span><br><span class="line">$ sysystemctl status bluetooth.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示远程主机的某个 Unit 的状态</span></span><br><span class="line">$ systemctl -H root@rhel7.example.com status httpd.service</span><br></pre></td></tr></table></figure>

<p>除了<code>status</code>命令，<code>systemctl</code>还提供了三个查询状态的简单方法，主要供脚本内部的判<br>断语句使用。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 显示某个 Unit 是否正在运行</span></span><br><span class="line">$ systemctl is-active application.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示某个 Unit 是否处于启动失败状态</span></span><br><span class="line">$ systemctl is-failed application.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示某个 Unit 服务是否建立了启动链接</span></span><br><span class="line">$ systemctl is-enabled application.service</span><br></pre></td></tr></table></figure>

<h3 id="4-3-Unit-管理"><a href="#4-3-Unit-管理" class="headerlink" title="4.3. Unit 管理"></a>4.3. Unit 管理</h3><p>对于用户来说，最常用的是下面这些命令，用于启动和停止 Unit（主要是 service）。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 立即启动一个服务</span></span><br><span class="line">$ sudo systemctl start apache.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 立即停止一个服务</span></span><br><span class="line">$ sudo systemctl stop apache.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启一个服务</span></span><br><span class="line">$ sudo systemctl restart apache.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 杀死一个服务的所有子进程</span></span><br><span class="line">$ sudo systemctl <span class="built_in">kill</span> apache.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新加载一个服务的配置文件</span></span><br><span class="line">$ sudo systemctl reload apache.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重载所有修改过的配置文件</span></span><br><span class="line">$ sudo systemctl daemon-reload</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示某个 Unit 的所有底层参数</span></span><br><span class="line">$ systemctl show httpd.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示某个 Unit 的指定属性的值</span></span><br><span class="line">$ systemctl show -p CPUShares httpd.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置某个 Unit 的指定属性</span></span><br><span class="line">$ sudo systemctl set-property httpd.service CPUShares=500</span><br></pre></td></tr></table></figure>

<h3 id="4-4-依赖关系"><a href="#4-4-依赖关系" class="headerlink" title="4.4. 依赖关系"></a>4.4. 依赖关系</h3><p>Unit 之间存在依赖关系：A 依赖于 B，就意味着 Systemd 在启动 A 的时候，同时会去启<br>动 B。</p>
<p><code>systemctl list-dependencies</code>命令列出一个 Unit 的所有依赖。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ systemctl list-dependencies nginx.service</span><br></pre></td></tr></table></figure>

<p>上面命令的输出结果之中，有些依赖是 Target 类型（详见下文），默认不会展开显示。如<br>果要展开 Target，就需要使用<code>--all</code>参数。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ systemctl list-dependencies --all nginx.service</span><br></pre></td></tr></table></figure>

<h2 id="5-Unit-的配置文件"><a href="#5-Unit-的配置文件" class="headerlink" title="5. Unit 的配置文件"></a>5. Unit 的配置文件</h2><h3 id="5-1-概述"><a href="#5-1-概述" class="headerlink" title="5.1. 概述"></a>5.1. 概述</h3><p>每一个 Unit 都有一个配置文件，告诉 Systemd 怎么启动这个 Unit 。</p>
<p>Systemd 默认从目录<code>/etc/systemd/system/</code>读取配置文件。但是，里面存放的大部分文件<br>都是符号链接，指向目录<code>/usr/lib/systemd/system/</code>，真正的配置文件存放在那个目录。</p>
<p><code>systemctl enable</code>命令用于在上面两个目录之间，建立符号链接关系。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo systemctl <span class="built_in">enable</span> clamd@scan.service</span><br><span class="line"><span class="comment"># 等同于</span></span><br><span class="line">$ sudo <span class="built_in">ln</span> -s <span class="string">&#x27;/usr/lib/systemd/system/clamd@scan.service&#x27;</span> <span class="string">&#x27;/etc/systemd/system/multi-user.target.wants/clamd@scan.service&#x27;</span></span><br></pre></td></tr></table></figure>

<p>如果配置文件里面设置了开机启动，<code>systemctl enable</code>命令相当于激活开机启动。</p>
<p>与之对应的，<code>systemctl disable</code>命令用于在两个目录之间，撤销符号链接关系，相当于<br>撤销开机启动。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo systemctl <span class="built_in">disable</span> clamd@scan.service</span><br></pre></td></tr></table></figure>

<p>配置文件的后缀名，就是该 Unit 的种类，比如<code>sshd.socket</code>。如果省略，Systemd 默认<br>后缀名为<code>.service</code>，所以<code>sshd</code>会被理解成<code>sshd.service</code>。</p>
<h3 id="5-2-配置文件的状态"><a href="#5-2-配置文件的状态" class="headerlink" title="5.2. 配置文件的状态"></a>5.2. 配置文件的状态</h3><p><code>systemctl list-unit-files</code>命令用于列出所有配置文件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 列出所有配置文件</span></span><br><span class="line">$ systemctl list-unit-files</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出指定类型的配置文件</span></span><br><span class="line">$ systemctl list-unit-files --<span class="built_in">type</span>=service</span><br></pre></td></tr></table></figure>

<p>这个命令会输出一个列表。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ systemctl list-unit-files</span><br><span class="line"></span><br><span class="line">UNIT FILE              STATE</span><br><span class="line">chronyd.service        enabled</span><br><span class="line">clamd@.service         static</span><br><span class="line">clamd@scan.service     disabled</span><br></pre></td></tr></table></figure>

<p>这个列表显示每个配置文件的状态，一共有四种。</p>
<ul>
<li>enabled：已建立启动链接</li>
<li>disabled：没建立启动链接</li>
<li>static：该配置文件没有<code>[Install]</code>部分（无法执行），只能作为其他配置文件的依赖</li>
<li>masked：该配置文件被禁止建立启动链接</li>
</ul>
<p>注意，从配置文件的状态无法看出，该 Unit 是否正在运行。这必须执行前面提到<br>的<code>systemctl status</code>命令。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ systemctl status bluetooth.service</span><br></pre></td></tr></table></figure>

<p>一旦修改配置文件，就要让 SystemD 重新加载配置文件，然后重新启动，否则修改不会生<br>效。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo systemctl daemon-reload</span><br><span class="line">$ sudo systemctl restart httpd.service</span><br></pre></td></tr></table></figure>

<h3 id="5-3-配置文件的格式"><a href="#5-3-配置文件的格式" class="headerlink" title="5.3. 配置文件的格式"></a>5.3. 配置文件的格式</h3><p>配置文件就是普通的文本文件，可以用文本编辑器打开。</p>
<p><code>systemctl cat</code>命令可以查看配置文件的内容。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ systemctl <span class="built_in">cat</span> atd.service</span><br><span class="line"></span><br><span class="line">[Unit]</span><br><span class="line">Description=ATD daemon</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">ExecStart=/usr/bin/atd</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>

<p>从上面的输出可以看到，配置文件分成几个区块。每个区块的第一行，是用方括号表示的区<br>别名，比如<code>[Unit]</code>。注意，配置文件的区块名和字段名，都是大小写敏感的。</p>
<p>每个区块内部是一些等号连接的键值对。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[Section]</span><br><span class="line">Directive1=value</span><br><span class="line">Directive2=value</span><br><span class="line"></span><br><span class="line">. . .</span><br></pre></td></tr></table></figure>

<p>注意，键值对的等号两侧不能有空格。</p>
<h3 id="5-4-配置文件的区块"><a href="#5-4-配置文件的区块" class="headerlink" title="5.4. 配置文件的区块"></a>5.4. 配置文件的区块</h3><p><code>[Unit]</code>区块通常是配置文件的第一个区块，用来定义 Unit 的元数据，以及配置与其他<br>Unit 的关系。它的主要字段如下。</p>
<ul>
<li><code>Description</code>：简短描述</li>
<li><code>Documentation</code>：文档地址</li>
<li><code>Requires</code>：当前 Unit 依赖的其他 Unit，如果它们没有运行，当前 Unit 会启动失败</li>
<li><code>Wants</code>：与当前 Unit 配合的其他 Unit，如果它们没有运行，当前 Unit 不会启动失败</li>
<li><code>BindsTo</code>：与<code>Requires</code>类似，它指定的 Unit 如果退出，会导致当前 Unit 停止运行</li>
<li><code>Before</code>：如果该字段指定的 Unit 也要启动，那么必须在当前 Unit 之后启动</li>
<li><code>After</code>：如果该字段指定的 Unit 也要启动，那么必须在当前 Unit 之前启动</li>
<li><code>Conflicts</code>：这里指定的 Unit 不能与当前 Unit 同时运行</li>
<li><code>Condition...</code>：当前 Unit 运行必须满足的条件，否则不会运行</li>
<li><code>Assert...</code>：当前 Unit 运行必须满足的条件，否则会报启动失败</li>
</ul>
<p><code>[Install]</code>通常是配置文件的最后一个区块，用来定义如何启动，以及是否开机启动。它<br>的主要字段如下。</p>
<ul>
<li><code>WantedBy</code>：它的值是一个或多个 Target，当前 Unit 激活时（enable）符号链接会放<br>入<code>/etc/systemd/system</code>目录下面以 Target 名 + <code>.wants</code>后缀构成的子目录中</li>
<li><code>RequiredBy</code>：它的值是一个或多个 Target，当前 Unit 激活时，符号链接会放<br>入<code>/etc/systemd/system</code>目录下面以 Target 名 + <code>.required</code>后缀构成的子目录中</li>
<li><code>Alias</code>：当前 Unit 可用于启动的别名</li>
<li><code>Also</code>：当前 Unit 激活（enable）时，会被同时激活的其他 Unit</li>
</ul>
<p><code>[Service]</code>区块用来 Service 的配置，只有 Service 类型的 Unit 才有这个区块。它的<br>主要字段如下。</p>
<ul>
<li><code>Type</code>：定义启动时的进程行为。它有以下几种值。</li>
<li><code>Type=simple</code>：默认值，执行<code>ExecStart</code>指定的命令，启动主进程</li>
<li><code>Type=forking</code>：以 fork 方式从父进程创建子进程，创建后父进程会立即退出</li>
<li><code>Type=oneshot</code>：一次性进程，Systemd 会等当前服务退出，再继续往下执行</li>
<li><code>Type=dbus</code>：当前服务通过 D-Bus 启动</li>
<li><code>Type=notify</code>：当前服务启动完毕，会通知<code>Systemd</code>，再继续往下执行</li>
<li><code>Type=idle</code>：若有其他任务执行完毕，当前服务才会运行</li>
<li><code>ExecStart</code>：启动当前服务的命令</li>
<li><code>ExecStartPre</code>：启动当前服务之前执行的命令</li>
<li><code>ExecStartPost</code>：启动当前服务之后执行的命令</li>
<li><code>ExecReload</code>：重启当前服务时执行的命令</li>
<li><code>ExecStop</code>：停止当前服务时执行的命令</li>
<li><code>ExecStopPost</code>：停止当其服务之后执行的命令</li>
<li><code>RestartSec</code>：自动重启当前服务间隔的秒数</li>
<li><code>Restart</code>：定义何种情况 Systemd 会自动重启当前服务，可能的值包括<code>always</code>（总是<br>重启）、<code>on-success</code>、<code>on-failure</code>、<code>on-abnormal</code>、<code>on-abort</code>、<code>on-watchdog</code></li>
<li><code>TimeoutSec</code>：定义 Systemd 停止当前服务之前等待的秒数</li>
<li><code>Environment</code>：指定环境变量</li>
</ul>
<p>Unit 配置文件的完整字段清单，请参<br>考<a href="https://www.freedesktop.org/software/systemd/man/systemd.unit.html">官方文档</a>。</p>
<h2 id="6-Target"><a href="#6-Target" class="headerlink" title="6. Target"></a>6. Target</h2><p>启动计算机的时候，需要启动大量的 Unit。如果每一次启动，都要一一写明本次启动需要<br>哪些 Unit，显然非常不方便。Systemd 的解决方案就是 Target。</p>
<p>简单说，Target 就是一个 Unit 组，包含许多相关的 Unit 。启动某个 Target 的时候<br>，Systemd 就会启动里面所有的 Unit。从这个意义上说，Target 这个概念类似于”状态点<br>“，启动某个 Target 就好比启动到某种状态。</p>
<p>传统的<code>init</code>启动模式里面，有 RunLevel 的概念，跟 Target 的作用很类似。不同的是<br>，RunLevel 是互斥的，不可能多个 RunLevel 同时启动，但是多个 Target 可以同时启动<br>。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看当前系统的所有 Target</span></span><br><span class="line">$ systemctl list-unit-files --<span class="built_in">type</span>=target</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看一个 Target 包含的所有 Unit</span></span><br><span class="line">$ systemctl list-dependencies multi-user.target</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看启动时的默认 Target</span></span><br><span class="line">$ systemctl get-default</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置启动时的默认 Target</span></span><br><span class="line">$ sudo systemctl set-default multi-user.target</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换 Target 时，默认不关闭前一个 Target 启动的进程，</span></span><br><span class="line"><span class="comment"># systemctl isolate 命令改变这种行为，</span></span><br><span class="line"><span class="comment"># 关闭前一个 Target 里面所有不属于后一个 Target 的进程</span></span><br><span class="line">$ sudo systemctl isolate multi-user.target</span><br></pre></td></tr></table></figure>

<p>Target 与 传统 RunLevel 的对应关系如下。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Traditional runlevel      New target name     Symbolically linked to...</span><br><span class="line"></span><br><span class="line">Runlevel 0           |    runlevel0.target -&gt; poweroff.target</span><br><span class="line">Runlevel 1           |    runlevel1.target -&gt; rescue.target</span><br><span class="line">Runlevel 2           |    runlevel2.target -&gt; multi-user.target</span><br><span class="line">Runlevel 3           |    runlevel3.target -&gt; multi-user.target</span><br><span class="line">Runlevel 4           |    runlevel4.target -&gt; multi-user.target</span><br><span class="line">Runlevel 5           |    runlevel5.target -&gt; graphical.target</span><br><span class="line">Runlevel 6           |    runlevel6.target -&gt; reboot.target</span><br></pre></td></tr></table></figure>

<p>它与<code>init</code>进程的主要差别如下。</p>
<p><strong>（1）默认的 RunLevel</strong>（在<code>/etc/inittab</code>文件设置）现在被默认的 Target 取代，<br>位置是<code>/etc/systemd/system/default.target</code>，通常符号链接到<code>graphical.target</code>（<br>图形界面）或者<code>multi-user.target</code>（多用户命令行）。</p>
<p><strong>（2）启动脚本的位置</strong>，以前是<code>/etc/init.d</code>目录，符号链接到不同的 RunLevel 目<br>录 （比如<code>/etc/rc3.d</code>、<code>/etc/rc5.d</code>等），现在则存放<br>在<code>/lib/systemd/system</code>和<code>/etc/systemd/system</code>目录。</p>
<p><strong>（3）配置文件的位置</strong>，以前<code>init</code>进程的配置文件是<code>/etc/inittab</code>，各种服务的<br>配置文件存放在<code>/etc/sysconfig</code>目录。现在的配置文件主要存放在<code>/lib/systemd</code>目录<br>，在<code>/etc/systemd</code>目录里面的修改可以覆盖原始设置。</p>
<h2 id="7-日志管理"><a href="#7-日志管理" class="headerlink" title="7. 日志管理"></a>7. 日志管理</h2><p>Systemd 统一管理所有 Unit 的启动日志。带来的好处就是，可以只用<code>journalctl</code>一个命<br>令，查看所有日志（内核日志和应用日志）。日志的配置文件<br>是<code>/etc/systemd/journald.conf</code>。</p>
<p><code>journalctl</code>功能强大，用法非常多。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看所有日志（默认情况下 ，只保存本次启动的日志）</span></span><br><span class="line">$ sudo journalctl</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看内核日志（不显示应用日志）</span></span><br><span class="line">$ sudo journalctl -k</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看系统本次启动的日志</span></span><br><span class="line">$ sudo journalctl -b</span><br><span class="line">$ sudo journalctl -b -0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看上一次启动的日志（需更改设置）</span></span><br><span class="line">$ sudo journalctl -b -1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看指定时间的日志</span></span><br><span class="line">$ sudo journalctl --since=<span class="string">&quot;2012-10-30 18:17:16&quot;</span></span><br><span class="line">$ sudo journalctl --since <span class="string">&quot;20 min ago&quot;</span></span><br><span class="line">$ sudo journalctl --since yesterday</span><br><span class="line">$ sudo journalctl --since <span class="string">&quot;2015-01-10&quot;</span> --until <span class="string">&quot;2015-01-11 03:00&quot;</span></span><br><span class="line">$ sudo journalctl --since 09:00 --until <span class="string">&quot;1 hour ago&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示尾部的最新10行日志</span></span><br><span class="line">$ sudo journalctl -n</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示尾部指定行数的日志</span></span><br><span class="line">$ sudo journalctl -n 20</span><br><span class="line"></span><br><span class="line"><span class="comment"># 实时滚动显示最新日志</span></span><br><span class="line">$ sudo journalctl -f</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看指定服务的日志</span></span><br><span class="line">$ sudo journalctl /usr/lib/systemd/systemd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看指定进程的日志</span></span><br><span class="line">$ sudo journalctl _PID=1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看某个路径的脚本的日志</span></span><br><span class="line">$ sudo journalctl /usr/bin/bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看指定用户的日志</span></span><br><span class="line">$ sudo journalctl _UID=33 --since today</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看某个 Unit 的日志</span></span><br><span class="line">$ sudo journalctl -u nginx.service</span><br><span class="line">$ sudo journalctl -u nginx.service --since today</span><br><span class="line"></span><br><span class="line"><span class="comment"># 实时滚动显示某个 Unit 的最新日志</span></span><br><span class="line">$ sudo journalctl -u nginx.service -f</span><br><span class="line"></span><br><span class="line"><span class="comment"># 合并显示多个 Unit 的日志</span></span><br><span class="line">$ journalctl -u nginx.service -u php-fpm.service --since today</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看指定优先级（及其以上级别）的日志，共有8级</span></span><br><span class="line"><span class="comment"># 0: emerg</span></span><br><span class="line"><span class="comment"># 1: alert</span></span><br><span class="line"><span class="comment"># 2: crit</span></span><br><span class="line"><span class="comment"># 3: err</span></span><br><span class="line"><span class="comment"># 4: warning</span></span><br><span class="line"><span class="comment"># 5: notice</span></span><br><span class="line"><span class="comment"># 6: info</span></span><br><span class="line"><span class="comment"># 7: debug</span></span><br><span class="line">$ sudo journalctl -p err -b</span><br><span class="line"></span><br><span class="line"><span class="comment"># 日志默认分页输出，--no-pager 改为正常的标准输出</span></span><br><span class="line">$ sudo journalctl --no-pager</span><br><span class="line"></span><br><span class="line"><span class="comment"># 以 JSON 格式（单行）输出</span></span><br><span class="line">$ sudo journalctl -b -u nginx.service -o json</span><br><span class="line"></span><br><span class="line"><span class="comment"># 以 JSON 格式（多行）输出，可读性更好</span></span><br><span class="line">$ sudo journalctl -b -u nginx.serviceqq</span><br><span class="line"> -o json-pretty</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示日志占据的硬盘空间</span></span><br><span class="line">$ sudo journalctl --disk-usage</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定日志文件占据的最大空间</span></span><br><span class="line">$ sudo journalctl --vacuum-size=1G</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定日志文件保存多久</span></span><br><span class="line">$ sudo journalctl --vacuum-time=1years</span><br></pre></td></tr></table></figure>

<h2 id="8-实战"><a href="#8-实战" class="headerlink" title="8. 实战"></a>8. 实战</h2><h3 id="8-1-开机启动"><a href="#8-1-开机启动" class="headerlink" title="8.1. 开机启动"></a>8.1. 开机启动</h3><p>对于那些支持 Systemd 的软件，安装的时候，会自动在<code>/usr/lib/systemd/system</code>目录添<br>加一个配置文件。</p>
<p>如果你想让该软件开机启动，就执行下面的命令（以<code>httpd.service</code>为例）。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo systemctl <span class="built_in">enable</span> httpd</span><br></pre></td></tr></table></figure>

<p>上面的命令相当于在<code>/etc/systemd/system</code>目录添加一个符号链接，指<br>向<code>/usr/lib/systemd/system</code>里面的<code>httpd.service</code>文件。</p>
<p>这是因为开机时，<code>Systemd</code>只执行<code>/etc/systemd/system</code>目录里面的配置文件。这也意味<br>着，如果把修改后的配置文件放在该目录，就可以达到覆盖原始配置的效果。</p>
<h3 id="8-2-启动服务"><a href="#8-2-启动服务" class="headerlink" title="8.2. 启动服务"></a>8.2. 启动服务</h3><p>设置开机启动以后，软件并不会立即启动，必须等到下一次开机。如果想现在就运行该软件<br>，那么要执行<code>systemctl start</code>命令。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo systemctl start httpd</span><br></pre></td></tr></table></figure>

<p>执行上面的命令以后，有可能启动失败，因此要用<code>systemctl status</code>命令查看一下该服务<br>的状态。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo systemctl status httpd</span><br><span class="line"></span><br><span class="line">httpd.service - The Apache HTTP Server</span><br><span class="line">Loaded: loaded (/usr/lib/systemd/system/httpd.service; enabled)</span><br><span class="line">Active: active (running) since 金 2014-12-05 12:18:22 JST; 7min ago</span><br><span class="line">Main PID: 4349 (httpd)</span><br><span class="line">Status: <span class="string">&quot;Total requests: 1; Current requests/sec: 0; Current traffic:   0 B/sec&quot;</span></span><br><span class="line">CGroup: /system.slice/httpd.service</span><br><span class="line">        ├─4349 /usr/sbin/httpd -DFOREGROUND</span><br><span class="line">        ├─4350 /usr/sbin/httpd -DFOREGROUND</span><br><span class="line">        ├─4351 /usr/sbin/httpd -DFOREGROUND</span><br><span class="line">        ├─4352 /usr/sbin/httpd -DFOREGROUND</span><br><span class="line">        ├─4353 /usr/sbin/httpd -DFOREGROUND</span><br><span class="line">        └─4354 /usr/sbin/httpd -DFOREGROUND</span><br><span class="line"></span><br><span class="line">12月 05 12:18:22 localhost.localdomain systemd[1]: Starting The Apache HTTP Server...</span><br><span class="line">12月 05 12:18:22 localhost.localdomain systemd[1]: Started The Apache HTTP Server.</span><br><span class="line">12月 05 12:22:40 localhost.localdomain systemd[1]: Started The Apache HTTP Server.</span><br></pre></td></tr></table></figure>

<p>上面的输出结果含义如下。</p>
<ul>
<li><code>Loaded</code>行：配置文件的位置，是否设为开机启动</li>
<li><code>Active</code>行：表示正在运行</li>
<li><code>Main PID</code>行：主进程 ID</li>
<li><code>Status</code>行：由应用本身（这里是 httpd ）提供的软件当前状态</li>
<li><code>CGroup</code>块：应用的所有子进程</li>
<li>日志块：应用的日志</li>
</ul>
<h3 id="8-3-停止服务"><a href="#8-3-停止服务" class="headerlink" title="8.3. 停止服务"></a>8.3. 停止服务</h3><p>终止正在运行的服务，需要执行<code>systemctl stop</code>命令。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo systemctl stop httpd.service</span><br></pre></td></tr></table></figure>

<p>有时候，该命令可能没有响应，服务停不下来。这时候就不得不”杀进程”了，向正在运行的<br>进程发出<code>kill</code>信号。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo systemctl <span class="built_in">kill</span> httpd.service</span><br></pre></td></tr></table></figure>

<p>此外，重启服务要执行<code>systemctl restart</code>命令。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo systemctl restart httpd.service</span><br></pre></td></tr></table></figure>

<h3 id="8-4-读懂配置文件"><a href="#8-4-读懂配置文件" class="headerlink" title="8.4. 读懂配置文件"></a>8.4. 读懂配置文件</h3><p>一个服务怎么启动，完全由它的配置文件决定。下面就来看，配置文件有些什么内容。</p>
<p>前面说过，配置文件主要放在<code>/usr/lib/systemd/system</code>目录，也可能<br>在<code>/etc/systemd/system</code>目录。找到配置文件以后，使用文本编辑器打开即可。</p>
<p><code>systemctl cat</code>命令可以用来查看配置文件，下面以<code>sshd.service</code>文件为例，它的作用<br>是启动一个 SSH 服务器，供其他用户以 SSH 方式登录。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ systemctl cat sshd.service</span><br><span class="line"></span><br><span class="line">[Unit]</span><br><span class="line">Description=OpenSSH server daemon</span><br><span class="line">Documentation=man:sshd(8) man:sshd_config(5)</span><br><span class="line">After=network.target sshd-keygen.service</span><br><span class="line">Wants=sshd-keygen.service</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">EnvironmentFile=/etc/sysconfig/sshd</span><br><span class="line">ExecStart=/usr/sbin/sshd -D $OPTIONS</span><br><span class="line">ExecReload=/bin/kill -HUP $MAINPID</span><br><span class="line">Type=simple</span><br><span class="line">KillMode=process</span><br><span class="line">Restart=on-failure</span><br><span class="line">RestartSec=42s</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>

<p>可以看到，配置文件分成几个区块，每个区块包含若干条键值对。</p>
<p>下面依次解释每个区块的内容。</p>
<h3 id="8-5-Unit-区块：启动顺序与依赖关系。"><a href="#8-5-Unit-区块：启动顺序与依赖关系。" class="headerlink" title="8.5. [Unit] 区块：启动顺序与依赖关系。"></a>8.5. [Unit] 区块：启动顺序与依赖关系。</h3><p><code>Unit</code>区块的<code>Description</code>字段给出当前服务的简单描述，<code>Documentation</code>字段给出文档<br>位置。</p>
<p>接下来的设置是启动顺序和依赖关系，这个比较重要。</p>
<blockquote>
<p><code>After</code>字段：表示如果<code>network.target</code>或<code>sshd-keygen.service</code>需要启动，那<br>么<code>sshd.service</code>应该在它们之后启动。</p>
</blockquote>
<p>相应地，还有一个<code>Before</code>字段，定义<code>sshd.service</code>应该在哪些服务之前启动。</p>
<p>注意，<code>After</code>和<code>Before</code>字段只涉及启动顺序，不涉及依赖关系。</p>
<p>举例来说，某 Web 应用需要 postgresql 数据库储存数据。在配置文件中，它只定义要在<br>postgresql 之后启动，而没有定义依赖 postgresql 。上线后，由于某种原因<br>，postgresql 需要重新启动，在停止服务期间，该 Web 应用就会无法建立数据库连接。</p>
<p>设置依赖关系，需要使用<code>Wants</code>字段和<code>Requires</code>字段。</p>
<blockquote>
<p><code>Wants</code>字段：表示<code>sshd.service</code>与<code>sshd-keygen.service</code>之间存在”弱依赖”关系，即<br>如果”sshd-keygen.service”启动失败或停止运行，不影响<code>sshd.service</code>继续执行。</p>
</blockquote>
<p><code>Requires</code>字段则表示”强依赖”关系，即如果该服务启动失败或异常退出，那<br>么<code>sshd.service</code>也必须退出。</p>
<p>注意，<code>Wants</code>字段与<code>Requires</code>字段只涉及依赖关系，与启动顺序无关，默认情况下是同<br>时启动的。</p>
<h3 id="8-6-Service-区块：启动行为"><a href="#8-6-Service-区块：启动行为" class="headerlink" title="8.6. [Service] 区块：启动行为"></a>8.6. [Service] 区块：启动行为</h3><p><code>Service</code>区块定义如何启动当前服务。</p>
<h4 id="8-6-1-启动命令"><a href="#8-6-1-启动命令" class="headerlink" title="8.6.1. 启动命令"></a>8.6.1. 启动命令</h4><p>许多软件都有自己的环境参数文件，该文件可以用<code>EnvironmentFile</code>字段读取。</p>
<blockquote>
<p><code>EnvironmentFile</code>字段：指定当前服务的环境参数文件。该文件内部的<code>key=value</code>键值<br>对，可以用<code>$key</code>的形式，在当前配置文件中获取。</p>
</blockquote>
<p>上面的例子中，sshd 的环境参数文件是<code>/etc/sysconfig/sshd</code>。</p>
<p>配置文件里面最重要的字段是<code>ExecStart</code>。</p>
<blockquote>
<p><code>ExecStart</code>字段：定义启动进程时执行的命令。</p>
</blockquote>
<p>上面的例子中，启动<code>sshd</code>，执行的命令是<code>/usr/sbin/sshd -D $OPTIONS</code>，其中的变<br>量<code>$OPTIONS</code>就来自<code>EnvironmentFile</code>字段指定的环境参数文件。</p>
<p>与之作用相似的，还有如下这些字段。</p>
<ul>
<li><code>ExecReload</code>字段：重启服务时执行的命令</li>
<li><code>ExecStop</code>字段：停止服务时执行的命令</li>
<li><code>ExecStartPre</code>字段：启动服务之前执行的命令</li>
<li><code>ExecStartPost</code>字段：启动服务之后执行的命令</li>
<li><code>ExecStopPost</code>字段：停止服务之后执行的命令</li>
</ul>
<p>请看下面的例子。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Service]</span><br><span class="line">ExecStart=/bin/echo execstart1</span><br><span class="line">ExecStart=</span><br><span class="line">ExecStart=/bin/echo execstart2</span><br><span class="line">ExecStartPost=/bin/echo post1</span><br><span class="line">ExecStartPost=/bin/echo post2</span><br></pre></td></tr></table></figure>

<p>上面这个配置文件，第二行<code>ExecStart</code>设为空值，等于取消了第一行的设置，运行结果如<br>下。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">execstart2</span><br><span class="line">post1</span><br><span class="line">post2</span><br></pre></td></tr></table></figure>

<p>所有的启动设置之前，都可以加上一个连词号（<code>-</code>），表示”抑制错误”，即发生错误的时<br>候，不影响其他命令的执行。比如，<code>EnvironmentFile=-/etc/sysconfig/sshd</code>（注意等号<br>后面的那个连词号），就表示即使<code>/etc/sysconfig/sshd</code>文件不存在，也不会抛出错误。</p>
<h4 id="8-6-2-启动类型"><a href="#8-6-2-启动类型" class="headerlink" title="8.6.2. 启动类型"></a>8.6.2. 启动类型</h4><p><code>Type</code>字段定义启动类型。它可以设置的值如下。</p>
<ul>
<li>simple（默认值）：<code>ExecStart</code>字段启动的进程为主进程</li>
<li>forking：<code>ExecStart</code>字段将以<code>fork()</code>方式启动，此时父进程将会退出，子进程将成<br>为主进程</li>
<li>oneshot：类似于<code>simple</code>，但只执行一次，Systemd 会等它执行完，才启动其他服务</li>
<li>dbus：类似于<code>simple</code>，但会等待 D-Bus 信号后启动</li>
<li>notify：类似于<code>simple</code>，启动结束后会发出通知信号，然后 Systemd 再启动其他服<br>务</li>
<li>idle：类似于<code>simple</code>，但是要等到其他任务都执行完，才会启动该服务。一种使用场<br>合是为让该服务的输出，不与其他服务的输出相混合</li>
</ul>
<p>下面是一个<code>oneshot</code>的例子，笔记本电脑启动时，要把触摸板关掉，配置文件可以这样写<br>。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Switch-off Touchpad</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=oneshot</span><br><span class="line">ExecStart=/usr/bin/touchpad-off</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>

<p>上面的配置文件，启动类型设为<code>oneshot</code>，就表明这个服务只要运行一次就够了，不需要<br>长期运行。</p>
<p>如果关闭以后，将来某个时候还想打开，配置文件修改如下。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Switch-off Touchpad</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=oneshot</span><br><span class="line">ExecStart=/usr/bin/touchpad-off start</span><br><span class="line">ExecStop=/usr/bin/touchpad-off stop</span><br><span class="line">RemainAfterExit=yes</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>

<p>上面配置文件中，<code>RemainAfterExit</code>字段设为<code>yes</code>，表示进程退出以后，服务仍然保持执<br>行。这样的话，一旦使用<code>systemctl stop</code>命令停止服务，<code>ExecStop</code>指定的命令就会执行<br>，从而重新开启触摸板。</p>
<h4 id="8-6-3-重启行为"><a href="#8-6-3-重启行为" class="headerlink" title="8.6.3. 重启行为"></a>8.6.3. 重启行为</h4><p><code>Service</code>区块有一些字段，定义了重启行为。</p>
<blockquote>
<p><code>KillMode</code>字段：定义 Systemd 如何停止 sshd 服务。</p>
</blockquote>
<p>上面这个例子中，将<code>KillMode</code>设为<code>process</code>，表示只停止主进程，不停止任何 sshd 子<br>进程，即子进程打开的 SSH session 仍然保持连接。这个设置不太常见，但对 sshd 很重<br>要，否则你停止服务的时候，会连自己打开的 SSH session 一起杀掉。</p>
<p><code>KillMode</code>字段可以设置的值如下。</p>
<ul>
<li>control-group（默认值）：当前控制组里面的所有子进程，都会被杀掉</li>
<li>process：只杀主进程</li>
<li>mixed：主进程将收到 SIGTERM 信号，子进程收到 SIGKILL 信号</li>
<li>none：没有进程会被杀掉，只是执行服务的 stop 命令。</li>
</ul>
<p>接下来是<code>Restart</code>字段。</p>
<blockquote>
<p><code>Restart</code>字段：定义了 sshd 退出后，Systemd 的重启方式。</p>
</blockquote>
<p>上面的例子中，<code>Restart</code>设为<code>on-failure</code>，表示任何意外的失败，就将重启 sshd。如果<br>sshd 正常停止（比如执行<code>systemctl stop</code>命令），它就不会重启。</p>
<p><code>Restart</code>字段可以设置的值如下。</p>
<ul>
<li>no（默认值）：退出后不会重启</li>
<li>on-success：只有正常退出时（退出状态码为 0），才会重启</li>
<li>on-failure：非正常退出时（退出状态码非 0），包括被信号终止和超时，才会重启</li>
<li>on-abnormal：只有被信号终止和超时，才会重启</li>
<li>on-abort：只有在收到没有捕捉到的信号终止时，才会重启</li>
<li>on-watchdog：超时退出，才会重启</li>
<li>always：不管是什么退出原因，总是重启</li>
</ul>
<p>对于守护进程，推荐设为<code>on-failure</code>。对于那些允许发生错误退出的服务，可以设<br>为<code>on-abnormal</code>。</p>
<p>最后是<code>RestartSec</code>字段。</p>
<blockquote>
<p><code>RestartSec</code>字段：表示 Systemd 重启服务之前，需要等待的秒数。上面的例子设为等<br>待 42 秒。</p>
</blockquote>
<h3 id="8-7-Install-区块"><a href="#8-7-Install-区块" class="headerlink" title="8.7. [Install] 区块"></a>8.7. [Install] 区块</h3><p><code>Install</code>区块，定义如何安装这个配置文件，即怎样做到开机启动。</p>
<p><code>WantedBy</code>字段：表示该服务所在的 Target。</p>
<p><code>Target</code>的含义是服务组，表示一组服务。<code>WantedBy=multi-user.target</code>指的是，sshd<br>所在的 Target 是<code>multi-user.target</code>。</p>
<p>这个设置非常重要，因为执行<code>systemctl enable sshd.service</code>命令时<br>，<code>sshd.service</code>的一个符号链接，就会放在<code>/etc/systemd/system</code>目录下面<br>的<code>multi-user.target.wants</code>子目录之中。</p>
<p>Systemd 有默认的启动 Target。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ systemctl get-default</span><br><span class="line">multi-user.target</span><br></pre></td></tr></table></figure>

<p>上面的结果表示，默认的启动 Target 是<code>multi-user.target</code>。在这个组里的所有服务，<br>都将开机启动。这就是为什么<code>systemctl enable</code>命令能设置开机启动的原因。</p>
<p>使用 Target 的时候，<code>systemctl list-dependencies</code>命令和<code>systemctl isolate</code>命令也<br>很有用。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看 multi-user.target 包含的所有服务</span></span><br><span class="line">$ systemctl list-dependencies multi-user.target</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换到另一个 target</span></span><br><span class="line"><span class="comment"># shutdown.target 就是关机状态</span></span><br><span class="line">$ sudo systemctl isolate shutdown.target</span><br></pre></td></tr></table></figure>

<p>一般来说，常用的 Target 有两个：一个是<code>multi-user.target</code>，表示多用户命令行状态<br>；另一个是<code>graphical.target</code>，表示图形用户状态，它依赖于<code>multi-user.target</code>。官<br>方文档有一张非常清晰的<br><a href="https://www.freedesktop.org/software/systemd/man/bootup.html#System%20Manager%20Bootup">Target 依赖关系图</a>。</p>
<h3 id="8-8-Target-的配置文件"><a href="#8-8-Target-的配置文件" class="headerlink" title="8.8. Target 的配置文件"></a>8.8. Target 的配置文件</h3><p>Target 也有自己的配置文件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ systemctl <span class="built_in">cat</span> multi-user.target</span><br><span class="line"></span><br><span class="line">[Unit]</span><br><span class="line">Description=Multi-User System</span><br><span class="line">Documentation=man:systemd.special(7)</span><br><span class="line">Requires=basic.target</span><br><span class="line">Conflicts=rescue.service rescue.target</span><br><span class="line">After=basic.target rescue.service rescue.target</span><br><span class="line">AllowIsolate=<span class="built_in">yes</span></span><br></pre></td></tr></table></figure>

<p>注意，Target 配置文件里面没有启动命令。</p>
<p>上面输出结果中，主要字段含义如下。</p>
<ul>
<li><code>Requires</code>字段：要求<code>basic.target</code>一起运行。</li>
<li><code>Conflicts</code>字段：冲突字段。如果<code>rescue.service</code>或<code>rescue.target</code>正在运行<br>，<code>multi-user.target</code>就不能运行，反之亦然。</li>
<li><code>After</code>：表示<code>multi-user.target</code>在<code>basic.target</code> 、 <code>rescue.service</code>、<br><code>rescue.target</code>之后启动，如果它们有启动的话。</li>
<li><code>AllowIsolate</code>：允许使用<code>systemctl isolate</code>命令切换到<code>multi-user.target</code>。</li>
</ul>
<h3 id="8-9-修改配置文件后重启"><a href="#8-9-修改配置文件后重启" class="headerlink" title="8.9. 修改配置文件后重启"></a>8.9. 修改配置文件后重启</h3><p>修改配置文件以后，需要重新加载配置文件，然后重新启动相关服务。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 重新加载配置文件</span></span><br><span class="line">$ sudo systemctl daemon-reload</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启相关服务</span></span><br><span class="line">$ sudo systemctl restart foobar</span><br></pre></td></tr></table></figure>

<h2 id="9-参考资料"><a href="#9-参考资料" class="headerlink" title="9. 参考资料"></a>9. 参考资料</h2><ul>
<li><a href="http://www.ruanyifeng.com/blog/2016/03/systemd-tutorial-commands.html">Systemd 入门教程：命令篇</a></li>
<li><a href="hhttp://www.ruanyifeng.com/blog/2016/03/systemd-tutorial-part-two.html">Systemd 入门教程：实战篇</a></li>
</ul>
]]></content>
      <tags>
        <tag>linux</tag>
        <tag>Systemd</tag>
      </tags>
  </entry>
  <entry>
    <title>teamspeak教程</title>
    <url>/2022/02/19/teamspeak/</url>
    <content><![CDATA[<h1 id="teamspeak3-教程-汉化-偷懒整理的链接"><a href="#teamspeak3-教程-汉化-偷懒整理的链接" class="headerlink" title="teamspeak3 教程+汉化 (偷懒整理的链接)"></a>teamspeak3 教程+汉化 (<del>偷懒整理的链接</del>)</h1><h2 id="我的服务器地址"><a href="#我的服务器地址" class="headerlink" title="我的服务器地址"></a>我的服务器地址</h2><p><code>ts3.saint1337.top</code></p>
<p><a href="ts3server://ts3.saint1337.top/">点我一键加入服务器(确保已经正确安装客户端)</a></p>
<h2 id="官网下载链接"><a href="#官网下载链接" class="headerlink" title="官网下载链接"></a>官网下载链接</h2><p><a href="https://www.teamspeak.com/zh-CN/downloads/">https://www.teamspeak.com/zh-CN/downloads/</a></p>
<p><img src="https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting/img/20220219151012.png"></p>
<h2 id="整合包链接"><a href="#整合包链接" class="headerlink" title="整合包链接"></a>整合包链接</h2><p><a href="http://mtw.so/60CuQh">http://mtw.so/60CuQh</a> 访问密码:<code>woshishabi</code></p>
<h2 id="汉化插件链接"><a href="#汉化插件链接" class="headerlink" title="汉化插件链接"></a>汉化插件链接</h2><ul>
<li><a href="https://www.wevg.org/">Vigorous Pro</a>提供的中文语言包</li>
</ul>
<p><a href="https://ts.wevg.org/translation-zh-CN/">https://ts.wevg.org/translation-zh-CN/</a></p>
<p><img src="https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting/img/20220219153410.png"></p>
<ul>
<li><a href="https://blog.acesheep.com/index.php/archives/1242/">AceSheep</a>提供的中文语言包 (我现在用的)</li>
</ul>
<p><a href="https://blog.acesheep.com/index.php/archives/1242/">https://blog.acesheep.com/index.php/archives/1242/</a></p>
<p><img src="https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting/img/20220219154502.png"></p>
<h2 id="使用教程"><a href="#使用教程" class="headerlink" title="使用教程"></a>使用教程</h2><ul>
<li><a href="https://www.wevg.org/">Vigorous Pro</a>给的教程很全面 推荐参考</li>
</ul>
<p>​       <a href="https://www.wevg.org/archives/how-to-use-teamspeak3/">https://www.wevg.org/archives/how-to-use-teamspeak3/</a></p>
<ul>
<li><p><strong>不要使用Overwolf 会有性能问题</strong></p>
</li>
<li><p><strong>myTeamSpeak登录会有网路问题 推荐使用本地身份保存信息</strong></p>
</li>
</ul>
<h3 id="1-工具–身份"><a href="#1-工具–身份" class="headerlink" title="1.工具–身份"></a>1.工具–身份</h3><p>  <img src="https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting/img/20220219160026.png"></p>
<h3 id="2-右键你想要导出的身份-右键空白也可以创建身份-重命名后保存"><a href="#2-右键你想要导出的身份-右键空白也可以创建身份-重命名后保存" class="headerlink" title="2.右键你想要导出的身份(右键空白也可以创建身份) 重命名后保存"></a>2.右键你想要导出的身份(右键空白也可以创建身份) 重命名后保存</h3><p><img src="https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting/img/20220219155624.png"></p>
<p><img src="https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting/img/20220219155643.png"></p>
<h3 id="3-命名导出的ini配置文件并保存好"><a href="#3-命名导出的ini配置文件并保存好" class="headerlink" title="3.命名导出的ini配置文件并保存好"></a>3.命名导出的ini配置文件并保存好</h3><p><img src="https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting/img/20220219155941.png"></p>
<h2 id="其他功能请自行探索-使用愉快-以上"><a href="#其他功能请自行探索-使用愉快-以上" class="headerlink" title="其他功能请自行探索 使用愉快 以上"></a>其他功能请自行探索 使用愉快 以上</h2>]]></content>
      <tags>
        <tag>teamspeak</tag>
        <tag>teamspeak3</tag>
      </tags>
  </entry>
  <entry>
    <title>test img</title>
    <url>/2022/01/10/test%20img/</url>
    <content><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting/img/acg.gy_36.jpg"><br><img src="https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting/img/acg.gy_01.jpg"><br><img src="https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting/img/acg.gy_02.jpg"><br><img src="https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting/img/acg.gy_03.jpg"><br><img src="https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting/img/acg.gy_07.jpg"><br><img src="https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting/img/acg.gy_35.jpg"><br><img src="https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting/img/acg.gy_34.jpg"><br><img src="https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting/img/acg.gy_33.jpg"><br><img src="https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting/img/acg.gy_32.jpg"><br><img src="https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting/img/acg.gy_31.jpg"><br><img src="https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting/img/acg.gy_30.jpg"><br><img src="https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting/img/acg.gy_29.jpg"><br><img src="https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting/img/acg.gy_28.jpg"><br><img src="https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting/img/acg.gy_27.jpg"><br><img src="https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting/img/acg.gy_26.jpg"><br><img src="https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting/img/acg.gy_25.jpg"><br><img src="https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting/img/acg.gy_24.jpg"><br><img src="https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting/img/acg.gy_23.jpg"><br><img src="https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting/img/acg.gy_22.jpg"><br><img src="https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting/img/acg.gy_21.jpg"><br><img src="https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting/img/acg.gy_20.jpg"><br><img src="https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting/img/acg.gy_19.jpg"><br><img src="https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting/img/acg.gy_18.jpg"><br><img src="https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting/img/acg.gy_17.jpg"><br><img src="https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting/img/acg.gy_16.jpg"><br><img src="https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting/img/acg.gy_15.jpg"><br><img src="https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting/img/acg.gy_14.jpg"><br><img src="https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting/img/acg.gy_13.jpg"><br><img src="https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting/img/acg.gy_12.jpg"><br><img src="https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting/img/acg.gy_11.jpg"><br><img src="https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting/img/acg.gy_10.jpg"><br><img src="https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting/img/acg.gy_09.jpg"><br><img src="https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting/img/acg.gy_08.jpg"><br><img src="https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting/img/acg.gy_06.jpg"><br><img src="https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting/img/acg.gy_05.jpg"><br><img src="https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting/img/acg.gy_04.jpg"></p>
]]></content>
  </entry>
  <entry>
    <title>Vim 应用</title>
    <url>/2022/02/20/vim/</url>
    <content><![CDATA[<h1 id="Vim-应用"><a href="#Vim-应用" class="headerlink" title="Vim 应用"></a>Vim 应用</h1><h2 id="1-概念"><a href="#1-概念" class="headerlink" title="1. 概念"></a>1. 概念</h2><h3 id="1-1-什么是-vim"><a href="#1-1-什么是-vim" class="headerlink" title="1.1. 什么是 vim"></a>1.1. 什么是 vim</h3><p>Vim 是从 vi 发展出来的一个文本编辑器。代码补完、编译及错误跳转等方便编程的功能特别丰富，在程序员中被广泛使用。和 Emacs 并列成为类 Unix 系统用户最喜欢的编辑器。</p>
<h3 id="1-2-Vim-的模式"><a href="#1-2-Vim-的模式" class="headerlink" title="1.2. Vim 的模式"></a>1.2. Vim 的模式</h3><p>基本上 vi&#x2F;vim 共分为三种模式，分别是<strong>命令模式（Command mode）</strong>，<strong>插入模式（Insert mode）</strong>和<strong>底线命令模式（Last line mode）</strong>。</p>
<h4 id="1-2-1-命令模式"><a href="#1-2-1-命令模式" class="headerlink" title="1.2.1. 命令模式"></a>1.2.1. 命令模式</h4><p><strong>用户刚刚启动 vi&#x2F;vim，便进入了命令模式。</strong></p>
<p>此状态下敲击键盘动作会被 Vim 识别为命令，而非输入字符。</p>
<h4 id="1-2-2-插入模式"><a href="#1-2-2-插入模式" class="headerlink" title="1.2.2. 插入模式"></a>1.2.2. 插入模式</h4><p><strong>在命令模式下按下 <code>i</code> 就进入了输入模式。</strong></p>
<p>在输入模式下，你可以输入文本内容。</p>
<h4 id="1-2-3-底线命令模式"><a href="#1-2-3-底线命令模式" class="headerlink" title="1.2.3. 底线命令模式"></a>1.2.3. 底线命令模式</h4><p><strong>在命令模式下按下 <code>:</code>（英文冒号）就进入了底线命令模式。</strong></p>
<p>底线命令模式可以输入单个或多个字符的命令，可用的命令非常多。</p>
<h2 id="2-Vim-渐进学习"><a href="#2-Vim-渐进学习" class="headerlink" title="2. Vim 渐进学习"></a>2. Vim 渐进学习</h2><h3 id="2-1-存活"><a href="#2-1-存活" class="headerlink" title="2.1. 存活"></a>2.1. 存活</h3><ol>
<li>安装 <a href="http://www.vim.org/">vim</a></li>
<li>启动 vim</li>
<li><strong>什么也别干！</strong>请先阅读</li>
</ol>
<p>当你安装好一个编辑器后，你一定会想在其中输入点什么东西，然后看看这个编辑器是什么样子。但 vim 不是这样的，请按照下面的命令操作：</p>
<ul>
<li>启 动 Vim 后，vim 在 <em>Normal</em> 模式下。</li>
<li>让我们进入 <em>Insert</em> 模式，请按下键 i 。(注：你会看到 vim 左下角有一个–insert–字样，表示，你可以以插入的方式输入了）</li>
<li>此时，你可以输入文本了，就像你用“记事本”一样。</li>
<li>如果你想返回 <em>Normal</em> 模式，请按 <code>ESC</code> 键。</li>
</ul>
<p>现在，你知道如何在 <em>Insert</em> 和 <em>Normal</em> 模式下切换了。下面是一些命令，可以让你在 <em>Normal</em> 模式下幸存下来：</p>
<blockquote>
<ul>
<li><code>i</code> → <em>Insert</em> 模式，按 <code>ESC</code> 回到 <em>Normal</em> 模式.</li>
<li><code>x</code> → 删当前光标所在的一个字符。</li>
<li><code>:wq</code> → 存盘 + 退出 (<code>:w</code> 存盘, <code>:q</code> 退出) （注：:w 后可以跟文件名）</li>
<li><code>dd</code> → 删除当前行，并把删除的行存到剪贴板里</li>
<li><code>p</code> → 粘贴剪贴板</li>
</ul>
<p><strong>推荐</strong></p>
<ul>
<li><code>hjkl</code> (强例推荐使用其移动光标，但不必需) → 你也可以使用光标键 (←↓↑→). 注: <code>j</code> 就像下箭头。</li>
<li><code>:help &lt;command&gt;</code> → 显示相关命令的帮助。你也可以就输入 <code>:help</code> 而不跟命令。（注：退出帮助需要输入:q）</li>
</ul>
</blockquote>
<p>你能在 vim 幸存下来只需要上述的那 5 个命令，你就可以编辑文本了，你一定要把这些命令练成一种下意识的状态。于是你就可以开始进阶到第二级了。</p>
<p>当是，在你进入第二级时，需要再说一下 <em>Normal</em> 模式。在一般的编辑器下，当你需要 copy 一段文字的时候，你需要使用 <code>Ctrl</code> 键，比如：<code>Ctrl-C</code>。也就是说，<code>Ctrl</code> 键就好像功能键一样，当你按下了功能键 <code>Ctrl</code> 后，C 就不在是 C 了，而且就是一个命令或是一个快键键了，<strong>在 vim 的 Normal 模式下，所有的键都是功能键</strong>。这个你需要知道。</p>
<blockquote>
<p><strong>标记</strong></p>
<ul>
<li>下面的文字中，如果是 <code>Ctrl-λ</code>我会写成 <code>&lt;C-λ&gt;</code>.</li>
<li>以 <code>:</code> 开始的命令你需要输入 <code>&lt;enter&gt;</code>回车，例如 — 如果我写成 <code>:q</code> 也就是说你要输入 <code>:q&lt;enter&gt;</code>.</li>
</ul>
</blockquote>
<h3 id="2-2-感觉良好"><a href="#2-2-感觉良好" class="headerlink" title="2.2. 感觉良好"></a>2.2. 感觉良好</h3><p>上面的那些命令只能让你存活下来，现在是时候学习一些更多的命令了，下面是我的建议：（注：所有的命令都需要在 Normal 模式下使用，如果你不知道现在在什么样的模式，你就狂按几次 ESC 键）</p>
<ol>
<li><p>各种插入模式</p>
<blockquote>
<ul>
<li><code>a</code> → 在光标后插入</li>
<li><code>o</code> → 在当前行后插入一个新行</li>
<li><code>O</code> → 在当前行前插入一个新行</li>
<li><code>cw</code> → 替换从光标所在位置后到一个单词结尾的字符</li>
</ul>
</blockquote>
</li>
<li><p>简单的移动光标</p>
<blockquote>
<ul>
<li><code>0</code> → 数字零，到行头</li>
<li><code>^</code> → 到本行第一个不是 blank 字符的位置（所谓 blank 字符就是空格，tab，换行，回车等）</li>
<li><code>$</code> → 到本行行尾</li>
<li><code>g_</code> → 到本行最后一个不是 blank 字符的位置。</li>
<li><code>/pattern</code> → 搜索 <code>pattern</code> 的字符串（注：如果搜索出多个匹配，可按 n 键到下一个）</li>
</ul>
</blockquote>
</li>
<li><p>拷贝&#x2F;粘贴</p>
<p>（注：p&#x2F;P 都可以，p 是表示在当前位置之后，P 表示在当前位置之前）</p>
<blockquote>
<ul>
<li><code>P</code> → 粘贴</li>
<li><code>yy</code> → 拷贝当前行当行于 <code>ddP</code></li>
</ul>
</blockquote>
</li>
<li><p>Undo&#x2F;Redo</p>
<blockquote>
<ul>
<li><code>u</code> → undo</li>
<li><code>&lt;C-r&gt;</code> → redo</li>
</ul>
</blockquote>
</li>
<li><p>打开&#x2F;保存&#x2F;退出&#x2F;改变文件</p>
<p>(Buffer)</p>
<blockquote>
<ul>
<li><code>:e &lt;path/to/file&gt;</code> → 打开一个文件</li>
<li><code>:w</code> → 存盘</li>
<li><code>:saveas &lt;path/to/file&gt;</code> → 另存为 <code>&lt;path/to/file&gt;</code></li>
<li><code>:x</code>， <code>ZZ</code> 或 <code>:wq</code> → 保存并退出 (<code>:x</code> 表示仅在需要时保存，ZZ 不需要输入冒号并回车)</li>
<li><code>:q!</code> → 退出不保存 <code>:qa!</code> 强行退出所有的正在编辑的文件，就算别的文件有更改。</li>
<li><code>:bn</code> 和 <code>:bp</code> → 你可以同时打开很多文件，使用这两个命令来切换下一个或上一个文件。（注：我喜欢使用:n 到下一个文件）</li>
</ul>
</blockquote>
</li>
</ol>
<p>花点时间熟悉一下上面的命令，一旦你掌握他们了，你就几乎可以干其它编辑器都能干的事了。但是到现在为止，你还是觉得使用 vim 还是有点笨拙，不过没关系，你可以进阶到第三级了。</p>
<h3 id="2-3-更好，更强，更快"><a href="#2-3-更好，更强，更快" class="headerlink" title="2.3. 更好，更强，更快"></a>2.3. 更好，更强，更快</h3><p>先恭喜你！你干的很不错。我们可以开始一些更为有趣的事了。在第三级，我们只谈那些和 vi 可以兼容的命令。</p>
<h4 id="2-3-1-更好"><a href="#2-3-1-更好" class="headerlink" title="2.3.1. 更好"></a>2.3.1. 更好</h4><p>下面，让我们看一下 vim 是怎么重复自己的：1515G</p>
<ol>
<li><code>.</code> → (小数点) 可以重复上一次的命令</li>
<li><code>N&lt;command&gt;</code> → 重复某个命令 N 次</li>
</ol>
<p>下面是一个示例，找开一个文件你可以试试下面的命令：</p>
<blockquote>
<ul>
<li><code>2dd</code> → 删除 2 行</li>
<li><code>3p</code> → 粘贴文本 3 次</li>
<li><code>100idesu [ESC]</code> → 会写下 “desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu desu “</li>
<li><code>.</code> → 重复上一个命令—— 100 “desu “.</li>
<li><code>3.</code> → 重复 3 次 “desu” (注意：不是 300，你看，VIM 多聪明啊).</li>
</ul>
</blockquote>
<h4 id="2-3-2-更强"><a href="#2-3-2-更强" class="headerlink" title="2.3.2. 更强"></a>2.3.2. 更强</h4><p>你要让你的光标移动更有效率，你一定要了解下面的这些命令，<strong>千万别跳过</strong>。</p>
<ol>
<li><p>N<code>G</code> → 到第 N 行 （注：注意命令中的 G 是大写的，另我一般使用 : N 到第 N 行，如 :137 到第 137 行）</p>
</li>
<li><p><code>gg</code> → 到第一行。（注：相当于 1G，或 :1）</p>
</li>
<li><p><code>G</code> → 到最后一行。</p>
</li>
<li><p>按单词移动：</p>
<blockquote>
<ol>
<li><code>w</code> → 到下一个单词的开头。</li>
<li><code>e</code> → 到下一个单词的结尾。</li>
</ol>
<p>&gt; 如果你认为单词是由默认方式，那么就用小写的 e 和 w。默认上来说，一个单词由字母，数字和下划线组成（注：程序变量）</p>
<p>&gt; 如果你认为单词是由 blank 字符分隔符，那么你需要使用大写的 E 和 W。（注：程序语句）</p>
<p><img src="http://upload-images.jianshu.io/upload_images/3101171-46f752c581d79057.jpg" alt="img"></p>
</blockquote>
</li>
</ol>
<p>下面，让我来说说最强的光标移动：</p>
<blockquote>
<ul>
<li><code>%</code> : 匹配括号移动，包括 <code>(</code>, <code>&#123;</code>, <code>[</code>. （注：你需要把光标先移到括号上）</li>
<li><code>*</code> 和 <code>#</code>: 匹配光标当前所在的单词，移动光标到下一个（或上一个）匹配单词（*是下一个，#是上一个）</li>
</ul>
</blockquote>
<p>相信我，上面这三个命令对程序员来说是相当强大的。</p>
<h4 id="2-3-3-更快"><a href="#2-3-3-更快" class="headerlink" title="2.3.3. 更快"></a>2.3.3. 更快</h4><p>你一定要记住光标的移动，因为很多命令都可以和这些移动光标的命令连动。很多命令都可以如下来干：</p>
<p><code>&lt;start position&gt;&lt;command&gt;&lt;end position&gt;</code></p>
<p>例如 <code>0y$</code> 命令意味着：</p>
<ul>
<li><code>0</code> → 先到行头</li>
<li><code>y</code> → 从这里开始拷贝</li>
<li><code>$</code> → 拷贝到本行最后一个字符</li>
</ul>
<p>你可可以输入 <code>ye</code>，从当前位置拷贝到本单词的最后一个字符。</p>
<p>你也可以输入 <code>y2/foo</code> 来拷贝 2 个 “foo” 之间的字符串。</p>
<p>还有很多时间并不一定你就一定要按 y 才会拷贝，下面的命令也会被拷贝：</p>
<ul>
<li><code>d</code> (删除 )</li>
<li><code>v</code> (可视化的选择)</li>
<li><code>gU</code> (变大写)</li>
<li><code>gu</code> (变小写)</li>
<li>等等</li>
</ul>
<p>（注：可视化选择是一个很有意思的命令，你可以先按 v，然后移动光标，你就会看到文本被选择，然后，你可能 d，也可 y，也可以变大写等）</p>
<h3 id="2-4-Vim-超能力"><a href="#2-4-Vim-超能力" class="headerlink" title="2.4. Vim 超能力"></a>2.4. Vim 超能力</h3><p>你只需要掌握前面的命令，你就可以很舒服的使用 VIM 了。但是，现在，我们向你介绍的是 VIM 杀手级的功能。下面这些功能是我只用 vim 的原因。</p>
<h4 id="2-4-1-在当前行上移动光标-0-fFtT"><a href="#2-4-1-在当前行上移动光标-0-fFtT" class="headerlink" title="2.4.1. 在当前行上移动光标: 0 ^ ####fFtT,&#96;&#96;;&#96;"></a>2.4.1. 在当前行上移动光标: <code>0</code> <code>^</code> <code>####</code>f<code>F</code>t<code>T</code>,&#96;&#96;;&#96;</h4><blockquote>
<ul>
<li><code>0</code> → 到行头</li>
<li><code>^</code> → 到本行的第一个非 blank 字符</li>
<li><code>$</code> → 到行尾</li>
<li><code>g_</code> → 到本行最后一个不是 blank 字符的位置。</li>
<li><code>fa</code> → 到下一个为 a 的字符处，你也可以 fs 到下一个为 s 的字符。</li>
<li><code>t,</code> → 到逗号前的第一个字符。逗号可以变成其它字符。</li>
<li><code>3fa</code> → 在当前行查找第三个出现的 a。</li>
<li><code>F</code> 和 <code>T</code> → 和 <code>f</code> 和 <code>t</code> 一样，只不过是相反方向。<br><img src="http://upload-images.jianshu.io/upload_images/3101171-00835b8316330c58.jpg" alt="img"></li>
</ul>
</blockquote>
<p>还有一个很有用的命令是 <code>dt&quot;</code> → 删除所有的内容，直到遇到双引号—— <code>&quot;。</code></p>
<h4 id="2-4-2-区域选择-a-或-i"><a href="#2-4-2-区域选择-a-或-i" class="headerlink" title="2.4.2. 区域选择 &lt;action&gt;a&lt;object&gt; 或 &lt;action&gt;i&lt;object&gt;"></a>2.4.2. 区域选择 <code>&lt;action&gt;a&lt;object&gt;</code> 或 <code>&lt;action&gt;i&lt;object&gt;</code></h4><p>在 visual 模式下，这些命令很强大，其命令格式为</p>
<p><code>&lt;action&gt;a&lt;object&gt;</code> 和 <code>&lt;action&gt;i&lt;object&gt;</code></p>
<ul>
<li>action 可以是任何的命令，如 <code>d</code> (删除), <code>y</code> (拷贝), <code>v</code> (可以视模式选择)。</li>
<li>object 可能是： <code>w</code> 一个单词， <code>W</code> 一个以空格为分隔的单词， <code>s</code> 一个句字， <code>p</code> 一个段落。也可以是一个特别的字符：<code>&quot;、</code> <code>&#39;、</code> <code>)、</code> <code>&#125;、</code> <code>]。</code></li>
</ul>
<p>假设你有一个字符串 <code>(map (+) (&quot;foo&quot;))</code>.而光标键在第一个 <code>o</code>的位置。</p>
<blockquote>
<ul>
<li><code>vi&quot;</code> → 会选择 <code>foo</code>.</li>
<li><code>va&quot;</code> → 会选择 <code>&quot;foo&quot;</code>.</li>
<li><code>vi)</code> → 会选择 <code>&quot;foo&quot;</code>.</li>
<li><code>va)</code> → 会选择<code>(&quot;foo&quot;)</code>.</li>
<li><code>v2i)</code> → 会选择 <code>map (+) (&quot;foo&quot;)</code></li>
<li><code>v2a)</code> → 会选择 <code>(map (+) (&quot;foo&quot;))</code></li>
</ul>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/3101171-0b109d66a6111c83.png" alt="img"></p>
<h4 id="2-4-3-块操作"><a href="#2-4-3-块操作" class="headerlink" title="2.4.3. 块操作: &lt;C-v&gt;"></a>2.4.3. 块操作: <code>&lt;C-v&gt;</code></h4><p>块操作，典型的操作： <code>0 &lt;C-v&gt; &lt;C-d&gt; I-- [ESC]</code></p>
<ul>
<li><code>^</code> → 到行头</li>
<li><code>&lt;C-v&gt;</code> → 开始块操作</li>
<li><code>&lt;C-d&gt;</code> → 向下移动 (你也可以使用 hjkl 来移动光标，或是使用%，或是别的)</li>
<li><code>I-- [ESC]</code> → I 是插入，插入“<code>--</code>”，按 ESC 键来为每一行生效。</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/3101171-8b093a0f65707949.gif?imageMogr2/auto-orient/strip" alt="img"></p>
<p>在 Windows 下的 vim，你需要使用 <code>&lt;C-q&gt;</code> 而不是 <code>&lt;C-v&gt;</code> ，<code>&lt;C-v&gt;</code> 是拷贝剪贴板。</p>
<h4 id="2-4-4-自动提示：-和"><a href="#2-4-4-自动提示：-和" class="headerlink" title="2.4.4. 自动提示： &lt;C-n&gt; 和 &lt;C-p&gt;"></a>2.4.4. 自动提示： <code>&lt;C-n&gt;</code> 和 <code>&lt;C-p&gt;</code></h4><p>在 Insert 模式下，你可以输入一个词的开头，然后按 <code>&lt;C-p&gt;或是&lt;C-n&gt;，自动补齐功能就出现了……</code></p>
<p><img src="http://upload-images.jianshu.io/upload_images/3101171-e2ae877e67880ff7.gif?imageMogr2/auto-orient/strip" alt="img"></p>
<h4 id="2-4-5-宏录制：-qa-操作序列-q-a"><a href="#2-4-5-宏录制：-qa-操作序列-q-a" class="headerlink" title="2.4.5. 宏录制： qa 操作序列 q, @a, @@"></a>2.4.5. 宏录制： <code>qa</code> 操作序列 <code>q</code>, <code>@a</code>, <code>@@</code></h4><ul>
<li><code>qa</code> 把你的操作记录在寄存器 <code>a。</code></li>
<li>于是 <code>@a</code> 会 replay 被录制的宏。</li>
<li><code>@@</code> 是一个快捷键用来 replay 最新录制的宏。</li>
</ul>
<blockquote>
<p><strong>示例</strong></p>
<p>在一个只有一行且这一行只有“1”的文本中，键入如下命令：</p>
<ul>
<li><pre><code>qaYp&lt;C-a&gt;q
</code></pre>
<p>→</p>
<ul>
<li><code>qa</code> 开始录制</li>
<li><code>Yp</code> 复制行.</li>
<li><code>&lt;C-a&gt;</code> 增加 1.</li>
<li><code>q</code> 停止录制.</li>
</ul>
</li>
<li><p><code>@a</code> → 在 1 下面写下 2</p>
</li>
<li><p><code>@@</code> → 在 2 正面写下 3</p>
</li>
<li><p>现在做 <code>100@@</code> 会创建新的 100 行，并把数据增加到 103.</p>
</li>
</ul>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/3101171-f1889f8bca723964.gif?imageMogr2/auto-orient/strip" alt="img"></p>
<h4 id="2-4-6-可视化选择：-v-V"><a href="#2-4-6-可视化选择：-v-V" class="headerlink" title="2.4.6. 可视化选择： v,V,&lt;C-v&gt;"></a>2.4.6. 可视化选择： <code>v</code>,<code>V</code>,<code>&lt;C-v&gt;</code></h4><p>前面，我们看到了 <code>&lt;C-v&gt;</code>的示例 （在 Windows 下应该是<C-q>），我们可以使用 <code>v</code> 和 <code>V</code>。一但被选好了，你可以做下面的事：</p>
<ul>
<li><code>J</code> → 把所有的行连接起来（变成一行）</li>
<li><code>&lt;</code> 或 <code>&gt;</code> → 左右缩进</li>
<li><code>=</code> → 自动给缩进 （注：这个功能相当强大，我太喜欢了）</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/3101171-fe1e19983fca213f.gif?imageMogr2/auto-orient/strip" alt="img"></p>
<p>在所有被选择的行后加上点东西：</p>
<ul>
<li><code>&lt;C-v&gt;</code></li>
<li>选中相关的行 (可使用 <code>j</code> 或 <code>&lt;C-d&gt;</code> 或是 <code>/pattern</code> 或是 <code>%</code> 等……)</li>
<li><code>$</code> 到行最后</li>
<li><code>A</code>, 输入字符串，按 <code>ESC。</code></li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/3101171-b192601247334c4e.gif?imageMogr2/auto-orient/strip" alt="img"></p>
<h4 id="2-4-7-分屏-split-和-vsplit"><a href="#2-4-7-分屏-split-和-vsplit" class="headerlink" title="2.4.7. 分屏: :split 和 vsplit."></a>2.4.7. 分屏: <code>:split</code> 和 <code>vsplit</code>.</h4><p>下面是主要的命令，你可以使用 VIM 的帮助 <code>:help split</code>. 你可以参考本站以前的一篇文章<a href="https://coolshell.cn/articles/1679.html">VIM 分屏</a>。</p>
<blockquote>
<ul>
<li><code>:split</code> → 创建分屏 (<code>:vsplit</code>创建垂直分屏)</li>
<li><code>&lt;C-w&gt;&lt;dir&gt;</code> : dir 就是方向，可以是 <code>hjkl</code> 或是 ←↓↑→ 中的一个，其用来切换分屏。</li>
<li><code>&lt;C-w&gt;_</code> (或 <code>&lt;C-w&gt;|</code>) : 最大化尺寸 (<C-w>| 垂直分屏)</li>
<li><code>&lt;C-w&gt;+</code> (或 <code>&lt;C-w&gt;-</code>) : 增加尺寸</li>
</ul>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/3101171-f329d01e299cb366.gif?imageMogr2/auto-orient/strip" alt="img"></p>
<h2 id="3-Vim-Cheat-Sheet"><a href="#3-Vim-Cheat-Sheet" class="headerlink" title="3. Vim Cheat Sheet"></a>3. Vim Cheat Sheet</h2><blockquote>
<p>本节内容的原文地址：<a href="http://cenalulu.github.io/linux/all-vim-cheatsheat/">http://cenalulu.github.io/linux/all-vim-cheatsheat/</a></p>
</blockquote>
<h3 id="3-1-经典版"><a href="#3-1-经典版" class="headerlink" title="3.1. 经典版"></a>3.1. 经典版</h3><p>下面这个键位图应该是大家最常看见的经典版了。其实这个版本是一系列的入门教程键位图的组合结果。要查看不同编辑模式下的键位图，可以看<a href="http://www.viemu.com/a_vi_vim_graphical_cheat_sheet_tutorial.html">这里打包下载</a></p>
<p>此外，<a href="http://blog.ngedit.com/vi-vim-cheat-sheet-sch.gif">这里</a>还有简体中文版。</p>
<p><img src="https://raw.githubusercontent.com/dunwu/images/dev/cs/os/linux/vim/vim-cheat-sheet.png" alt="img"></p>
<h3 id="3-2-入门版"><a href="#3-2-入门版" class="headerlink" title="3.2. 入门版"></a>3.2. 入门版</h3><p>基本操作的入门版。<a href="https://github.com/ahrencode/Miscellaneous">原版出处</a>还有 keynote 版本可供 DIY 以及其他相关有用的 cheatsheet。</p>
<p><img src="https://raw.githubusercontent.com/dunwu/images/dev/cs/os/linux/vim/basic-vim-cheat-sheet.png" alt="img"></p>
<h3 id="3-3-进阶版"><a href="#3-3-进阶版" class="headerlink" title="3.3. 进阶版"></a>3.3. 进阶版</h3><p>下图是 300DPI 的超清大图，另外<a href="http://michael.peopleofhonoronly.com/vim/">查看原文</a>还有更多版本：黑白，低分辨率，色盲等</p>
<p><img src="https://raw.githubusercontent.com/dunwu/images/dev/cs/os/linux/vim/vim-cheat-sheet-for-programmers.png" alt="img"></p>
<h3 id="3-4-增强版"><a href="#3-4-增强版" class="headerlink" title="3.4. 增强版"></a>3.4. 增强版</h3><p>下图是一个更新时间较新的现代版，含有的信息也更丰富。<a href="http://vimcheatsheet.com/">原文链接</a></p>
<p><img src="https://raw.githubusercontent.com/dunwu/images/dev/cs/os/linux/vim/vim-cheat-sheet-02.png" alt="img"></p>
<h3 id="3-5-文字版"><a href="#3-5-文字版" class="headerlink" title="3.5. 文字版"></a>3.5. 文字版</h3><p><a href="http://tnerual.eriogerg.free.fr/vimqrc.pdf">原文链接</a></p>
<p><img src="https://raw.githubusercontent.com/dunwu/images/dev/cs/os/linux/vim/vim-cheat-sheet-text-01.png" alt="img"></p>
<p><img src="https://raw.githubusercontent.com/dunwu/images/dev/cs/os/linux/vim/vim-cheat-sheet-text-02.png" alt="img"></p>
<h2 id="4-资料"><a href="#4-资料" class="headerlink" title="4. 资料"></a>4. 资料</h2><ul>
<li><a href="https://coolshell.cn/articles/5426.html">简明 VIM 练级攻略</a> ，Vim 渐进学习内容来源于这篇文章，作为 Vim 新手，我觉得入门效果很好。</li>
<li><a href="https://vim.sourceforge.io/docs.php">vim 官方文档</a></li>
<li><a href="https://github.com/mhinz/vim-galore">vim-galore</a></li>
<li><a href="http://www.jianshu.com/p/bcbe916f97e1">Vim 入门基础</a></li>
</ul>
]]></content>
      <tags>
        <tag>linux</tag>
        <tag>Vim</tag>
      </tags>
  </entry>
  <entry>
    <title>解决 wg-quick 报错resolvconf: command not found</title>
    <url>/2023/11/28/wg-quick%E6%8A%A5%E9%94%99%E6%89%BE%E4%B8%8D%E5%88%B0resolvconf/</url>
    <content><![CDATA[<h2 id="当前环境"><a href="#当前环境" class="headerlink" title="当前环境"></a>当前环境</h2><ul>
<li><code>Linux armbian 5.15.139-ophub #1 SMP PREEMPT Mon Nov 20 22:33:18 EST 2023 aarch64 aarch64 aarch64 GNU/Linux                                </code> </li>
<li>使用的软件源 <code>Ubuntu Ports 23.04 luner</code></li>
</ul>
<h2 id="问题详情"><a href="#问题详情" class="headerlink" title="问题详情"></a>问题详情</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@armbian:/etc/wireguard# sudo wg-quick up wg0</span><br><span class="line"><span class="meta prompt_">[#</span><span class="language-bash">] ip <span class="built_in">link</span> add wg0 <span class="built_in">type</span> wireguard</span></span><br><span class="line"><span class="meta prompt_">[#</span><span class="language-bash">] wg setconf wg0 /dev/fd/63</span></span><br><span class="line"><span class="meta prompt_">[#</span><span class="language-bash">] ip -4 address add 10.0.8.9/24 dev wg0</span></span><br><span class="line"><span class="meta prompt_">[#</span><span class="language-bash">] ip <span class="built_in">link</span> <span class="built_in">set</span> mtu 1420 up dev wg0</span></span><br><span class="line"><span class="meta prompt_">[#</span><span class="language-bash">] resolvconf -a wg0 -m 0 -x</span></span><br><span class="line">/usr/bin/wg-quick: line 32: resolvconf: command not found</span><br><span class="line"><span class="meta prompt_">[#</span><span class="language-bash">] ip <span class="built_in">link</span> delete dev wg0</span></span><br></pre></td></tr></table></figure>



<h2 id="解决步骤"><a href="#解决步骤" class="headerlink" title="解决步骤"></a>解决步骤</h2><p>问题是由无法调用 <code>resolvconf</code>命令产生的 我们通过直接安装来解决 <strong>不同发行版的软件包可能不同</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@armbian:/etc/wireguard# sudo apt install openresolv</span><br><span class="line">Reading package lists... Done</span><br><span class="line">Building dependency tree... Done</span><br><span class="line">Reading state information... Done</span><br><span class="line">Package openresolv is not available, but is referred to by another package.</span><br><span class="line">This may mean that the package is missing, has been obsoleted, or</span><br><span class="line">is only available from another source</span><br><span class="line"></span><br><span class="line">E: Package &#x27;openresolv&#x27; has no installation candidate</span><br><span class="line">root@armbian:/etc/wireguard# resolvconf</span><br><span class="line">Command &#x27;resolvconf&#x27; not found, but can be installed with:</span><br><span class="line">apt install systemd-resolved</span><br><span class="line">root@armbian:/etc/wireguard# apt install systemd-resolved</span><br><span class="line"></span><br><span class="line">...succeed</span><br><span class="line"></span><br><span class="line">root@armbian:/etc/wireguard# systemctl start wg-quick@wg0</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>wsl2+宿主机v2rayN 实现命令行proxy</title>
    <url>/2023/04/13/wsl-debian-proxy/</url>
    <content><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><ul>
<li>v2rayn version 5.39</li>
<li>wsl2 + Debian</li>
</ul>
<h2 id="v2rayN-设置局域网-socks5-http-proxy"><a href="#v2rayN-设置局域网-socks5-http-proxy" class="headerlink" title="v2rayN 设置局域网 socks5 &#x2F; http proxy"></a>v2rayN 设置局域网 socks5 &#x2F; http proxy</h2><ul>
<li>core:基础设置中勾选允许来自局域网的连接和开启 Mux 多路复用 ( 推荐设置认证密码 )</li>
<li>在选择节点窗口下方查看共享给局域网的端口</li>
</ul>
<h2 id="查看宿主机的-ip-和-wsl-的-ip"><a href="#查看宿主机的-ip-和-wsl-的-ip" class="headerlink" title="查看宿主机的 ip 和 wsl 的 ip"></a>查看宿主机的 ip 和 wsl 的 ip</h2><ul>
<li><p>获取宿主机 ip <code>cat /etc/resolv.conf</code></p>
</li>
<li><p>同时添加代理到 <code>/etc/environment</code> <code>~/.profile</code></p>
<p>也可以添加到 <code>~/.bashrc</code> <code>~/.zshrc</code></p>
</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">### http代理</span><br><span class="line"></span><br><span class="line">export windows_host=`cat /etc/resolv.conf|grep nameserver|awk &#x27;&#123;print $2&#125;&#x27;`</span><br><span class="line">export ALL_PROXY=socks5://&#123;username&#125;:&#123;passwd&#125;@$windows_host:&#123;port&#125;</span><br><span class="line">export HTTP_PROXY=$ALL_PROXY</span><br><span class="line">export http_proxy=$ALL_PROXY</span><br><span class="line">export HTTPS_PROXY=$ALL_PROXY</span><br><span class="line">export https_proxy=$ALL_PROXY</span><br><span class="line">export no_proxy=127.0.0.1,.devops.com,localhost,local,.local,172.28.0.0/16</span><br><span class="line"></span><br><span class="line">if [ &quot;`git config --global --get proxy.https`&quot; != &quot;socks5://&#123;username&#125;:&#123;passwd&#125;@$windows_host:&#123;port&#125;&quot; ]; then</span><br><span class="line">            git config --global proxy.https socks5://&#123;username&#125;:&#123;passwd&#125;@$windows_host:&#123;port&#125;</span><br><span class="line">fi</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li><code>source /etc/environment&amp;&amp;source ~/.profile</code></li>
</ul>
<h2 id="测试连接"><a href="#测试连接" class="headerlink" title="测试连接"></a>测试连接</h2><ul>
<li><p><code>wget google.com</code></p>
</li>
<li><p><code>curl google.com</code></p>
</li>
<li><p>有返回值说明正常</p>
</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>System has not been booted with systemd as init system (PID 1).</title>
    <url>/2023/04/20/wsl-fix-systemd-issue/</url>
    <content><![CDATA[<h2 id="升级-wsl"><a href="#升级-wsl" class="headerlink" title="升级 wsl"></a>升级 wsl</h2><ul>
<li><strong>注意开启 windows update</strong></li>
<li><code>wsl --update</code></li>
<li><code>wsl --version</code><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">WSL version: 1.1.3.0</span><br><span class="line">Kernel version: 5.15.90.1</span><br><span class="line">WSLg version: 1.0.49</span><br><span class="line">MSRDC version: 1.2.3770</span><br><span class="line">Direct3D version: 1.608.2-61064218</span><br><span class="line">DXCore version: 10.0.25131.1002-220531-1700.rs-onecore-base2-hyp</span><br><span class="line">Windows version: 10.0.22621.525</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="开启-Systemd-support"><a href="#开启-Systemd-support" class="headerlink" title="开启 Systemd support"></a>开启 Systemd support</h2><ul>
<li><p><code>sudo nano /etc/wsl.conf</code></p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[boot]</span><br><span class="line">systemd=true</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>^O</code> + <code>^X</code></p>
</li>
<li><p><code>wsl --shutdown</code></p>
</li>
</ul>
<h2 id="Enjoy"><a href="#Enjoy" class="headerlink" title="Enjoy !"></a>Enjoy !</h2>]]></content>
  </entry>
  <entry>
    <title>oh-my-zsh 应用</title>
    <url>/2022/02/20/zsh/</url>
    <content><![CDATA[<h1 id="oh-my-zsh-应用"><a href="#oh-my-zsh-应用" class="headerlink" title="oh-my-zsh 应用"></a>oh-my-zsh 应用</h1><h2 id="1-Zsh-简介"><a href="#1-Zsh-简介" class="headerlink" title="1. Zsh 简介"></a>1. Zsh 简介</h2><h3 id="1-1-Zsh-是什么"><a href="#1-1-Zsh-是什么" class="headerlink" title="1.1. Zsh 是什么"></a>1.1. Zsh 是什么</h3><p>使用 Linux 的人都知道：*<strong>Shell_ 是一个用 C 语言编写的程序,它是用户使用 Linux 的桥梁。<em>Shell</em> 既是一种命令语言,又是一种程序设计语言</strong>。</p>
<p>Shell 的类型有很多种，linux 下默认的是 bash，虽然 bash 的功能已经很强大，但对于以懒惰为美德的程序员来说，bash 的提示功能不够强大，界面也不够炫，并非理想工具。</p>
<p><a href="http://www.zsh.org/"><strong>Zsh</strong></a> 也是一种 Shell（据传说 99% 的 Bash 操作 和 Zsh 是相同的），它的功能极其强大，只是配置过于复杂，起初只有极客才在用。后来，出现了一个名叫 <a href="https://github.com/robbyrussell/oh-my-zsh"><strong>oh-my-zsh</strong></a> 的开源项目，使用 zsh 就变得十分简易了。</p>
<h2 id="2-Zsh-安装"><a href="#2-Zsh-安装" class="headerlink" title="2. Zsh 安装"></a>2. Zsh 安装</h2><h3 id="2-1-环境要求"><a href="#2-1-环境要求" class="headerlink" title="2.1. 环境要求"></a>2.1. 环境要求</h3><ul>
<li>CentOS 6.7 64 bit</li>
<li>root 用户</li>
</ul>
<h3 id="2-2-安装-zsh"><a href="#2-2-安装-zsh" class="headerlink" title="2.2. 安装 zsh"></a>2.2. 安装 zsh</h3><ul>
<li>先看下你的 CentOS 支持哪些 shell：<code>cat /etc/shells</code>，正常结果应该是这样的：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/bin/sh</span><br><span class="line">/bin/bash</span><br><span class="line">/sbin/nologin</span><br><span class="line">/bin/dash</span><br><span class="line">/bin/tcsh</span><br><span class="line">/bin/csh</span><br></pre></td></tr></table></figure>

<p>如果已经有 zsh ，那么我们就不必安装了。</p>
<ul>
<li>CentOS 安装：<code>sudo yum install -y zsh</code></li>
<li>Ubuntu 安装：<code>sudo apt-get install -y zsh</code></li>
<li>检查系统的 shell：<code>cat /etc/shells</code>，你会发现多了一个：<code>/bin/zsh</code></li>
</ul>
<h3 id="2-3-安装-oh-my-zsh"><a href="#2-3-安装-oh-my-zsh" class="headerlink" title="2.3. 安装 oh-my-zsh"></a>2.3. 安装 oh-my-zsh</h3><p>使用 <a href="http://www.zsh.org/"><strong>Zsh</strong></a>，怎么能离开灵魂伴侣 <a href="https://github.com/robbyrussell/oh-my-zsh"><strong>oh-my-zsh</strong></a>？</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装 oh-my-zsh</span></span><br><span class="line">wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh</span><br></pre></td></tr></table></figure>

<h3 id="2-4-配置-oh-my-zsh"><a href="#2-4-配置-oh-my-zsh" class="headerlink" title="2.4. 配置 oh-my-zsh"></a>2.4. 配置 oh-my-zsh</h3><h4 id="2-4-1-插件"><a href="#2-4-1-插件" class="headerlink" title="2.4.1. 插件"></a>2.4.1. 插件</h4><blockquote>
<p>oh-my-zsh 插件太多，不一一列举，请参考：<a href="https://github.com/robbyrussell/oh-my-zsh/wiki/Plugins">oh-my-zsh 插件列表</a></p>
</blockquote>
<ul>
<li>启用 oh-my-zsh 中自带的插件。</li>
<li>查看 oh-my-zsh 插件数：<code>ls -l /root/.oh-my-zsh/plugins |grep &quot;^d&quot;|wc -l</code></li>
<li>编辑配置文件：<code>vim /root/.zshrc</code></li>
<li>插件推荐：<ul>
<li><a href="https://github.com/zsh-users/zsh-autosuggestions"><code>zsh-autosuggestions</code></a><ul>
<li>这个插件会对历史命令一些补全，类似 fish 终端</li>
<li>安装，复制该命令：<code>git clone https://github.com/zsh-users/zsh-autosuggestions $&#123;ZSH_CUSTOM:-\~/.oh-my-zsh/custom&#125;/plugins/zsh-autosuggestions</code> - 编辑：<code>vim \~/.zshrc</code>，找到这一行，后括号里面的后面添加：<code>plugins=( 前面的一些插件名称，换行，加上：zsh-autosuggestions)</code> - 刷新下配置：<code>source \~/.zshrc</code></li>
</ul>
</li>
<li>extract<ul>
<li>功能强大的解压插件，所有类型的文件解压一个命令 x 全搞定，再也不需要去记 tar 后面到底是哪几个参数了。</li>
</ul>
</li>
<li>z<ul>
<li>强大的目录自动跳转命令，会记忆你曾经进入过的目录，用模糊匹配快速进入你想要的目录。</li>
</ul>
</li>
<li><a href="https://github.com/zsh-users/zsh-syntax-highlighting"><code>zsh-syntax-highlighting</code></a><ul>
<li>这个插件会对终端命令高亮显示,比如正确的拼写会是绿色标识,否则是红色,另外对于一些 shell 输出语句也会有高亮显示,算是不错的辅助插件</li>
<li>安装，复制该命令：<code>git clone https://github.com/zsh-users/zsh-syntax-highlighting.git $&#123;ZSH_CUSTOM:-\~/.oh-my-zsh/custom&#125;/plugins/zsh-syntax-highlighting</code></li>
<li>编辑：<code>vim \~/.zshrc</code>，找到这一行，后括号里面的后面添加：<code>plugins=( 前面的一些插件名称，换行，加上：zsh-syntax-highlighting)</code> - 刷新下配置：<code>source \~/.zshrc</code></li>
</ul>
</li>
<li><a href="https://github.com/mfaerevaag/wd"><code>wd</code></a><ul>
<li>简单地讲就是给指定目录映射一个全局的名字，以后方便直接跳转到这个目录，比如：</li>
<li>编辑配置文件，添加上 wd 的名字：<code>vim /root/.zshrc</code></li>
<li>我常去目录：**&#x2F;opt&#x2F;setups**，每次进入该目录下都需要这样：<code>cd /opt/setups</code></li>
<li>现在用 wd 给他映射一个快捷方式：<code>cd /opt/setups ; wd add setups</code></li>
<li>以后我在任何目录下只要运行：<code>wd setups</code> 就自动跑到 &#x2F;opt&#x2F;setups 目录下了</li>
</ul>
</li>
<li><a href="https://github.com/wting/autojump"><code>autojump</code></a><ul>
<li>这个插件会记录你常去的那些目录，然后做一下权重记录，你可以用这个命令看到你的习惯：<code>j --stat</code>，如果这个里面有你的记录，那你就只要敲最后一个文件夹名字即可进入，比如我个人习惯的 program：<code>j program</code>，就可以直接到：<code>/usr/program</code></li>
<li>插件下载：<code>wget https://github.com/downloads/wting/autojump/autojump_v21.1.2.tar.gz</code></li>
<li>解压：<code>tar zxvf autojump_v21.1.2.tar.gz</code></li>
<li>进入解压后目录并安装：<code>cd autojump_v21.1.2/ ; ./install.sh</code></li>
<li>再执行下这个：<code>source /etc/profile.d/autojump.sh</code></li>
<li>编辑配置文件，添加上 autojump 的名字：<code>vim /root/.zshrc</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<h4 id="2-4-2-主题"><a href="#2-4-2-主题" class="headerlink" title="2.4.2. 主题"></a>2.4.2. 主题</h4><blockquote>
<p>oh-my-zsh 主题太多，不一一列举，请参考：<a href="https://github.com/robbyrussell/oh-my-zsh/wiki/Themes">oh-my-zsh 主题列表</a></p>
</blockquote>
<ul>
<li>查看 oh-my-zsh 主题数：<code>ls -l /root/.oh-my-zsh/themes |grep &quot;^-&quot;|wc -l</code></li>
<li>个人比较推荐的是（排名有先后）：<ul>
<li><code>ys</code></li>
<li><code>agnoster</code></li>
<li><code>avit</code></li>
<li><code>blinks</code></li>
</ul>
</li>
<li>编辑配置文件：<code>vim /root/.zshrc</code></li>
<li>配置好新主题需要重新连接 shell 才能看到效果</li>
</ul>
<p>zsh 效果如下：</p>
<p><img src="https://cloud.githubusercontent.com/assets/2618447/6316862/70f58fb6-ba03-11e4-82c9-c083bf9a6574.png" alt="img"></p>
<h2 id="3-快捷键"><a href="#3-快捷键" class="headerlink" title="3. 快捷键"></a>3. 快捷键</h2><ul>
<li>呃，这个其实可以不用讲的，你自己用的时候你自己会发现的，各种便捷，特别是用 Tab 多的人一定会有各种惊喜的。</li>
<li>使用 ctrl-r 来搜索命令历史记录。按完此快捷键后，可以输入关键命令词语，如果历史记录有含有此词语会显示出来。</li>
<li>命令别名： - 在命令行中输入 alias 可以查看已经有的命令别名 - 自己新增一些别名，编辑文件：<code>vim \~/.zshrc</code>，在文件加入下面格式的命令，比如以下是网友提供的一些思路：</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">alias cls=&#x27;clear&#x27;</span><br><span class="line">alias ll=&#x27;ls -l&#x27;</span><br><span class="line">alias la=&#x27;ls -a&#x27;</span><br><span class="line">alias grep=&quot;grep --color=auto&quot;</span><br><span class="line">alias -s html=&#x27;vim&#x27;   # 在命令行直接输入后缀为 html 的文件名，会在 Vim 中打开</span><br><span class="line">alias -s rb=&#x27;vim&#x27;     # 在命令行直接输入 ruby 文件，会在 Vim 中打开</span><br><span class="line">alias -s py=&#x27;vim&#x27;      # 在命令行直接输入 python 文件，会用 vim 中打开，以下类似</span><br><span class="line">alias -s js=&#x27;vim&#x27;</span><br><span class="line">alias -s c=&#x27;vim&#x27;</span><br><span class="line">alias -s java=&#x27;vim&#x27;</span><br><span class="line">alias -s txt=&#x27;vim&#x27;</span><br><span class="line">alias -s gz=&#x27;tar -xzvf&#x27; # 在命令行直接输入后缀为 gz 的文件名，会自动解压打开</span><br><span class="line">alias -s tgz=&#x27;tar -xzvf&#x27;</span><br><span class="line">alias -s zip=&#x27;unzip&#x27;</span><br><span class="line">alias -s bz2=&#x27;tar -xjvf&#x27;</span><br></pre></td></tr></table></figure>

<h2 id="4-参考资料"><a href="#4-参考资料" class="headerlink" title="4. 参考资料"></a>4. 参考资料</h2><ul>
<li><a href="https://github.com/robbyrussell/oh-my-zsh">oh-my-zsh Github</a></li>
</ul>
]]></content>
      <tags>
        <tag>linux</tag>
        <tag>oh-my-zsh</tag>
      </tags>
  </entry>
  <entry>
    <title>中华人民共和国宪法</title>
    <url>/2022/01/11/%E3%80%8A%E4%B8%AD%E5%8D%8E%E4%BA%BA%E6%B0%91%E5%85%B1%E5%92%8C%E5%9B%BD%E5%AE%AA%E6%B3%95%E3%80%8B/</url>
    <content><![CDATA[<h1 id="中华人民共和国宪法"><a href="#中华人民共和国宪法" class="headerlink" title="中华人民共和国宪法"></a>中华人民共和国宪法</h1><blockquote>
<p>1982年12月4日第五届全国人民代表大会第五次会议通过<br>1982年12月4日全国人民代表大会公告公布施行</p>
</blockquote>
<blockquote>
<p>根据1988年4月12日第七届全国人民代表大会第一次会议通过的《中华人民共和国宪法修正案》、<br>1993年3月29日第八届全国人民代表大会第一次会议通过的《中华人民共和国宪法修正案》、<br>1999年3月15日第九届全国人民代表大会第二次会议通过的《中华人民共和国宪法修正案》、<br>2004年3月14日第十届全国人民代表大会第二次会议通过的《中华人民共和国宪法修正案》、<br>2018年3月11日第十三届全国人民代表大会一次会议第三次全体会议通过的《中华人民共和国宪法修正案》修正</p>
</blockquote>
<h2 id="序言"><a href="#序言" class="headerlink" title="序言"></a>序言</h2><p>中国是世界上历史最悠久的国家之一。中国各族人民共同创造了光辉灿烂的文化，具有光荣的革命传统。</p>
<p>一八四〇年以后，封建的中国逐渐变成半殖民地、半封建的国家。中国人民为国家独立、民族解放和民主自由进行了前仆后继的英勇奋斗。</p>
<p>二十世纪，中国发生了翻天覆地的伟大历史变革。</p>
<p>一九一一年孙中山先生领导的辛亥革命，废除了封建帝制，创立了中华民国。但是，中国人民反对帝国主义和封建主义的历史任务还没有完成。</p>
<p>一九四九年，以毛泽东主席为领袖的中国共产党领导中国各族人民，在经历了长期的艰难曲折的武装斗争和其他形式的斗争以后，终于推翻了帝国主义、封建主义和官僚资本主义的统治，取得了新民主主义革命的伟大胜利，建立了中华人民共和国。从此，中国人民掌握了国家的权力，成为国家的主人。</p>
<p>中华人民共和国成立以后，我国社会逐步实现了由新民主主义到社会主义的过渡。生产资料私有制的社会主义改造已经完成，人剥削人的制度已经消灭，社会主义制度已经确立。工人阶级领导的、以工农联盟为基础的人民民主专政，实质上即无产阶级专政，得到巩固和发展。中国人民和中国人民解放军战胜了帝国主义、霸权主义的侵略、破坏和武装挑衅，维护了国家的独立和安全，增强了国防。经济建设取得了重大的成就，独立的、比较完整的社会主义工业体系已经基本形成，农业生产显著提高。教育、科学、文化等事业有了很大的发展，社会主义思想教育取得了明显的成效。广大人民的生活有了较大的改善。</p>
<p>中国新民主主义革命的胜利和社会主义事业的成就，是中国共产党领导中国各族人民，在马克思列宁主义、毛泽东思想的指引下，坚持真理，修正错误，战胜许多艰难险阻而取得的。我国将长期处于社会主义初级阶段。国家的根本任务是，沿着中国特色社会主义道路，集中力量进行社会主义现代化建设。中国各族人民将继续在中国共产党领导下，在马克思列宁主义、毛泽东思想、邓小平理论、“三个代表”重要思想、科学发展观、习近平新时代中国特色社会主义思想指引下，坚持人民民主专政，坚持社会主义道路，坚持改革开放，不断完善社会主义的各项制度，发展社会主义市场经济，发展社会主义民主，健全社会主义法治，贯彻新发展理念，自力更生，艰苦奋斗，逐步实现工业、农业、国防和科学技术的现代化，推动物质文明、政治文明、精神文明、社会文明、生态文明协调发展，把我国建设成为富强民主文明和谐美丽的社会主义现代化强国，实现中华民族伟大复兴。</p>
<p>在我国，剥削阶级作为阶级已经消灭，但是阶级斗争还将在一定范围内长期存在。中国人民对敌视和破坏我国社会主义制度的国内外的敌对势力和敌对分子，必须进行斗争。</p>
<p>台湾是中华人民共和国的神圣领土的一部分。完成统一祖国的大业是包括台湾同胞在内的全中国人民的神圣职责。</p>
<p>社会主义的建设事业必须依靠工人、农民和知识分子，团结一切可以团结的力量。在长期的革命、建设、改革过程中，已经结成由中国共产党领导的，有各民主党派和各人民团体参加的，包括全体社会主义劳动者、社会主义事业的建设者、拥护社会主义的爱国者、拥护祖国统一和致力于中华民族伟大复兴的爱国者的广泛的爱国统一战线，这个统一战线将继续巩固和发展。中国人民政治协商会议是有广泛代表性的统一战线组织，过去发挥了重要的历史作用，今后在国家政治生活、社会生活和对外友好活动中，在进行社会主义现代化建设、维护国家的统一和团结的斗争中，将进一步发挥它的重要作用。中国共产党领导的多党合作和政治协商制度将长期存在和发展。</p>
<p>中华人民共和国是全国各族人民共同缔造的统一的多民族国家。平等团结互助和谐的社会主义民族关系已经确立，并将继续加强。在维护民族团结的斗争中，要反对大民族主义，主要是大汉族主义，也要反对地方民族主义。国家尽一切努力，促进全国各民族的共同繁荣。</p>
<p>中国革命、建设、改革的成就是同世界人民的支持分不开的。中国的前途是同世界的前途紧密地联系在一起的。中国坚持独立自主的对外政策，坚持互相尊重主权和领土完整、互不侵犯、互不干涉内政、平等互利、和平共处的五项原则，坚持和平发展道路，坚持互利共赢开放战略，发展同各国的外交关系和经济、文化交流，推动构建人类命运共同体；坚持反对帝国主义、霸权主义、殖民主义，加强同世界各国人民的团结，支持被压迫民族和发展中国家争取和维护民族独立、发展民族经济的正义斗争，为维护世界和平和促进人类进步事业而努力。</p>
<p>本宪法以法律的形式确认了中国各族人民奋斗的成果，规定了国家的根本制度和根本任务，是国家的根本法，具有最高的法律效力。全国各族人民、一切国家机关和武装力量、各政党和各社会团体、各企业事业组织，都必须以宪法为根本的活动准则，并且负有维护宪法尊严、保证宪法实施的职责。</p>
<h2 id="第一章-总纲"><a href="#第一章-总纲" class="headerlink" title="第一章 总纲"></a>第一章 总纲</h2><ul>
<li><p>第一条 中华人民共和国是工人阶级领导的、以工农联盟为基础的人民民主专政的社会主义国家。</p>
<p>社会主义制度是中华人民共和国的根本制度。中国共产党领导是中国特色社会主义最本质的特征。禁止任何组织或者个人破坏社会主义制度。</p>
</li>
<li><p>第二条 中华人民共和国的一切权力属于人民。</p>
<p>人民行使国家权力的机关是全国人民代表大会和地方各级人民代表大会。</p>
<p>人民依照法律规定，通过各种途径和形式，管理国家事务，管理经济和文化事业，管理社会事务。</p>
</li>
<li><p>第三条 中华人民共和国的国家机构实行民主集中制的原则。</p>
<p>全国人民代表大会和地方各级人民代表大会都由民主选举产生，对人民负责，受人民监督。</p>
<p>国家行政机关、监察机关、审判机关、检察机关都由人民代表大会产生，对它负责，受它监督。</p>
<p>中央和地方的国家机构职权的划分，遵循在中央的统一领导下，充分发挥地方的主动性、积极性的原则。</p>
</li>
<li><p>第四条 中华人民共和国各民族一律平等。</p>
<p>国家保障各少数民族的合法的权利和利益，维护和发展各民族的平等团结互助和谐关系。禁止对任何民族的歧视和压迫，禁止破坏民族团结和制造民族分裂的行为。</p>
<p>国家根据各少数民族的特点和需要，帮助各少数民族地区加速经济和文化的发展。</p>
<p>各少数民族聚居的地方实行区域自治，设立自治机关，行使自治权。</p>
<p>各民族自治地方都是中华人民共和国不可分离的部分。</p>
<p>各民族都有使用和发展自己的语言文字的自由，都有保持或者改革自己的风俗习惯的自由。</p>
</li>
<li><p>第五条 中华人民共和国实行依法治国，建设社会主义法治国家。</p>
<p>国家维护社会主义法制的统一和尊严。</p>
<p>一切法律、行政法规和地方性法规都不得同宪法相抵触。</p>
<p>一切国家机关和武装力量、各政党和各社会团体、各企业事业组织都必须遵守宪法和法律。一切违反宪法和法律的行为，必须予以追究。</p>
<p>任何组织或者个人都不得有超越宪法和法律的特权。</p>
</li>
<li><p>第六条 中华人民共和国的社会主义经济制度的基础是生产资料的社会主义公有制，即全民所有制和劳动群众集体所有制。社会主义公有制消灭人剥削人的制度，实行各尽所能、按劳分配的原则。</p>
<p>国家在社会主义初级阶段，坚持公有制为主体、多种所有制经济共同发展的基本经济制度，坚持按劳分配为主体、多种分配方式并存的分配制度。</p>
</li>
<li><p>第七条 国有经济，即社会主义全民所有制经济，是国民经济中的主导力量。国家保障国有经济的巩固和发展。</p>
</li>
<li><p>第八条 农村集体经济组织实行家庭承包经营为基础、统分结合的双层经营体制。农村中的生产、供销、信用、消费等各种形式的合作经济，是社会主义劳动群众集体所有制经济。参加农村集体经济组织的劳动者，有权在法律规定的范围内经营自留地、自留山、家庭副业和饲养自留畜。</p>
<p>城镇中的手工业、工业、建筑业、运输业、商业、服务业等行业的各种形式的合作经济，都是社会主义劳动群众集体所有制经济。</p>
<p>国家保护城乡集体经济组织的合法的权利和利益，鼓励、指导和帮助集体经济的发展。</p>
</li>
<li><p>第九条 矿藏、水流、森林、山岭、草原、荒地、滩涂等自然资源，都属于国家所有，即全民所有；由法律规定属于集体所有的森林和山岭、草原、荒地、滩涂除外。</p>
<p>国家保障自然资源的合理利用，保护珍贵的动物和植物。禁止任何组织或者个人用任何手段侵占或者破坏自然资源。</p>
</li>
<li><p>第十条 城市的土地属于国家所有。</p>
<p>农村和城市郊区的土地，除由法律规定属于国家所有的以外，属于集体所有；宅基地和自留地、自留山，也属于集体所有。</p>
<p>国家为了公共利益的需要，可以依照法律规定对土地实行征收或者征用并给予补偿。</p>
<p>任何组织或者个人不得侵占、买卖或者以其他形式非法转让土地。土地的使用权可以依照法律的规定转让。</p>
<p>一切使用土地的组织和个人必须合理地利用土地。</p>
</li>
<li><p>第十一条 在法律规定范围内的个体经济、私营经济等非公有制经济，是社会主义市场经济的重要组成部分。</p>
<p>国家保护个体经济、私营经济等非公有制经济的合法的权利和利益。国家鼓励、支持和引导非公有制经济的发展，并对非公有制经济依法实行监督和管理。</p>
</li>
<li><p>第十二条 社会主义的公共财产神圣不可侵犯。</p>
<p>国家保护社会主义的公共财产。禁止任何组织或者个人用任何手段侵占或者破坏国家的和集体的财产。</p>
</li>
<li><p>第十三条 公民的合法的私有财产不受侵犯。</p>
<p>国家依照法律规定保护公民的私有财产权和继承权。</p>
<p>国家为了公共利益的需要，可以依照法律规定对公民的私有财产实行征收或者征用并给予补偿。</p>
</li>
<li><p>第十四条 国家通过提高劳动者的积极性和技术水平，推广先进的科学技术，完善经济管理体制和企业经营管理制度，实行各种形式的社会主义责任制，改进劳动组织，以不断提高劳动生产率和经济效益，发展社会生产力。</p>
<p>国家厉行节约，反对浪费。</p>
<p>国家合理安排积累和消费，兼顾国家、集体和个人的利益，在发展生产的基础上，逐步改善人民的物质生活和文化生活。</p>
<p>国家建立健全同经济发展水平相适应的社会保障制度。</p>
</li>
<li><p>第十五条 国家实行社会主义市场经济。</p>
<p>国家加强经济立法，完善宏观调控。</p>
<p>国家依法禁止任何组织或者个人扰乱社会经济秩序。</p>
</li>
<li><p>第十六条 国有企业在法律规定的范围内有权自主经营。</p>
<p>国有企业依照法律规定，通过职工代表大会和其他形式，实行民主管理。</p>
</li>
<li><p>第十七条 集体经济组织在遵守有关法律的前提下，有独立进行经济活动的自主权。</p>
<p>集体经济组织实行民主管理，依照法律规定选举和罢免管理人员，决定经营管理的重大问题。</p>
</li>
<li><p>第十八条 中华人民共和国允许外国的企业和其他经济组织或者个人依照中华人民共和国法律的规定在中国投资，同中国的企业或者其他经济组织进行各种形式的经济合作。</p>
<p>在中国境内的外国企业和其他外国经济组织以及中外合资经营的企业，都必须遵守中华人民共和国的法律。它们的合法的权利和利益受中华人民共和国法律的保护。</p>
</li>
<li><p>第十九条 国家发展社会主义的教育事业，提高全国人民的科学文化水平。</p>
<p>国家举办各种学校，普及初等义务教育，发展中等教育、职业教育和高等教育，并且发展学前教育。</p>
<p>国家发展各种教育设施，扫除文盲，对工人、农民、国家工作人员和其他劳动者进行政治、文化、科学、技术、业务的教育，鼓励自学成才。</p>
<p>国家鼓励集体经济组织、国家企业事业组织和其他社会力量依照法律规定举办各种教育事业。</p>
<p>国家推广全国通用的普通话。</p>
</li>
<li><p>第二十条 国家发展自然科学和社会科学事业，普及科学和技术知识，奖励科学研究成果和技术发明创造。</p>
</li>
<li><p>第二十一条 国家发展医疗卫生事业，发展现代医药和我国传统医药，鼓励和支持农村集体经济组织、国家企业事业组织和街道组织举办各种医疗卫生设施，开展群众性的卫生活动，保护人民健康。</p>
<p>国家发展体育事业，开展群众性的体育活动，增强人民体质。</p>
</li>
<li><p>第二十二条 国家发展为人民服务、为社会主义服务的文学艺术事业、新闻广播电视事业、出版发行事业、图书馆博物馆文化馆和其他文化事业，开展群众性的文化活动。</p>
<p>国家保护名胜古迹、珍贵文物和其他重要历史文化遗产。</p>
</li>
<li><p>第二十三条 国家培养为社会主义服务的各种专业人才，扩大知识分子的队伍，创造条件，充分发挥他们在社会主义现代化建设中的作用。</p>
</li>
<li><p>第二十四条 国家通过普及理想教育、道德教育、文化教育、纪律和法制教育，通过在城乡不同范围的群众中制定和执行各种守则、公约，加强社会主义精神文明的建设。</p>
<p>国家倡导社会主义核心价值观，提倡爱祖国、爱人民、爱劳动、爱科学、爱社会主义的公德，在人民中进行爱国主义、集体主义和国际主义、共产主义的教育，进行辩证唯物主义和历史唯物主义的教育，反对资本主义的、封建主义的和其他的腐朽思想。</p>
</li>
<li><p>第二十五条 国家推行计划生育，使人口的增长同经济和社会发展计划相适应。</p>
</li>
<li><p>第二十六条 国家保护和改善生活环境和生态环境，防治污染和其他公害。</p>
<p>国家组织和鼓励植树造林，保护林木。</p>
</li>
<li><p>第二十七条 一切国家机关实行精简的原则，实行工作责任制，实行工作人员的培训和考核制度，不断提高工作质量和工作效率，反对官僚主义。</p>
<p>一切国家机关和国家工作人员必须依靠人民的支持，经常保持同人民的密切联系，倾听人民的意见和建议，接受人民的监督，努力为人民服务。</p>
<p>国家工作人员就职时应当依照法律规定公开进行宪法宣誓。</p>
</li>
<li><p>第二十八条 国家维护社会秩序，镇压叛国和其他危害国家安全的犯罪活动，制裁危害社会治安、破坏社会主义经济和其他犯罪的活动，惩办和改造犯罪分子。</p>
</li>
<li><p>第二十九条 中华人民共和国的武装力量属于人民。它的任务是巩固国防，抵抗侵略，保卫祖国，保卫人民的和平劳动，参加国家建设事业，努力为人民服务。</p>
<p>国家加强武装力量的革命化、现代化、正规化的建设，增强国防力量。</p>
</li>
<li><p>第三十条 中华人民共和国的行政区域划分如下：</p>
<ul>
<li>（一）全国分为省、自治区、直辖市；</li>
<li>（二）省、自治区分为自治州、县、自治县、市；</li>
<li>（三）县、自治县分为乡、民族乡、镇。</li>
</ul>
<p>直辖市和较大的市分为区、县。自治州分为县、自治县、市。</p>
<p>自治区、自治州、自治县都是民族自治地方。</p>
</li>
<li><p>第三十一条 国家在必要时得设立特别行政区。在特别行政区内实行的制度按照具体情况由全国人民代表大会以法律规定。</p>
</li>
<li><p>第三十二条 中华人民共和国保护在中国境内的外国人的合法权利和利益，在中国境内的外国人必须遵守中华人民共和国的法律。</p>
<p>中华人民共和国对于因为政治原因要求避难的外国人，可以给予受庇护的权利。</p>
</li>
</ul>
<h2 id="第二章-公民的基本权利和义务"><a href="#第二章-公民的基本权利和义务" class="headerlink" title="第二章 公民的基本权利和义务"></a>第二章 公民的基本权利和义务</h2><ul>
<li><p>第三十三条 凡具有中华人民共和国国籍的人都是中华人民共和国公民。</p>
<p>中华人民共和国公民在法律面前一律平等。</p>
<p>国家尊重和保障人权。</p>
<p>任何公民享有宪法和法律规定的权利，同时必须履行宪法和法律规定的义务。</p>
</li>
<li><p>第三十四条 中华人民共和国年满十八周岁的公民，不分民族、种族、性别、职业、家庭出身、宗教信仰、教育程度、财产状况、居住期限，都有选举权和被选举权；但是依照法律被剥夺政治权利的人除外。</p>
</li>
<li><p>第三十五条 中华人民共和国公民有言论、出版、集会、结社、游行、示威的自由。</p>
</li>
<li><p>第三十六条 中华人民共和国公民有宗教信仰自由。</p>
<p>任何国家机关、社会团体和个人不得强制公民信仰宗教或者不信仰宗教，不得歧视信仰宗教的公民和不信仰宗教的公民。</p>
<p>国家保护正常的宗教活动。任何人不得利用宗教进行破坏社会秩序、损害公民身体健康、妨碍国家教育制度的活动。</p>
<p>宗教团体和宗教事务不受外国势力的支配。</p>
</li>
<li><p>第三十七条 中华人民共和国公民的人身自由不受侵犯。</p>
<p>任何公民，非经人民检察院批准或者决定或者人民法院决定，并由公安机关执行，不受逮捕。</p>
<p>禁止非法拘禁和以其他方法非法剥夺或者限制公民的人身自由，禁止非法搜查公民的身体。</p>
</li>
<li><p>第三十八条 中华人民共和国公民的人格尊严不受侵犯。禁止用任何方法对公民进行侮辱、诽谤和诬告陷害。</p>
</li>
<li><p>第三十九条 中华人民共和国公民的住宅不受侵犯。禁止非法搜查或者非法侵入公民的住宅。</p>
</li>
<li><p>第四十条 中华人民共和国公民的通信自由和通信秘密受法律的保护。除因国家安全或者追查刑事犯罪的需要，由公安机关或者检察机关依照法律规定的程序对通信进行检查外，任何组织或者个人不得以任何理由侵犯公民的通信自由和通信秘密。</p>
</li>
<li><p>第四十一条 中华人民共和国公民对于任何国家机关和国家工作人员，有提出批评和建议的权利；对于任何国家机关和国家工作人员的违法失职行为，有向有关国家机关提出申诉、控告或者检举的权利，但是不得捏造或者歪曲事实进行诬告陷害。</p>
<p>对于公民的申诉、控告或者检举，有关国家机关必须查清事实，负责处理。任何人不得压制和打击报复。</p>
<p>由于国家机关和国家工作人员侵犯公民权利而受到损失的人，有依照法律规定取得赔偿的权利。</p>
</li>
<li><p>第四十二条 中华人民共和国公民有劳动的权利和义务。</p>
<p>国家通过各种途径，创造劳动就业条件，加强劳动保护，改善劳动条件，并在发展生产的基础上，提高劳动报酬和福利待遇。</p>
<p>劳动是一切有劳动能力的公民的光荣职责。国有企业和城乡集体经济组织的劳动者都应当以国家主人翁的态度对待自己的劳动。国家提倡社会主义劳动竞赛，奖励劳动模范和先进工作者。国家提倡公民从事义务劳动。</p>
<p>国家对就业前的公民进行必要的劳动就业训练。</p>
</li>
<li><p>第四十三条 中华人民共和国劳动者有休息的权利。</p>
<p>国家发展劳动者休息和休养的设施，规定职工的工作时间和休假制度。</p>
</li>
<li><p>第四十四条 国家依照法律规定实行企业事业组织的职工和国家机关工作人员的退休制度。退休人员的生活受到国家和社会的保障。</p>
</li>
<li><p>第四十五条 中华人民共和国公民在年老、疾病或者丧失劳动能力的情况下，有从国家和社会获得物质帮助的权利。国家发展为公民享受这些权利所需要的社会保险、社会救济和医疗卫生事业。</p>
<p>国家和社会保障残废军人的生活，抚恤烈士家属，优待军人家属。</p>
<p>国家和社会帮助安排盲、聋、哑和其他有残疾的公民的劳动、生活和教育。</p>
</li>
<li><p>第四十六条 中华人民共和国公民有受教育的权利和义务。</p>
<p>国家培养青年、少年、儿童在品德、智力、体质等方面全面发展。</p>
</li>
<li><p>第四十七条 中华人民共和国公民有进行科学研究、文学艺术创作和其他文化活动的自由。国家对于从事教育、科学、技术、文学、艺术和其他文化事业的公民的有益于人民的创造性工作，给以鼓励和帮助。</p>
</li>
<li><p>第四十八条 中华人民共和国妇女在政治的、经济的、文化的、社会的和家庭的生活等各方面享有同男子平等的权利。</p>
<p>国家保护妇女的权利和利益，实行男女同工同酬，培养和选拔妇女干部。</p>
</li>
<li><p>第四十九条 婚姻、家庭、母亲和儿童受国家的保护。</p>
<p>夫妻双方有实行计划生育的义务。</p>
<p>父母有抚养教育未成年子女的义务，成年子女有赡养扶助父母的义务。</p>
<p>禁止破坏婚姻自由，禁止虐待老人、妇女和儿童。</p>
</li>
<li><p>第五十条 中华人民共和国保护华侨的正当的权利和利益，保护归侨和侨眷的合法的权利和利益。</p>
</li>
<li><p>第五十一条 中华人民共和国公民在行使自由和权利的时候，不得损害国家的、社会的、集体的利益和其他公民的合法的自由和权利。</p>
</li>
<li><p>第五十二条 中华人民共和国公民有维护国家统一和全国各民族团结的义务。</p>
</li>
<li><p>第五十三条 中华人民共和国公民必须遵守宪法和法律，保守国家秘密，爱护公共财产，遵守劳动纪律，遵守公共秩序，尊重社会公德。</p>
</li>
<li><p>第五十四条 中华人民共和国公民有维护祖国的安全、荣誉和利益的义务，不得有危害祖国的安全、荣誉和利益的行为。</p>
</li>
<li><p>第五十五条 保卫祖国、抵抗侵略是中华人民共和国每一个公民的神圣职责。</p>
<p>依照法律服兵役和参加民兵组织是中华人民共和国公民的光荣义务。</p>
</li>
<li><p>第五十六条 中华人民共和国公民有依照法律纳税的义务。</p>
</li>
</ul>
<h2 id="第三章-国家机构"><a href="#第三章-国家机构" class="headerlink" title="第三章 国家机构"></a>第三章 国家机构</h2><h3 id="第一节-全国人民代表大会"><a href="#第一节-全国人民代表大会" class="headerlink" title="第一节 全国人民代表大会"></a>第一节 全国人民代表大会</h3><ul>
<li><p>第五十七条 中华人民共和国全国人民代表大会是最高国家权力机关。它的常设机关是全国人民代表大会常务委员会。</p>
</li>
<li><p>第五十八条 全国人民代表大会和全国人民代表大会常务委员会行使国家立法权。</p>
</li>
<li><p>第五十九条 全国人民代表大会由省、自治区、直辖市、特别行政区和军队选出的代表组成。各少数民族都应当有适当名额的代表。</p>
<p>全国人民代表大会代表的选举由全国人民代表大会常务委员会主持。</p>
<p>全国人民代表大会代表名额和代表产生办法由法律规定。</p>
</li>
<li><p>第六十条 全国人民代表大会每届任期五年。</p>
<p>全国人民代表大会任期届满的两个月以前，全国人民代表大会常务委员会必须完成下届全国人民代表大会代表的选举。如果遇到不能进行选举的非常情况，由全国人民代表大会常务委员会以全体组成人员的三分之二以上的多数通过，可以推迟选举，延长本届全国人民代表大会的任期。在非常情况结束后一年内，必须完成下届全国人民代表大会代表的选举。</p>
</li>
<li><p>第六十一条 全国人民代表大会会议每年举行一次，由全国人民代表大会常务委员会召集。如果全国人民代表大会常务委员会认为必要，或者有五分之一以上的全国人民代表大会代表提议，可以临时召集全国人民代表大会会议。</p>
<p>全国人民代表大会举行会议的时候，选举主席团主持会议。</p>
</li>
<li><p>第六十二条 全国人民代表大会行使下列职权：</p>
<ul>
<li>（一）修改宪法；</li>
<li>（二）监督宪法的实施；</li>
<li>（三）制定和修改刑事、民事、国家机构的和其他的基本法律；</li>
<li>（四）选举中华人民共和国主席、副主席；</li>
<li>（五）根据中华人民共和国主席的提名，决定国务院总理的人选；根据国务院总理的提名，决定国务院副总理、国务委员、各部部长、各委员会主任、审计长、秘书长的人选；</li>
<li>（六）选举中央军事委员会主席；根据中央军事委员会主席的提名，决定中央军事委员会其他组成人员的人选；</li>
<li>（七）选举国家监察委员会主任；</li>
<li>（八）选举最高人民法院院长；</li>
<li>（九）选举最高人民检察院检察长；</li>
<li>（十）审查和批准国民经济和社会发展计划和计划执行情况的报告；</li>
<li>（十一）审查和批准国家的预算和预算执行情况的报告；</li>
<li>（十二）改变或者撤销全国人民代表大会常务委员会不适当的决定；</li>
<li>（十三）批准省、自治区和直辖市的建置；</li>
<li>（十四）决定特别行政区的设立及其制度；</li>
<li>（十五）决定战争和和平的问题；</li>
<li>（十六）应当由最高国家权力机关行使的其他职权。</li>
</ul>
</li>
<li><p>第六十三条 全国人民代表大会有权罢免下列人员：</p>
<ul>
<li>（一）中华人民共和国主席、副主席；</li>
<li>（二）国务院总理、副总理、国务委员、各部部长、各委员会主任、审计长、秘书长；</li>
<li>（三）中央军事委员会主席和中央军事委员会其他组成人员；</li>
<li>（四）国家监察委员会主任；</li>
<li>（五）最高人民法院院长；</li>
<li>（六）最高人民检察院检察长。</li>
</ul>
</li>
<li><p>第六十四条 宪法的修改，由全国人民代表大会常务委员会或者五分之一以上的全国人民代表大会代表提议，并由全国人民代表大会以全体代表的三分之二以上的多数通过。</p>
<p>法律和其他议案由全国人民代表大会以全体代表的过半数通过。</p>
</li>
<li><p>第六十五条 全国人民代表大会常务委员会由下列人员组成：</p>
<p>委员长，副委员长若干人，秘书长，委员若干人。</p>
<p>全国人民代表大会常务委员会组成人员中，应当有适当名额的少数民族代表。</p>
<p>全国人民代表大会选举并有权罢免全国人民代表大会常务委员会的组成人员。</p>
<p>全国人民代表大会常务委员会的组成人员不得担任国家行政机关、监察机关、审判机关和检察机关的职务。</p>
</li>
<li><p>第六十六条 全国人民代表大会常务委员会每届任期同全国人民代表大会每届任期相同，它行使职权到下届全国人民代表大会选出新的常务委员会为止。</p>
<p>委员长、副委员长连续任职不得超过两届。</p>
</li>
<li><p>第六十七条 全国人民代表大会常务委员会行使下列职权：</p>
<ul>
<li>（一）解释宪法，监督宪法的实施；</li>
<li>（二）制定和修改除应当由全国人民代表大会制定的法律以外的其他法律；</li>
<li>（三）在全国人民代表大会闭会期间，对全国人民代表大会制定的法律进行部分补充和修改，但是不得同该法律的基本原则相抵触；</li>
<li>（四）解释法律；</li>
<li>（五）在全国人民代表大会闭会期间，审查和批准国民经济和社会发展计划、国家预算在执行过程中所必须作的部分调整方案；</li>
<li>（六）监督国务院、中央军事委员会、国家监察委员会、最高人民法院和最高人民检察院的工作；</li>
<li>（七）撤销国务院制定的同宪法、法律相抵触的行政法规、决定和命令；</li>
<li>（八）撤销省、自治区、直辖市国家权力机关制定的同宪法、法律和行政法规相抵触的地方性法规和决议；</li>
<li>（九）在全国人民代表大会闭会期间，根据国务院总理的提名，决定部长、委员会主任、审计长、秘书长的人选；</li>
<li>（十）在全国人民代表大会闭会期间，根据中央军事委员会主席的提名，决定中央军事委员会其他组成人员的人选；</li>
<li>（十一）根据国家监察委员会主任的提请，任免国家监察委员会副主任、委员；</li>
<li>（十二）根据最高人民法院院长的提请，任免最高人民法院副院长、审判员、审判委员会委员和军事法院院长；</li>
<li>（十三）根据最高人民检察院检察长的提请，任免最高人民检察院副检察长、检察员、检察委员会委员和军事检察院检察长，并且批准省、自治区、直辖市的人民检察院检察长的任免；</li>
<li>（十四）决定驻外全权代表的任免；</li>
<li>（十五）决定同外国缔结的条约和重要协定的批准和废除；</li>
<li>（十六）规定军人和外交人员的衔级制度和其他专门衔级制度；</li>
<li>（十七）规定和决定授予国家的勋章和荣誉称号；</li>
<li>（十八）决定特赦；</li>
<li>（十九）在全国人民代表大会闭会期间，如果遇到国家遭受武装侵犯或者必须履行国际间共同防止侵略的条约的情况，决定战争状态的宣布；</li>
<li>（二十）决定全国总动员或者局部动员；</li>
<li>（二十一）决定全国或者个别省、自治区、直辖市进入紧急状态；</li>
<li>（二十二）全国人民代表大会授予的其他职权。</li>
</ul>
</li>
<li><p>第六十八条 全国人民代表大会常务委员会委员长主持全国人民代表大会常务委员会的工作，召集全国人民代表大会常务委员会会议。副委员长、秘书长协助委员长工作。</p>
<p>委员长、副委员长、秘书长组成委员长会议，处理全国人民代表大会常务委员会的重要日常工作。</p>
</li>
<li><p>第六十九条 全国人民代表大会常务委员会对全国人民代表大会负责并报告工作。</p>
</li>
<li><p>第七十条 全国人民代表大会设立民族委员会、法律委员会、财政经济委员会、教育科学文化卫生委员会、外事委员会、华侨委员会和其他需要设立的专门委员会。在全国人民代表大会闭会期间，各专门委员会受全国人民代表大会常务委员会的领导。</p>
<p>各专门委员会在全国人民代表大会和全国人民代表大会常务委员会领导下，研究、审议和拟订有关议案。</p>
</li>
<li><p>第七十一条 全国人民代表大会和全国人民代表大会常务委员会认为必要的时候，可以组织关于特定问题的调查委员会，并且根据调查委员会的报告，作出相应的决议。</p>
<p>调查委员会进行调查的时候，一切有关的国家机关、社会团体和公民都有义务向它提供必要的材料。</p>
</li>
<li><p>第七十二条 全国人民代表大会代表和全国人民代表大会常务委员会组成人员，有权依照法律规定的程序分别提出属于全国人民代表大会和全国人民代表大会常务委员会职权范围内的议案。</p>
</li>
<li><p>第七十三条 全国人民代表大会代表在全国人民代表大会开会期间，全国人民代表大会常务委员会组成人员在常务委员会开会期间，有权依照法律规定的程序提出对国务院或者国务院各部、各委员会的质询案。受质询的机关必须负责答复。</p>
</li>
<li><p>第七十四条 全国人民代表大会代表，非经全国人民代表大会会议主席团许可，在全国人民代表大会闭会期间非经全国人民代表大会常务委员会许可，不受逮捕或者刑事审判。</p>
</li>
<li><p>第七十五条 全国人民代表大会代表在全国人民代表大会各种会议上的发言和表决，不受法律追究。</p>
</li>
<li><p>第七十六条 全国人民代表大会代表必须模范地遵守宪法和法律，保守国家秘密，并且在自己参加的生产、工作和社会活动中，协助宪法和法律的实施。</p>
<p>全国人民代表大会代表应当同原选举单位和人民保持密切的联系，听取和反映人民的意见和要求，努力为人民服务。</p>
</li>
<li><p>第七十七条 全国人民代表大会代表受原选举单位的监督。原选举单位有权依照法律规定的程序罢免本单位选出的代表。</p>
</li>
<li><p>第七十八条 全国人民代表大会和全国人民代表大会常务委员会的组织和工作程序由法律规定。</p>
</li>
</ul>
<h3 id="第二节-中华人民共和国主席"><a href="#第二节-中华人民共和国主席" class="headerlink" title="第二节 中华人民共和国主席"></a>第二节 中华人民共和国主席</h3><ul>
<li><p>第七十九条 中华人民共和国主席、副主席由全国人民代表大会选举。</p>
<p>有选举权和被选举权的年满四十五周岁的中华人民共和国公民可以被选为中华人民共和国主席、副主席。</p>
<p>中华人民共和国主席、副主席每届任期同全国人民代表大会每届任期相同。</p>
</li>
<li><p>第八十条 中华人民共和国主席根据全国人民代表大会的决定和全国人民代表大会常务委员会的决定，公布法律，任免国务院总理、副总理、国务委员、各部部长、各委员会主任、审计长、秘书长，授予国家的勋章和荣誉称号，发布特赦令，宣布进入紧急状态，宣布战争状态，发布动员令。</p>
</li>
<li><p>第八十一条 中华人民共和国主席代表中华人民共和国，进行国事活动，接受外国使节；根据全国人民代表大会常务委员会的决定，派遣和召回驻外全权代表，批准和废除同外国缔结的条约和重要协定。</p>
</li>
<li><p>第八十二条 中华人民共和国副主席协助主席工作。</p>
<p>中华人民共和国副主席受主席的委托，可以代行主席的部分职权。</p>
</li>
<li><p>第八十三条 中华人民共和国主席、副主席行使职权到下届全国人民代表大会选出的主席、副主席就职为止。</p>
</li>
<li><p>第八十四条 中华人民共和国主席缺位的时候，由副主席继任主席的职位。</p>
<p>中华人民共和国副主席缺位的时候，由全国人民代表大会补选。</p>
<p>中华人民共和国主席、副主席都缺位的时候，由全国人民代表大会补选；在补选以前，由全国人民代表大会常务委员会委员长暂时代理主席职位。</p>
</li>
</ul>
<h3 id="第三节-国务院"><a href="#第三节-国务院" class="headerlink" title="第三节 国务院"></a>第三节 国务院</h3><ul>
<li><p>第八十五条 中华人民共和国国务院，即中央人民政府，是最高国家权力机关的执行机关，是最高国家行政机关。</p>
</li>
<li><p>第八十六条 国务院由下列人员组成：</p>
<p>总理，副总理若干人，国务委员若干人，各部部长，各委员会主任，审计长，秘书长。</p>
<p>国务院实行总理负责制。各部、各委员会实行部长、主任负责制。</p>
<p>国务院的组织由法律规定。</p>
</li>
<li><p>第八十七条 国务院每届任期同全国人民代表大会每届任期相同。</p>
<p>总理、副总理、国务委员连续任职不得超过两届。</p>
</li>
<li><p>第八十八条 总理领导国务院的工作。副总理、国务委员协助总理工作。</p>
<p>总理、副总理、国务委员、秘书长组成国务院常务会议。</p>
<p>总理召集和主持国务院常务会议和国务院全体会议。</p>
</li>
<li><p>第八十九条 国务院行使下列职权：</p>
<ul>
<li>（一）根据宪法和法律，规定行政措施，制定行政法规，发布决定和命令；</li>
<li>（二）向全国人民代表大会或者全国人民代表大会常务委员会提出议案；</li>
<li>（三）规定各部和各委员会的任务和职责，统一领导各部和各委员会的工作，并且领导不属于各部和各委员会的全国性的行政工作；</li>
<li>（四）统一领导全国地方各级国家行政机关的工作，规定中央和省、自治区、直辖市的国家行政机关的职权的具体划分；</li>
<li>（五）编制和执行国民经济和社会发展计划和国家预算；</li>
<li>（六）领导和管理经济工作和城乡建设、生态文明建设；</li>
<li>（七）领导和管理教育、科学、文化、卫生、体育和计划生育工作；</li>
<li>（八）领导和管理民政、公安、司法行政等工作；</li>
<li>（九）管理对外事务，同外国缔结条约和协定；</li>
<li>（十）领导和管理国防建设事业；</li>
<li>（十一）领导和管理民族事务，保障少数民族的平等权利和民族自治地方的自治权利；</li>
<li>（十二）保护华侨的正当的权利和利益，保护归侨和侨眷的合法的权利和利益；</li>
<li>（十三）改变或者撤销各部、各委员会发布的不适当的命令、指示和规章；</li>
<li>（十四）改变或者撤销地方各级国家行政机关的不适当的决定和命令；</li>
<li>（十五）批准省、自治区、直辖市的区域划分，批准自治州、县、自治县、市的建置和区域划分；</li>
<li>（十六）依照法律规定决定省、自治区、直辖市的范围内部分地区进入紧急状态；</li>
<li>（十七）审定行政机构的编制，依照法律规定任免、培训、考核和奖惩行政人员；</li>
<li>（十八）全国人民代表大会和全国人民代表大会常务委员会授予的其他职权。</li>
</ul>
</li>
<li><p>第九十条 国务院各部部长、各委员会主任负责本部门的工作；召集和主持部务会议或者委员会会议、委务会议，讨论决定本部门工作的重大问题。</p>
<p>各部、各委员会根据法律和国务院的行政法规、决定、命令，在本部门的权限内，发布命令、指示和规章。</p>
</li>
<li><p>第九十一条 国务院设立审计机关，对国务院各部门和地方各级政府的财政收支，对国家的财政金融机构和企业事业组织的财务收支，进行审计监督。</p>
<p>审计机关在国务院总理领导下，依照法律规定独立行使审计监督权，不受其他行政机关、社会团体和个人的干涉。</p>
</li>
<li><p>第九十二条 国务院对全国人民代表大会负责并报告工作；在全国人民代表大会闭会期间，对全国人民代表大会常务委员会负责并报告工作。</p>
</li>
</ul>
<h3 id="第四节-中央军事委员会"><a href="#第四节-中央军事委员会" class="headerlink" title="第四节 中央军事委员会"></a>第四节 中央军事委员会</h3><ul>
<li><p>第九十三条 中华人民共和国中央军事委员会领导全国武装力量。</p>
<p>中央军事委员会由下列人员组成：</p>
<p>主席，副主席若干人，委员若干人。</p>
<p>中央军事委员会实行主席负责制。</p>
<p>中央军事委员会每届任期同全国人民代表大会每届任期相同。</p>
</li>
<li><p>第九十四条 中央军事委员会主席对全国人民代表大会和全国人民代表大会常务委员会负责。</p>
</li>
</ul>
<h3 id="第五节-地方各级人民代表大会和地方各级人民政府"><a href="#第五节-地方各级人民代表大会和地方各级人民政府" class="headerlink" title="第五节 地方各级人民代表大会和地方各级人民政府"></a>第五节 地方各级人民代表大会和地方各级人民政府</h3><ul>
<li><p>第九十五条 省、直辖市、县、市、市辖区、乡、民族乡、镇设立人民代表大会和人民政府。</p>
<p>地方各级人民代表大会和地方各级人民政府的组织由法律规定。</p>
<p>自治区、自治州、自治县设立自治机关。自治机关的组织和工作根据宪法第三章第五节、第六节规定的基本原则由法律规定。</p>
</li>
<li><p>第九十六条 地方各级人民代表大会是地方国家权力机关。</p>
<p>县级以上的地方各级人民代表大会设立常务委员会。</p>
</li>
<li><p>第九十七条 省、直辖市、设区的市的人民代表大会代表由下一级的人民代表大会选举；县、不设区的市、市辖区、乡、民族乡、镇的人民代表大会代表由选民直接选举。</p>
<p>地方各级人民代表大会代表名额和代表产生办法由法律规定。</p>
</li>
<li><p>第九十八条 地方各级人民代表大会每届任期五年。</p>
</li>
<li><p>第九十九条 地方各级人民代表大会在本行政区域内，保证宪法、法律、行政法规的遵守和执行；依照法律规定的权限，通过和发布决议，审查和决定地方的经济建设、文化建设和公共事业建设的计划。</p>
<p>县级以上的地方各级人民代表大会审查和批准本行政区域内的国民经济和社会发展计划、预算以及它们的执行情况的报告；有权改变或者撤销本级人民代表大会常务委员会不适当的决定。</p>
<p>民族乡的人民代表大会可以依照法律规定的权限采取适合民族特点的具体措施。</p>
</li>
<li><p>第一百条 省、直辖市的人民代表大会和它们的常务委员会，在不同宪法、法律、行政法规相抵触的前提下，可以制定地方性法规，报全国人民代表大会常务委员会备案。</p>
<p>设区的市的人民代表大会和它们的常务委员会，在不同宪法、法律、行政法规和本省、自治区的地方性法规相抵触的前提下，可以依照法律规定制定地方性法规，报本省、自治区人民代表大会常务委员会批准后施行。</p>
</li>
<li><p>第一百零一条 地方各级人民代表大会分别选举并且有权罢免本级人民政府的省长和副省长、市长和副市长、县长和副县长、区长和副区长、乡长和副乡长、镇长和副镇长。</p>
<p>县级以上的地方各级人民代表大会选举并且有权罢免本级监察委员会主任、本级人民法院院长和本级人民检察院检察长。选出或者罢免人民检察院检察长，须报上级人民检察院检察长提请该级人民代表大会常务委员会批准。</p>
</li>
<li><p>第一百零二条 省、直辖市、设区的市的人民代表大会代表受原选举单位的监督；县、不设区的市、市辖区、乡、民族乡、镇的人民代表大会代表受选民的监督。</p>
<p>地方各级人民代表大会代表的选举单位和选民有权依照法律规定的程序罢免由他们选出的代表。</p>
</li>
<li><p>第一百零三条 县级以上的地方各级人民代表大会常务委员会由主任、副主任若干人和委员若干人组成，对本级人民代表大会负责并报告工作。</p>
<p>县级以上的地方各级人民代表大会选举并有权罢免本级人民代表大会常务委员会的组成人员。</p>
<p>县级以上的地方各级人民代表大会常务委员会的组成人员不得担任国家行政机关、监察机关、审判机关和检察机关的职务。</p>
</li>
<li><p>第一百零四条 县级以上的地方各级人民代表大会常务委员会讨论、决定本行政区域内各方面工作的重大事项；监督本级人民政府、监察委员会、人民法院和人民检察院的工作；撤销本级人民政府的不适当的决定和命令；撤销下一级人民代表大会的不适当的决议；依照法律规定的权限决定国家机关工作人员的任免；在本级人民代表大会闭会期间，罢免和补选上一级人民代表大会的个别代表。</p>
</li>
<li><p>第一百零五条 地方各级人民政府是地方各级国家权力机关的执行机关，是地方各级国家行政机关。</p>
<p>地方各级人民政府实行省长、市长、县长、区长、乡长、镇长负责制。</p>
</li>
<li><p>第一百零六条 地方各级人民政府每届任期同本级人民代表大会每届任期相同。</p>
</li>
<li><p>第一百零七条 县级以上地方各级人民政府依照法律规定的权限，管理本行政区域内的经济、教育、科学、文化、卫生、体育事业、城乡建设事业和财政、民政、公安、民族事务、司法行政、计划生育等行政工作，发布决定和命令，任免、培训、考核和奖惩行政工作人员。</p>
<p>乡、民族乡、镇的人民政府执行本级人民代表大会的决议和上级国家行政机关的决定和命令，管理本行政区域内的行政工作。</p>
<p>省、直辖市的人民政府决定乡、民族乡、镇的建置和区域划分。</p>
</li>
<li><p>第一百零八条 县级以上的地方各级人民政府领导所属各工作部门和下级人民政府的工作，有权改变或者撤销所属各工作部门和下级人民政府的不适当的决定。</p>
</li>
<li><p>第一百零九条 县级以上的地方各级人民政府设立审计机关。地方各级审计机关依照法律规定独立行使审计监督权，对本级人民政府和上一级审计机关负责。</p>
</li>
<li><p>第一百一十条 地方各级人民政府对本级人民代表大会负责并报告工作。县级以上的地方各级人民政府在本级人民代表大会闭会期间，对本级人民代表大会常务委员会负责并报告工作。</p>
<p>地方各级人民政府对上一级国家行政机关负责并报告工作。全国地方各级人民政府都是国务院统一领导下的国家行政机关，都服从国务院。</p>
</li>
<li><p>第一百一十一条 城市和农村按居民居住地区设立的居民委员会或者村民委员会是基层群众性自治组织。居民委员会、村民委员会的主任、副主任和委员由居民选举。居民委员会、村民委员会同基层政权的相互关系由法律规定。</p>
<p>居民委员会、村民委员会设人民调解、治安保卫、公共卫生等委员会，办理本居住地区的公共事务和公益事业，调解民间纠纷，协助维护社会治安，并且向人民政府反映群众的意见、要求和提出建议。</p>
</li>
</ul>
<h3 id="第六节-民族自治地方的自治机关"><a href="#第六节-民族自治地方的自治机关" class="headerlink" title="第六节 民族自治地方的自治机关"></a>第六节 民族自治地方的自治机关</h3><ul>
<li><p>第一百一十二条 民族自治地方的自治机关是自治区、自治州、自治县的人民代表大会和人民政府。</p>
</li>
<li><p>第一百一十三条 自治区、自治州、自治县的人民代表大会中，除实行区域自治的民族的代表外，其他居住在本行政区域内的民族也应当有适当名额的代表。</p>
<p>自治区、自治州、自治县的人民代表大会常务委员会中应当有实行区域自治的民族的公民担任主任或者副主任。</p>
</li>
<li><p>第一百一十四条 自治区主席、自治州州长、自治县县长由实行区域自治的民族的公民担任。</p>
</li>
<li><p>第一百一十五条 自治区、自治州、自治县的自治机关行使宪法第三章第五节规定的地方国家机关的职权，同时依照宪法、民族区域自治法和其他法律规定的权限行使自治权，根据本地方实际情况贯彻执行国家的法律、政策。</p>
</li>
<li><p>第一百一十六条 民族自治地方的人民代表大会有权依照当地民族的政治、经济和文化的特点，制定自治条例和单行条例。自治区的自治条例和单行条例，报全国人民代表大会常务委员会批准后生效。自治州、自治县的自治条例和单行条例，报省或者自治区的人民代表大会常务委员会批准后生效，并报全国人民代表大会常务委员会备案。</p>
</li>
<li><p>第一百一十七条 民族自治地方的自治机关有管理地方财政的自治权。凡是依照国家财政体制属于民族自治地方的财政收入，都应当由民族自治地方的自治机关自主地安排使用。</p>
</li>
<li><p>第一百一十八条 民族自治地方的自治机关在国家计划的指导下，自主地安排和管理地方性的经济建设事业。</p>
<p>国家在民族自治地方开发资源、建设企业的时候，应当照顾民族自治地方的利益。</p>
</li>
<li><p>第一百一十九条 民族自治地方的自治机关自主地管理本地方的教育、科学、文化、卫生、体育事业，保护和整理民族的文化遗产，发展和繁荣民族文化。</p>
</li>
<li><p>第一百二十条 民族自治地方的自治机关依照国家的军事制度和当地的实际需要，经国务院批准，可以组织本地方维护社会治安的公安部队。</p>
</li>
<li><p>第一百二十一条 民族自治地方的自治机关在执行职务的时候，依照本民族自治地方自治条例的规定，使用当地通用的一种或者几种语言文字。</p>
</li>
<li><p>第一百二十二条 国家从财政、物资、技术等方面帮助各少数民族加速发展经济建设和文化建设事业。</p>
<p>国家帮助民族自治地方从当地民族中大量培养各级干部、各种专业人才和技术工人。</p>
</li>
</ul>
<h3 id="第七节-监察委员会"><a href="#第七节-监察委员会" class="headerlink" title="第七节 监察委员会"></a>第七节 监察委员会</h3><ul>
<li><p>第一百二十三条 中华人民共和国各级监察委员会是国家的监察机关。</p>
</li>
<li><p>第一百二十四条 中华人民共和国设立国家监察委员会和地方各级监察委员会。监察委员会由下列人员组成</p>
<p>主任，</p>
<p>副主任若干人，</p>
<p>委员若干人。</p>
<p>监察委员会主任每届任期同本级人民代表大会每届任期相同。国家监察委员会主任连续任职不得超过两届。</p>
<p>监察委员会的组织和职权由法律规定。</p>
</li>
<li><p>第一百二十五条 中华人民共和国国家监察委员会是最高监察机关。</p>
<p>国家监察委员会领导地方各级监察委员会的工作，上级监察委员会领导下级监察委员会的工作。</p>
</li>
<li><p>第一百二十六条 国家监察委员会对全国人民代表大会和全国人民代表大会常务委员会负责。地方各级监察委员会对产生它的国家权力机关和上一级监察委员会负责。</p>
</li>
<li><p>第一百二十七条 监察委员会依照法律规定独立行使监察权，不受行政机关、社会团体和个人的干涉。</p>
<p>监察机关办理职务违法和职务犯罪案件，应当与审判机关、检察机关、执法部门互相配合，互相制约。</p>
</li>
</ul>
<h3 id="第八节-人民法院和人民检察院"><a href="#第八节-人民法院和人民检察院" class="headerlink" title="第八节 人民法院和人民检察院"></a>第八节 人民法院和人民检察院</h3><ul>
<li><p>第一百二十八条 中华人民共和国人民法院是国家的审判机关。</p>
</li>
<li><p>第一百二十九条 中华人民共和国设立最高人民法院、地方各级人民法院和军事法院等专门人民法院。</p>
<p>最高人民法院院长每届任期同全国人民代表大会每届任期相同，连续任职不得超过两届。</p>
<p>人民法院的组织由法律规定。</p>
</li>
<li><p>第一百三十条 人民法院审理案件，除法律规定的特别情况外，一律公开进行。被告人有权获得辩护。</p>
</li>
<li><p>第一百三十一条 人民法院依照法律规定独立行使审判权，不受行政机关、社会团体和个人的干涉。</p>
</li>
<li><p>第一百三十二条 最高人民法院是最高审判机关。</p>
<p>最高人民法院监督地方各级人民法院和专门人民法院的审判工作，上级人民法院监督下级人民法院的审判工作。</p>
</li>
<li><p>第一百三十三条 最高人民法院对全国人民代表大会和全国人民代表大会常务委员会负责。地方各级人民法院对产生它的国家权力机关负责。</p>
</li>
<li><p>第一百三十四条 中华人民共和国人民检察院是国家的法律监督机关。</p>
</li>
<li><p>第一百三十五条 中华人民共和国设立最高人民检察院、地方各级人民检察院和军事检察院等专门人民检察院。</p>
<p>最高人民检察院检察长每届任期同全国人民代表大会每届任期相同，连续任职不得超过两届。</p>
<p>人民检察院的组织由法律规定。</p>
</li>
<li><p>第一百三十六条 人民检察院依照法律规定独立行使检察权，不受行政机关、社会团体和个人的干涉。</p>
</li>
<li><p>第一百三十七条 最高人民检察院是最高检察机关。</p>
<p>最高人民检察院领导地方各级人民检察院和专门人民检察院的工作，上级人民检察院领导下级人民检察院的工作。</p>
</li>
<li><p>第一百三十八条 最高人民检察院对全国人民代表大会和全国人民代表大会常务委员会负责。地方各级人民检察院对产生它的国家权力机关和上级人民检察院负责。</p>
</li>
<li><p>第一百三十九条 各民族公民都有用本民族语言文字进行诉讼的权利。人民法院和人民检察院对于不通晓当地通用的语言文字的诉讼参与人，应当为他们翻译。</p>
<p>在少数民族聚居或者多民族共同居住的地区，应当用当地通用的语言进行审理；起诉书、判决书、布告和其他文书应当根据实际需要使用当地通用的一种或者几种文字。</p>
</li>
<li><p>第一百四十条 人民法院、人民检察院和公安机关办理刑事案件，应当分工负责，互相配合，互相制约，以保证准确有效地执行法律。</p>
</li>
</ul>
<h2 id="第四章-国旗、国歌、国徽、首都"><a href="#第四章-国旗、国歌、国徽、首都" class="headerlink" title="第四章 国旗、国歌、国徽、首都"></a>第四章 国旗、国歌、国徽、首都</h2><ul>
<li><p>第一百四十一条 中华人民共和国国旗是五星红旗。</p>
<p>中华人民共和国国歌是《义勇军进行曲》。</p>
</li>
<li><p>第一百四十二条 中华人民共和国国徽，中间是五星照耀下的天安门，周围是谷穗和齿轮。</p>
</li>
<li><p>第一百四十三条 中华人民共和国首都是北京。</p>
</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>使用 column 工具格式化文本输出</title>
    <url>/2025/01/10/%E4%BD%BF%E7%94%A8column-%E5%B7%A5%E5%85%B7%E6%A0%BC%E5%BC%8F%E5%8C%96%E6%96%87%E6%9C%AC%E8%BE%93%E5%87%BA/</url>
    <content><![CDATA[<h2 id="关于-column"><a href="#关于-column" class="headerlink" title="关于 column"></a>关于 <code>column</code></h2><p>在Linux中查看数据文本时总会出现可读性低的问题（比如 <code>/etc/passwd</code>），本文将介绍一个非常实用的工具叫做 <code>column</code>，它可以帮助我们将文本数据以整齐的列格式输出。</p>
<p><code>column</code> 命令来自包含大量工具的软件包 <a href="https://git.kernel.org/pub/scm/utils/util-linux/util-linux.git/about/">util-linux</a>，其中的工具涵盖了系统管理、文件操作以及硬件监控多个方面。</p>
<span id="more"></span>

<h2 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h2><p><code>column</code> 命令的基本语法如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">column [options] [file ...]</span><br></pre></td></tr></table></figure>

<p>如果没有指定文件，<code>column</code> 会从标准输入（管道符、重定向、直接键盘输入）读取数据。</p>
<p><strong>options</strong>:</p>
<ul>
<li><em><strong>-J</strong></em>: 此选项指定系统以 JSON 格式显示输出。</li>
<li><em><strong>-c</strong></em>: 根据每行允许的总字符数定义输出的宽度。</li>
<li><em><strong>-d</strong></em>: 用于定义不打印标题行。</li>
<li><em><strong>-N</strong></em>: 定义列名，每个名称用逗号（“,”）分隔。</li>
<li><em><strong>-H</strong></em>: 用于隐藏指定的列，使其不显示。</li>
<li><em><strong>-V</strong></em>: 显示版本信息并退出。</li>
<li><em><strong>-h</strong></em>: 显示帮助信息并退出。</li>
<li><em><strong>-s</strong></em>: 定义输出的列分隔符。</li>
<li><em><strong>-t</strong></em>: 用于通过确定列数来创建表格。</li>
<li><em><strong>-R</strong></em>: 用于将特定列中的文本右对齐。</li>
<li><em><strong>-T</strong></em>: 允许系统在必要时截断文本，以便调整列宽，确保列不会变得过宽。</li>
<li><em><strong>-O</strong></em>: 允许用户定义列的显示顺序。</li>
<li><em><strong>-L</strong></em>: 在每行后插入空行。</li>
</ul>
<h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p><code>/etc/passwd</code> 文件是一个包含用户账户信息的系统文件，通常每行的格式如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">username:x:UID:GID:comment:home_directory:shell</span><br></pre></td></tr></table></figure>

<p>这里的 <code>x</code> 表示加密后的密码已经被存储在 <code>/etc/shadow</code> 中。</p>
<p>我们可以使用 <code>column</code> 命令来格式化 <code>/etc/passwd</code> 文件的内容，使其更易读。</p>
<ul>
<li><p>示例1 格式化输出 设定分隔符为<code>:</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ column -t -s: /etc/passwd</span><br><span class="line">root             x  0      0      root                        /root              /bin/bash</span><br><span class="line">daemon           x  1      1      daemon                      /usr/sbin          /usr/sbin/nologin</span><br><span class="line">bin              x  2      2      bin                         /bin               /usr/sbin/nologin</span><br><span class="line">sys              x  3      3      sys                         /dev               /usr/sbin/nologin</span><br><span class="line"><span class="built_in">sync</span>             x  4      65534  <span class="built_in">sync</span>                        /bin               /bin/sync</span><br><span class="line">games            x  5      60     games                       /usr/games         /usr/sbin/nologin</span><br></pre></td></tr></table></figure>
</li>
<li><p>示例2 隐藏特定的列</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ column -t -s: -H 2,4,5,7 /etc/passwd</span><br><span class="line">root             0      /root</span><br><span class="line">daemon           1      /usr/sbin</span><br><span class="line">bin              2      /bin</span><br><span class="line">sys              3      /dev</span><br><span class="line"><span class="built_in">sync</span>             4      /bin</span><br><span class="line">games            5      /usr/games</span><br></pre></td></tr></table></figure>
</li>
<li><p>示例3 自定义列名</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ column -t -s: -N <span class="string">&quot;Username,Password,UID,GID,Comment,Home,Shell&quot;</span> /etc/passwd</span><br><span class="line">Username         Password  UID    GID    Comment                     Home               Shell</span><br><span class="line">root             x         0      0      root                        /root              /bin/bash</span><br><span class="line">daemon           x         1      1      daemon                      /usr/sbin          /usr/sbin/nologin</span><br><span class="line">bin              x         2      2      bin                         /bin               /usr/sbin/nologin</span><br><span class="line">sys              x         3      3      sys                         /dev               /usr/sbin/nologin</span><br><span class="line"><span class="built_in">sync</span>             x         4      65534  <span class="built_in">sync</span>                        /bin               /bin/sync</span><br><span class="line">games            x         5      60     games                       /usr/games         /usr/sbin/nologin</span><br></pre></td></tr></table></figure>
</li>
<li><p>示例4 指定特定列的顺序 </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 效果同 -O &quot;7,1&quot;</span></span><br><span class="line">$ column -t -s: -O <span class="string">&quot;7,1,2,3,4,5&quot;</span> -N <span class="string">&quot;Username,Password,UID,GID,Comment,Home,Shell&quot;</span> /etc/passwd</span><br><span class="line">Shell              Username         Password  UID    GID    Comment                     Home</span><br><span class="line">/bin/bash          root             x         0      0      root                        /root</span><br><span class="line">/usr/sbin/nologin  daemon           x         1      1      daemon                      /usr/sbin</span><br><span class="line">/usr/sbin/nologin  bin              x         2      2      bin                         /bin</span><br><span class="line">/usr/sbin/nologin  sys              x         3      3      sys                         /dev</span><br><span class="line">/bin/sync          <span class="built_in">sync</span>             x         4      65534  <span class="built_in">sync</span>                        /bin</span><br><span class="line">/usr/sbin/nologin  games            x         5      60     games                       /usr/games</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>使用个人用户免费的ubuntu-pro</title>
    <url>/2024/07/02/%E4%BD%BF%E7%94%A8%E4%B8%AA%E4%BA%BA%E7%94%A8%E6%88%B7%E5%85%8D%E8%B4%B9%E7%9A%84ubuntu-pro/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Ubuntu发行版的终端广告（<a href="https://bugs.launchpad.net/ubuntu/+source/ubuntu-advantage-tools/+bug/1950692">Bug #1950692</a>）和snap（<a href="https://blog.linuxmint.com/?p=3766">Mint Blog中的观点</a>）一直是令人诟病的内容，也是我切换到Debian的原因。</p>
<p>但是，今天还是要注册一下Ubuntu Pro，毕竟还有一些以前安装的机器在运行着已经EOL的Ubuntu版本，需要安装一些安全补丁。</p>
<img src="https://s2.loli.net/2024/07/02/zZBFKwEVMH9YtJP.jpg" alt="pic" height="400">

<h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><p>打开Ubuntu Pro的网站 <a href="https://ubuntu.com/pro">https://ubuntu.com/pro</a></p>
<p>点击Get Ubuntu Pro now并选择Myself，点击Register登录帐号确认。</p>
<p>获取Token，复制下面的命令。</p>
<p><img src="https://s2.loli.net/2024/07/02/d8pbVvHP6MJm5yF.png" alt="Screenshot_20240702_201037-1.png"></p>
<p>这里以**Ubuntu 18.04 LTS (Bionic Beaver)**为例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@ecs-a2nGQ:~<span class="comment"># pro version</span></span><br><span class="line">32.3~18.04</span><br></pre></td></tr></table></figure>

<p>如果不存在<code>pro</code> 命令，使用 <code>sudo apt update &amp;&amp; sudo apt install ubuntu-advantage-tools</code>安装。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@ecs-a2nGQ:~<span class="comment"># sudo pro attach &#123;token&#125;</span></span><br><span class="line">Enabling Ubuntu Pro: ESM Apps</span><br><span class="line">Ubuntu Pro: ESM Apps enabled</span><br><span class="line">Enabling Ubuntu Pro: ESM Infra</span><br><span class="line">Ubuntu Pro: ESM Infra enabled</span><br><span class="line">Enabling Livepatch</span><br><span class="line">Livepatch enabled</span><br><span class="line">This machine is now attached to <span class="string">&#x27;Ubuntu Pro - free personal subscription&#x27;</span></span><br><span class="line"></span><br><span class="line">SERVICE          ENTITLED  STATUS       DESCRIPTION</span><br><span class="line">cc-eal           <span class="built_in">yes</span>       disabled     Common Criteria EAL2 Provisioning Packages</span><br><span class="line">cis              <span class="built_in">yes</span>       disabled     Security compliance and audit tools</span><br><span class="line">esm-apps         <span class="built_in">yes</span>       enabled      Expanded Security Maintenance <span class="keyword">for</span> Applications</span><br><span class="line">esm-infra        <span class="built_in">yes</span>       enabled      Expanded Security Maintenance <span class="keyword">for</span> Infrastructure</span><br><span class="line">fips             <span class="built_in">yes</span>       disabled     NIST-certified FIPS crypto packages</span><br><span class="line">fips-updates     <span class="built_in">yes</span>       disabled     FIPS compliant crypto packages with stable security updates</span><br><span class="line">livepatch        <span class="built_in">yes</span>       enabled      Canonical Livepatch service</span><br><span class="line">ros              <span class="built_in">yes</span>       disabled     Security Updates <span class="keyword">for</span> the Robot Operating System</span><br><span class="line">ros-updates      <span class="built_in">yes</span>       disabled     All Updates <span class="keyword">for</span> the Robot Operating System</span><br><span class="line"></span><br><span class="line">NOTICES</span><br><span class="line">Operation <span class="keyword">in</span> progress: pro attach</span><br><span class="line"></span><br><span class="line">For a list of all Ubuntu Pro services, run <span class="string">&#x27;pro status --all&#x27;</span></span><br><span class="line">Enable services with: pro <span class="built_in">enable</span> &lt;service&gt;</span><br><span class="line"></span><br><span class="line">     Account: &#123;you_email_address&#125;</span><br><span class="line">Subscription: Ubuntu Pro - free personal subscription</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@ecs-a2nGQ:~<span class="comment"># apt update</span></span><br><span class="line">Hit:1 http://security.ubuntu.com/ubuntu bionic-security InRelease</span><br><span class="line">Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease                 </span><br><span class="line">Hit:3 http://archive.ubuntu.com/ubuntu bionic-updates InRelease         </span><br><span class="line">Hit:4 http://archive.ubuntu.com/ubuntu bionic-backports InRelease                                </span><br><span class="line">Hit:5 https://esm.ubuntu.com/apps/ubuntu bionic-apps-security InRelease                          </span><br><span class="line">Hit:6 https://esm.ubuntu.com/apps/ubuntu bionic-apps-updates InRelease</span><br><span class="line">Hit:7 https://esm.ubuntu.com/infra/ubuntu bionic-infra-security InRelease</span><br><span class="line">Hit:8 https://esm.ubuntu.com/infra/ubuntu bionic-infra-updates InRelease</span><br><span class="line">Reading package lists... Done                     </span><br><span class="line">Building dependency tree       </span><br><span class="line">Reading state information... Done</span><br><span class="line">123 packages can be upgraded. Run <span class="string">&#x27;apt list --upgradable&#x27;</span> to see them.</span><br><span class="line">root@ecs-a2nGQ:~<span class="comment"># </span></span><br></pre></td></tr></table></figure>

<p>upgrade 之后重启机器，完成更新。</p>
]]></content>
  </entry>
  <entry>
    <title>修电脑军规 完整版 20条</title>
    <url>/2023/05/31/%E4%BF%AE%E7%94%B5%E8%84%91%E5%86%9B%E8%A7%84%E5%AE%8C%E6%95%B4%E7%89%8820%E6%9D%A1/</url>
    <content><![CDATA[<blockquote>
<p>作者：上官夏沐</p>
</blockquote>
<blockquote>
<p>链接：<a href="https://www.zhihu.com/question/593353383/answer/2996325609">https://www.zhihu.com/question/593353383/answer/2996325609</a></p>
</blockquote>
<blockquote>
<p>来源：知乎</p>
</blockquote>
<ol>
<li>首先记住这句话：永远不要承认自己是高手，因为这个称号是要付出代价的。</li>
<li>接到陌生电话后，一定要问清楚对方有什么事情，然后再告诉他（她）当前你目前所在的位置。</li>
<li>永远不要试图通过电话或者 QQ 解决某个问题，对方很有可能不知道菜单是什么东西，这不能怨他们，只能怨你自己，因为你永远懒于解释给他们听。</li>
<li>不要想着立马可以解决遇到的问题，因为你所遇到的总是崩溃的系统或者处于崩溃边缘的系统。</li>
<li>如果对方允许你重新安装系统，那就不要试着去做任何修复工作，因为重装系统是最快解决问题的办法。</li>
<li>除了询问哪些资料需要备份，你不要提问对方任何问题，除非你的心理承受能力特别强。</li>
<li>学会保守做人，每次开工前，都记得告诉对方：“我可能无法最终解决问题，还要继续吗？”。</li>
<li>对电脑的外观检查永远是第一位的，看看线路是否连接正常，看看 USB 接口是否连接了其他设备等等。</li>
<li>相信硬件的抗噪能力，尽可能的情况下，不要打开对方的机箱。</li>
<li>没有做成医生，反倒被当作破坏者，那是很悲哀的事情。</li>
<li>做好被别人数落的心理准备，因为不懂电脑知识的人，往往懂得如何评价别人。如果人家说他的内存有 200G，你千万不要纠正说是硬盘，否则，你的噩运即将来临。</li>
<li>不知道菜单是什么东西的人，一般也会知道虚拟内存是怎么回事的，按照他的要求去调整就可以了，反正这个不会影响到你完成修理工作。</li>
<li>告诉对方，你没有任何杀毒软件，否则，您所安装的杀毒软件都是最差的，也是问题最多的。</li>
<li>别让自己成为处理打印机故障的高手，告诉你，打印机的麻烦事情可比电脑多多了。</li>
<li>坚决不要帮别人购买电脑，尤其是组装机，除非你想背上吃回扣的骂名，然后每天屁颠屁颠的去帮他们处理故障。</li>
<li>不要反感以下两句话，它会伴随你很久时间：第一句：“我的电脑又出大问题了。”第二句：“你还是过来帮我看看吧。”</li>
<li>尽量不要去动别人的电脑，否则，若干天以后，你的这一行动会导致他的系统崩溃并带来埋怨。</li>
<li>不要去纠正别人的任何错误，除非你有说服别人的超强能力。</li>
<li>尽可能的前提下不要互相传递任何电子文档，因为你的文件很有可能被指责为病毒。</li>
<li>不要害怕指责，因为你无法逃避。</li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>关于在数据库中存储用户密码和验证</title>
    <url>/2024/09/24/%E5%85%B3%E4%BA%8E%E5%9C%A8%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%AD%E5%AD%98%E5%82%A8%E7%94%A8%E6%88%B7%E5%AF%86%E7%A0%81%E5%92%8C%E9%AA%8C%E8%AF%81/</url>
    <content><![CDATA[<h2 id="数据库中加密存储密码和验证密码的步骤"><a href="#数据库中加密存储密码和验证密码的步骤" class="headerlink" title="数据库中加密存储密码和验证密码的步骤"></a>数据库中加密存储密码和验证密码的步骤</h2><p><strong>以下内容来自ChatGLM</strong></p>
<h3 id="存储密码"><a href="#存储密码" class="headerlink" title="存储密码"></a>存储密码</h3><ol>
<li><strong>生成盐（Salt）</strong>：<ul>
<li>为每个用户生成一个随机盐。</li>
</ul>
</li>
<li><strong>密码与盐结合</strong>：<ul>
<li>将用户密码与盐值结合。</li>
</ul>
</li>
<li><strong>加密</strong>：<ul>
<li>使用上述算法对结合后的密码进行加密。</li>
</ul>
</li>
<li><strong>存储</strong>：<ul>
<li>将加密后的密码（哈希值）和盐存储在数据库中。</li>
</ul>
</li>
</ol>
<h3 id="验证密码"><a href="#验证密码" class="headerlink" title="验证密码"></a>验证密码</h3><ol>
<li><p><strong>从数据库中取出盐和哈希值</strong>：</p>
<ul>
<li>在用户尝试登录时，系统需要从数据库中检索与该用户账户关联的盐值和之前存储的哈希密码。</li>
</ul>
</li>
<li><p><strong>使用相同的算法和盐对用户输入的密码进行加密</strong>：</p>
<ul>
<li>将用户输入的密码与从数据库中取出的盐值结合，然后使用相同的加密算法对结合后的密码进行加密。</li>
</ul>
</li>
<li><p><strong>比较加密后的值与数据库中的哈希值是否相同</strong>：</p>
<ul>
<li>将新计算出的哈希值与数据库中存储的哈希值进行比较。如果两者匹配，说明用户输入的密码正确；如果不匹配，说明密码错误。</li>
</ul>
</li>
</ol>
<p><strong>关于盐：</strong></p>
<p>内容来自 <a href="https://www.cnblogs.com/xjnotxj/p/12716981.html">https://www.cnblogs.com/xjnotxj/p/12716981.html</a></p>
<ul>
<li>盐不能太短</li>
<li>盐不能重复使用（否则一破解，所有的都遭殃）</li>
<li>盐随机变化（例如，虽用户名不重复，但用户名不能拿来当盐）</li>
</ul>
<h2 id="TypeScript-代码实现"><a href="#TypeScript-代码实现" class="headerlink" title="TypeScript 代码实现"></a>TypeScript 代码实现</h2><h3 id="生成加密后的哈希密码"><a href="#生成加密后的哈希密码" class="headerlink" title="生成加密后的哈希密码"></a>生成加密后的哈希密码</h3><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> crypto <span class="keyword">from</span> <span class="string">&#x27;crypto&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 生成盐值(生成随机字符串转换16进制并截取指定长度)</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">generateSalt</span>(<span class="params">length: <span class="built_in">number</span> = <span class="number">16</span></span>): <span class="built_in">string</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> crypto.<span class="title function_">randomBytes</span>(<span class="title class_">Math</span>.<span class="title function_">ceil</span>(length / <span class="number">2</span>)).<span class="title function_">toString</span>(<span class="string">&#x27;hex&#x27;</span>).<span class="title function_">slice</span>(<span class="number">0</span>, length);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 哈希密码</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">hashPassword</span>(<span class="params">password: <span class="built_in">string</span>, salt: <span class="built_in">string</span></span>): <span class="built_in">string</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> hash = crypto.<span class="title function_">createHash</span>(<span class="string">&#x27;sha256&#x27;</span>);</span><br><span class="line">    hash.<span class="title function_">update</span>(password + salt);</span><br><span class="line">    <span class="keyword">return</span> hash.<span class="title function_">digest</span>(<span class="string">&#x27;hex&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 示例用法</span></span><br><span class="line"><span class="keyword">const</span> username = <span class="string">&#x27;张三&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> password = <span class="string">&#x27;myPassword123&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> salt = <span class="title function_">generateSalt</span>();</span><br><span class="line"><span class="keyword">const</span> hashedPassword = <span class="title function_">hashPassword</span>(password, salt);</span><br><span class="line"><span class="keyword">const</span> userInfo = &#123;</span><br><span class="line">    <span class="attr">username</span>: username,</span><br><span class="line">    <span class="attr">hashedPassword</span>: hashedPassword,</span><br><span class="line">    <span class="attr">salt</span>: salt,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(userInfo)</span><br><span class="line"></span><br><span class="line"><span class="comment">// &#123;</span></span><br><span class="line"><span class="comment">//     username: &#x27;张三&#x27;,</span></span><br><span class="line"><span class="comment">//     hashedPassword: &#x27;d199f982ad02822110e05685241cb134b965e1d767dcad581d0d2be99f72d585&#x27;,</span></span><br><span class="line"><span class="comment">//     salt: &#x27;be90365eb56291d2&#x27;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="使用保存的哈希密码和盐值对用户输入的密码进行验证"><a href="#使用保存的哈希密码和盐值对用户输入的密码进行验证" class="headerlink" title="使用保存的哈希密码和盐值对用户输入的密码进行验证"></a>使用保存的哈希密码和盐值对用户输入的密码进行验证</h3><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> crypto <span class="keyword">from</span> <span class="string">&#x27;crypto&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> userInfo = &#123;</span><br><span class="line">    <span class="attr">username</span>: <span class="string">&#x27;张三&#x27;</span>,</span><br><span class="line">    <span class="attr">hashedPassword</span>: <span class="string">&#x27;d199f982ad02822110e05685241cb134b965e1d767dcad581d0d2be99f72d585&#x27;</span>,</span><br><span class="line">    <span class="attr">salt</span>: <span class="string">&#x27;be90365eb56291d2&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 哈希密码</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">hashPassword</span>(<span class="params">password: <span class="built_in">string</span>, salt: <span class="built_in">string</span></span>): <span class="built_in">string</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> hash = crypto.<span class="title function_">createHash</span>(<span class="string">&#x27;sha256&#x27;</span>);</span><br><span class="line">    hash.<span class="title function_">update</span>(password + salt);</span><br><span class="line">    <span class="keyword">return</span> hash.<span class="title function_">digest</span>(<span class="string">&#x27;hex&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> inputPassword1 = <span class="string">&#x27;myPassword123&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> inputPassword2 = <span class="string">&#x27;myPassword321&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> hashedInputPassword1 = <span class="title function_">hashPassword</span>(inputPassword1, userInfo.<span class="property">salt</span>);</span><br><span class="line"><span class="keyword">const</span> hashedInputPassword2 = <span class="title function_">hashPassword</span>(inputPassword2, userInfo.<span class="property">salt</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (hashedInputPassword1 == userInfo.<span class="property">hashedPassword</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;密码正确&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;密码错误&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (hashedInputPassword2 == userInfo.<span class="property">hashedPassword</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;密码正确&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;密码错误&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//结果可知 inputpassword1验证正确 inputpassword2验证错误</span></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>关于处理CORS问题</title>
    <url>/2024/11/27/%E5%85%B3%E4%BA%8E%E5%A4%84%E7%90%86CORS%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h2 id="CORS（跨源资源共享）？"><a href="#CORS（跨源资源共享）？" class="headerlink" title="CORS（跨源资源共享）？"></a>CORS（跨源资源共享）？</h2><blockquote>
<p>以下内容引用自 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CORS">mdn web docs</a></p>
<p><strong>跨源资源共享</strong>（<a href="https://developer.mozilla.org/zh-CN/docs/Glossary/CORS">CORS</a>，或通俗地译为跨域资源共享）是一种基于 <a href="https://developer.mozilla.org/zh-CN/docs/Glossary/HTTP">HTTP</a> 头的机制，该机制通过允许服务器标示除了它自己以外的其他<a href="https://developer.mozilla.org/zh-CN/docs/Glossary/Origin">源</a>（域、协议或端口），使得浏览器允许这些源访问加载自己的资源。跨源资源共享还通过一种机制来检查服务器是否会允许要发送的真实请求，该机制通过浏览器发起一个到服务器托管的跨源资源的“预检”请求。在预检中，浏览器发送的头中标示有 HTTP 方法和真实请求中会用到的头。</p>
</blockquote>
<p>举例：在 <code>http://localhost:8000</code> 的网页上使用 <code>fetch()</code> 对 <code>https://sm.ms/api/v2/</code> 这个图床的api接口发送请求即会产生CORS问题。</p>
<span id="more"></span>

<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><ul>
<li><p>在Web服务器设置HTTP头部信息，比如<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Access-Control-Allow-Origin">Access-Control-Allow-Origin</a></p>
<p>这里以 Nginx 为例：</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment"># https://enable-cors.org/server_nginx.html</span></span><br><span class="line"><span class="comment"># 为nginx配置一个宽松的CORS（跨域资源共享）设置</span></span><br><span class="line"></span><br><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">    <span class="comment"># 处理预检请求（OPTIONS请求）</span></span><br><span class="line">    <span class="attribute">if</span> (<span class="variable">$request_method</span> = <span class="string">&#x27;OPTIONS&#x27;</span>) &#123;</span><br><span class="line">        <span class="comment"># 允许所有来源的请求</span></span><br><span class="line">        <span class="attribute">add_header</span> <span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span> <span class="string">&#x27;*&#x27;</span>;</span><br><span class="line">        <span class="comment"># 允许的HTTP方法</span></span><br><span class="line">        <span class="attribute">add_header</span> <span class="string">&#x27;Access-Control-Allow-Methods&#x27;</span> <span class="string">&#x27;GET, POST, OPTIONS&#x27;</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 自定义头部和其他浏览器应该支持但可能不支持的头部</span></span><br><span class="line">        <span class="attribute">add_header</span> <span class="string">&#x27;Access-Control-Allow-Headers&#x27;</span> <span class="string">&#x27;DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range&#x27;</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 告诉客户端此预检信息有效期为20天（1728000秒）</span></span><br><span class="line">        <span class="attribute">add_header</span> <span class="string">&#x27;Access-Control-Max-Age&#x27;</span> <span class="number">1728000</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 返回一个空的响应体，状态码为204（无内容）</span></span><br><span class="line">        <span class="attribute">add_header</span> <span class="string">&#x27;Content-Type&#x27;</span> <span class="string">&#x27;text/plain; charset=utf-8&#x27;</span>;</span><br><span class="line">        <span class="attribute">add_header</span> <span class="string">&#x27;Content-Length&#x27;</span> <span class="number">0</span>;</span><br><span class="line">        <span class="attribute">return</span> <span class="number">204</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 处理POST请求</span></span><br><span class="line">    <span class="attribute">if</span> (<span class="variable">$request_method</span> = <span class="string">&#x27;POST&#x27;</span>) &#123;</span><br><span class="line">        <span class="comment"># 允许所有来源的请求</span></span><br><span class="line">        <span class="attribute">add_header</span> <span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span> <span class="string">&#x27;*&#x27;</span> always;</span><br><span class="line">        <span class="comment"># 允许的HTTP方法</span></span><br><span class="line">        <span class="attribute">add_header</span> <span class="string">&#x27;Access-Control-Allow-Methods&#x27;</span> <span class="string">&#x27;GET, POST, OPTIONS&#x27;</span> always;</span><br><span class="line">        <span class="comment"># 允许的请求头部</span></span><br><span class="line">        <span class="attribute">add_header</span> <span class="string">&#x27;Access-Control-Allow-Headers&#x27;</span> <span class="string">&#x27;DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range&#x27;</span> always;</span><br><span class="line">        <span class="comment"># 允许客户端访问的响应头部</span></span><br><span class="line">        <span class="attribute">add_header</span> <span class="string">&#x27;Access-Control-Expose-Headers&#x27;</span> <span class="string">&#x27;Content-Length,Content-Range&#x27;</span> always;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 处理GET请求</span></span><br><span class="line">    <span class="attribute">if</span> (<span class="variable">$request_method</span> = <span class="string">&#x27;GET&#x27;</span>) &#123;</span><br><span class="line">        <span class="comment"># 允许所有来源的请求</span></span><br><span class="line">        <span class="attribute">add_header</span> <span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span> <span class="string">&#x27;*&#x27;</span> always;</span><br><span class="line">        <span class="comment"># 允许的HTTP方法</span></span><br><span class="line">        <span class="attribute">add_header</span> <span class="string">&#x27;Access-Control-Allow-Methods&#x27;</span> <span class="string">&#x27;GET, POST, OPTIONS&#x27;</span> always;</span><br><span class="line">        <span class="comment"># 允许的请求头部</span></span><br><span class="line">        <span class="attribute">add_header</span> <span class="string">&#x27;Access-Control-Allow-Headers&#x27;</span> <span class="string">&#x27;DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range&#x27;</span> always;</span><br><span class="line">        <span class="comment"># 允许客户端访问的响应头部</span></span><br><span class="line">        <span class="attribute">add_header</span> <span class="string">&#x27;Access-Control-Expose-Headers&#x27;</span> <span class="string">&#x27;Content-Length,Content-Range&#x27;</span> always;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


</li>
<li><p>使用CORS header proxy 服务器</p>
<p>这里以 Cloudflare Workers 为例：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// https://developers.cloudflare.com/workers/examples/cors-header-proxy/</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">fetch</span>(<span class="params">request</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> corsHeaders = &#123;</span><br><span class="line">            <span class="string">&quot;Access-Control-Allow-Origin&quot;</span>: <span class="string">&quot;*&quot;</span>, <span class="comment">// 允许所有来源的请求</span></span><br><span class="line">            <span class="string">&quot;Access-Control-Allow-Methods&quot;</span>: <span class="string">&quot;GET,HEAD,POST,OPTIONS&quot;</span>, <span class="comment">// 允许的HTTP方法</span></span><br><span class="line">            <span class="string">&quot;Access-Control-Max-Age&quot;</span>: <span class="string">&quot;86400&quot;</span>, <span class="comment">// 预检请求的缓存时间（24小时）</span></span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 远程第三方API的URL，该API没有实现CORS</span></span><br><span class="line">        <span class="keyword">const</span> <span class="variable constant_">API_URL</span> = <span class="string">&quot;https://examples.cloudflareworkers.com/demos/demoapi&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// CORS反向代理的端点</span></span><br><span class="line">        <span class="keyword">const</span> <span class="variable constant_">PROXY_ENDPOINT</span> = <span class="string">&quot;/corsproxy/&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 用于返回HTML响应的辅助函数</span></span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">rawHtmlResponse</span>(<span class="params">html</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(html, &#123;</span><br><span class="line">                <span class="attr">headers</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;content-type&quot;</span>: <span class="string">&quot;text/html;charset=UTF-8&quot;</span>, <span class="comment">// 设置响应头为HTML</span></span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 演示页面的HTML内容</span></span><br><span class="line">        <span class="keyword">const</span> <span class="variable constant_">DEMO_PAGE</span> = <span class="string">`</span></span><br><span class="line"><span class="string">        &lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="string">        &lt;html&gt;</span></span><br><span class="line"><span class="string">        &lt;body&gt;</span></span><br><span class="line"><span class="string">          &lt;h1&gt;API GET without CORS Proxy&lt;/h1&gt;</span></span><br><span class="line"><span class="string">          &lt;a target=&quot;_blank&quot; href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#Checking_that_the_fetch_was_successful&quot;&gt;Shows TypeError: Failed to fetch since CORS is misconfigured&lt;/a&gt;</span></span><br><span class="line"><span class="string">          &lt;p id=&quot;noproxy-status&quot;/&gt;</span></span><br><span class="line"><span class="string">          &lt;code id=&quot;noproxy&quot;&gt;Waiting&lt;/code&gt;</span></span><br><span class="line"><span class="string">          &lt;h1&gt;API GET with CORS Proxy&lt;/h1&gt;</span></span><br><span class="line"><span class="string">          &lt;p id=&quot;proxy-status&quot;/&gt;</span></span><br><span class="line"><span class="string">          &lt;code id=&quot;proxy&quot;&gt;Waiting&lt;/code&gt;</span></span><br><span class="line"><span class="string">          &lt;h1&gt;API POST with CORS Proxy + Preflight&lt;/h1&gt;</span></span><br><span class="line"><span class="string">          &lt;p id=&quot;proxypreflight-status&quot;/&gt;</span></span><br><span class="line"><span class="string">          &lt;code id=&quot;proxypreflight&quot;&gt;Waiting&lt;/code&gt;</span></span><br><span class="line"><span class="string">          &lt;script&gt;</span></span><br><span class="line"><span class="string">          let reqs = &#123;&#125;;</span></span><br><span class="line"><span class="string">          reqs.noproxy = () =&gt; &#123;</span></span><br><span class="line"><span class="string">            return fetch(&quot;<span class="subst">$&#123;API_URL&#125;</span>&quot;).then(r =&gt; r.json())</span></span><br><span class="line"><span class="string">          &#125;</span></span><br><span class="line"><span class="string">          reqs.proxy = async () =&gt; &#123;</span></span><br><span class="line"><span class="string">            let href = &quot;<span class="subst">$&#123;PROXY_ENDPOINT&#125;</span>?apiurl=<span class="subst">$&#123;API_URL&#125;</span>&quot;</span></span><br><span class="line"><span class="string">            return fetch(window.location.origin + href).then(r =&gt; r.json())</span></span><br><span class="line"><span class="string">          &#125;</span></span><br><span class="line"><span class="string">          reqs.proxypreflight = async () =&gt; &#123;</span></span><br><span class="line"><span class="string">            let href = &quot;<span class="subst">$&#123;PROXY_ENDPOINT&#125;</span>?apiurl=<span class="subst">$&#123;API_URL&#125;</span>&quot;</span></span><br><span class="line"><span class="string">            let response = await fetch(window.location.origin + href, &#123;</span></span><br><span class="line"><span class="string">              method: &quot;POST&quot;,</span></span><br><span class="line"><span class="string">              headers: &#123;</span></span><br><span class="line"><span class="string">                &quot;Content-Type&quot;: &quot;application/json&quot;</span></span><br><span class="line"><span class="string">              &#125;,</span></span><br><span class="line"><span class="string">              body: JSON.stringify(&#123;</span></span><br><span class="line"><span class="string">                msg: &quot;Hello world!&quot;</span></span><br><span class="line"><span class="string">              &#125;)</span></span><br><span class="line"><span class="string">            &#125;)</span></span><br><span class="line"><span class="string">            return response.json()</span></span><br><span class="line"><span class="string">          &#125;</span></span><br><span class="line"><span class="string">          (async () =&gt; &#123;</span></span><br><span class="line"><span class="string">          for (const [reqName, req] of Object.entries(reqs)) &#123;</span></span><br><span class="line"><span class="string">            try &#123;</span></span><br><span class="line"><span class="string">              let data = await req()</span></span><br><span class="line"><span class="string">              document.getElementById(reqName).innerHTML = JSON.stringify(data)</span></span><br><span class="line"><span class="string">            &#125; catch (e) &#123;</span></span><br><span class="line"><span class="string">              document.getElementById(reqName).innerHTML = e</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">          &#125;</span></span><br><span class="line"><span class="string">        &#125;)()</span></span><br><span class="line"><span class="string">          &lt;/script&gt;</span></span><br><span class="line"><span class="string">        &lt;/body&gt;</span></span><br><span class="line"><span class="string">        &lt;/html&gt;</span></span><br><span class="line"><span class="string">      `</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 处理请求的函数</span></span><br><span class="line">        <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">handleRequest</span>(<span class="params">request</span>) &#123;</span><br><span class="line">            <span class="keyword">const</span> url = <span class="keyword">new</span> <span class="title function_">URL</span>(request.<span class="property">url</span>);</span><br><span class="line">            <span class="keyword">let</span> apiUrl = url.<span class="property">searchParams</span>.<span class="title function_">get</span>(<span class="string">&quot;apiurl&quot;</span>); <span class="comment">// 获取请求中的apiurl参数</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (apiUrl == <span class="literal">null</span>) &#123;</span><br><span class="line">                apiUrl = <span class="variable constant_">API_URL</span>; <span class="comment">// 如果没有提供apiurl参数，则使用默认的API_URL</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 重写请求以指向API URL，并设置Origin头以避免CORS问题</span></span><br><span class="line">            request = <span class="keyword">new</span> <span class="title class_">Request</span>(apiUrl, request);</span><br><span class="line">            request.<span class="property">headers</span>.<span class="title function_">set</span>(<span class="string">&quot;Origin&quot;</span>, <span class="keyword">new</span> <span class="title function_">URL</span>(apiUrl).<span class="property">origin</span>);</span><br><span class="line">            <span class="keyword">let</span> response = <span class="keyword">await</span> <span class="title function_">fetch</span>(request);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 重新创建响应以便修改响应头</span></span><br><span class="line">            response = <span class="keyword">new</span> <span class="title class_">Response</span>(response.<span class="property">body</span>, response);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 设置CORS头</span></span><br><span class="line">            response.<span class="property">headers</span>.<span class="title function_">set</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, url.<span class="property">origin</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 添加Vary头以便浏览器正确缓存响应</span></span><br><span class="line">            response.<span class="property">headers</span>.<span class="title function_">append</span>(<span class="string">&quot;Vary&quot;</span>, <span class="string">&quot;Origin&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> response;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 处理OPTIONS请求的函数</span></span><br><span class="line">        <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">handleOptions</span>(<span class="params">request</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (</span><br><span class="line">                request.<span class="property">headers</span>.<span class="title function_">get</span>(<span class="string">&quot;Origin&quot;</span>) !== <span class="literal">null</span> &amp;&amp;</span><br><span class="line">                request.<span class="property">headers</span>.<span class="title function_">get</span>(<span class="string">&quot;Access-Control-Request-Method&quot;</span>) !== <span class="literal">null</span> &amp;&amp;</span><br><span class="line">                request.<span class="property">headers</span>.<span class="title function_">get</span>(<span class="string">&quot;Access-Control-Request-Headers&quot;</span>) !== <span class="literal">null</span></span><br><span class="line">            ) &#123;</span><br><span class="line">                <span class="comment">// 处理CORS预检请求</span></span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(<span class="literal">null</span>, &#123;</span><br><span class="line">                    <span class="attr">headers</span>: &#123;</span><br><span class="line">                        ...corsHeaders,</span><br><span class="line">                        <span class="string">&quot;Access-Control-Allow-Headers&quot;</span>: request.<span class="property">headers</span>.<span class="title function_">get</span>(</span><br><span class="line">                            <span class="string">&quot;Access-Control-Request-Headers&quot;</span>,</span><br><span class="line">                        ),</span><br><span class="line">                    &#125;,</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// 处理标准的OPTIONS请求</span></span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(<span class="literal">null</span>, &#123;</span><br><span class="line">                    <span class="attr">headers</span>: &#123;</span><br><span class="line">                        <span class="title class_">Allow</span>: <span class="string">&quot;GET, HEAD, POST, OPTIONS&quot;</span>,</span><br><span class="line">                    &#125;,</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> url = <span class="keyword">new</span> <span class="title function_">URL</span>(request.<span class="property">url</span>);</span><br><span class="line">        <span class="keyword">if</span> (url.<span class="property">pathname</span>.<span class="title function_">startsWith</span>(<span class="variable constant_">PROXY_ENDPOINT</span>)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (request.<span class="property">method</span> === <span class="string">&quot;OPTIONS&quot;</span>) &#123;</span><br><span class="line">                <span class="comment">// 处理CORS预检请求</span></span><br><span class="line">                <span class="keyword">return</span> <span class="title function_">handleOptions</span>(request);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (</span><br><span class="line">                request.<span class="property">method</span> === <span class="string">&quot;GET&quot;</span> ||</span><br><span class="line">                request.<span class="property">method</span> === <span class="string">&quot;HEAD&quot;</span> ||</span><br><span class="line">                request.<span class="property">method</span> === <span class="string">&quot;POST&quot;</span></span><br><span class="line">            ) &#123;</span><br><span class="line">                <span class="comment">// 处理对API服务器的请求</span></span><br><span class="line">                <span class="keyword">return</span> <span class="title function_">handleRequest</span>(request);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(<span class="literal">null</span>, &#123;</span><br><span class="line">                    <span class="attr">status</span>: <span class="number">405</span>,</span><br><span class="line">                    <span class="attr">statusText</span>: <span class="string">&quot;Method Not Allowed&quot;</span>, <span class="comment">// 返回405状态码，表示方法不允许</span></span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_">rawHtmlResponse</span>(<span class="variable constant_">DEMO_PAGE</span>); <span class="comment">// 返回演示页面的HTML内容</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="相关推荐"><a href="#相关推荐" class="headerlink" title="相关推荐"></a>相关推荐</h2><p><a href="https://github.com/Zibri/cloudflare-cors-anywhere">使用Cloudflare Workers转发任意请求 Zibri&#x2F;cloudflare-cors-anywhere</a></p>
<p><a href="https://github.com/duzhuoshanwai/smms-proxy-workers">我写的smms-proxy-workers，用于代理smms图床api duzhuoshanwai&#x2F;smms-proxy-workers</a></p>
<p><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CORS/Errors">mdn web docs - CORS 错误</a></p>
]]></content>
  </entry>
  <entry>
    <title>再见2024，你好2025</title>
    <url>/2024/12/31/%E5%86%8D%E8%A7%812024%EF%BC%8C%E4%BD%A0%E5%A5%BD2025/</url>
    <content><![CDATA[<p>最期待：天国：拯救2 <a href="https://www.kingdomcomerpg.com/">https://www.kingdomcomerpg.com/</a></p>
]]></content>
  </entry>
  <entry>
    <title>行政区划代码</title>
    <url>/2022/01/18/%E5%8C%BA%E5%88%92%E4%BB%A3%E7%A0%81/</url>
    <content><![CDATA[<h1 id="县及县以上行政区划代码"><a href="#县及县以上行政区划代码" class="headerlink" title="县及县以上行政区划代码"></a>县及县以上行政区划代码</h1><p><a href="https://gitter.im/cn/GB2260"><img src="https://badges.gitter.im/Join%20Chat.svg" alt="Join the chat at https://gitter.im/cn/GB2260"></a><br><a href="spec.md"><img src="http://img.shields.io/badge/GB%2FT-2260-blue.svg?style=flat" alt="GB/T 2260"></a></p>
<p>中华人民共和国国家标准 GB&#x2F;T 2260 行政区划代码</p>
<p>数据来源：</p>
<ol>
<li><a href="http://www.stats.gov.cn/tjsj/tjbz/xzqhdm/">http://www.stats.gov.cn/tjsj/tjbz/xzqhdm/</a></li>
<li><a href="http://www.mca.gov.cn/article/sj/tjbz/a/">http://www.mca.gov.cn/article/sj/tjbz/a/</a></li>
</ol>
<p>你可以利用国家标准数据构建自己项目的数据库。</p>
<h2 id="Badges"><a href="#Badges" class="headerlink" title="Badges"></a>Badges</h2><p>Badges with spec versions:</p>
<p><a href="https://github.com/cn/GB2260/blob/v0.2/spec.md"><img src="https://img.shields.io/badge/GB%2FT%202260-v0.2-blue.svg" alt="Spec v0.2"></a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Badge: https://img.shields.io/badge/GB%2FT%202260-v0.2-blue.svg</span><br><span class="line">Link: https://github.com/cn/GB2260/blob/v0.2/spec.md</span><br></pre></td></tr></table></figure>


<h2 id="语言实现"><a href="#语言实现" class="headerlink" title="语言实现"></a>语言实现</h2><p>目前已有的语言实现</p>
<h3 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h3><p>Repository: <a href="https://github.com/cn/GB2260.py">https://github.com/cn/GB2260.py</a></p>
<p><a href="https://travis-ci.org/cn/GB2260.py"><img src="https://travis-ci.org/cn/GB2260.py.svg?branch=master" alt="Build Status"></a><br><a href="https://coveralls.io/github/cn/GB2260.py?branch=master"><img src="https://coveralls.io/repos/cn/GB2260.py/badge.svg?branch=master&service=github" alt="Coverage Status"></a><br><a href="https://pypi.python.org/pypi/GB2260"><img src="https://badge.fury.io/py/gb2260.svg" alt="PyPI Release"></a></p>
<h3 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h3><p>Repository: <a href="https://github.com/cn/GB2260.js">https://github.com/cn/GB2260.js</a></p>
<p><a href="https://travis-ci.org/cn/GB2260.js"><img src="https://travis-ci.org/cn/GB2260.py.svg?branch=master" alt="Build Status"></a><br><a href="https://coveralls.io/github/cn/GB2260.js?branch=master"><img src="https://coveralls.io/repos/cn/GB2260.js/badge.svg?branch=master&service=github" alt="Coverage Status"></a><br><a href="https://npmjs.org/package/gb2260"><img src="https://badge.fury.io/js/gb2260.svg" alt="NPM Release"></a></p>
<h3 id="Ruby"><a href="#Ruby" class="headerlink" title="Ruby"></a>Ruby</h3><p>Repository: <a href="https://github.com/cn/GB2260.rb">https://github.com/cn/GB2260.rb</a></p>
<p><a href="https://travis-ci.org/cn/GB2260.rb"><img src="https://travis-ci.org/cn/GB2260.rb.svg?branch=master" alt="Build Status"></a><br><a href="https://coveralls.io/github/cn/GB2260.rb?branch=master"><img src="https://coveralls.io/repos/cn/GB2260.rb/badge.svg?branch=master&service=github" alt="Coverage Status"></a><br><a href="http://badge.fury.io/rb/GB2260"><img src="https://badge.fury.io/rb/GB2260.svg" alt="Gem Version"></a></p>
<h3 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h3><p>Repository: <a href="https://github.com/cn/GB2260.java">https://github.com/cn/GB2260.java</a></p>
<p><a href="https://travis-ci.org/cn/GB2260.java"><img src="https://travis-ci.org/cn/GB2260.java.svg?branch=master" alt="Build Status"></a><br><a href="https://coveralls.io/github/cn/GB2260.java?branch=master"><img src="https://coveralls.io/repos/cn/GB2260.java/badge.svg?branch=master&service=github" alt="Coverage Status"></a></p>
<h3 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h3><p>Repository: <a href="https://github.com/cn/GB2260.php">https://github.com/cn/GB2260.php</a></p>
<p><a href="https://travis-ci.org/cn/GB2260.php"><img src="https://travis-ci.org/cn/GB2260.php.svg?branch=master" alt="Build Status"></a></p>
<h3 id="Go"><a href="#Go" class="headerlink" title="Go"></a>Go</h3><p>Repository: <a href="https://github.com/cn/GB2260.go">https://github.com/cn/GB2260.go</a></p>
<h3 id="Elixir"><a href="#Elixir" class="headerlink" title="Elixir"></a>Elixir</h3><p>Repository: <a href="https://github.com/cn/GB2260.ex">https://github.com/cn/GB2260.ex</a></p>
<p><a href="https://travis-ci.org/cn/GB2260.ex"><img src="https://travis-ci.org/cn/GB2260.ex.svg?branch=master" alt="Build Status"></a></p>
<h3 id="Swift"><a href="#Swift" class="headerlink" title="Swift"></a>Swift</h3><p>Repository: <a href="https://github.com/cn/GB2260.swift">https://github.com/cn/GB2260.swift</a></p>
<p><a href="https://travis-ci.org/cn/GB2260.swift"><img src="https://travis-ci.org/cn/GB2260.swift.svg?branch=master" alt="Build Status"></a></p>
<h3 id="NET-C"><a href="#NET-C" class="headerlink" title=".NET &#x2F; C#"></a>.NET &#x2F; C#</h3><p>Repository: <a href="https://github.com/cn/GB2260.cs">https://github.com/cn/GB2260.cs</a></p>
<p><a href="https://travis-ci.org/cn/GB2260.cs"><img src="https://travis-ci.org/cn/GB2260.cs.svg?branch=master" alt="Build Status"></a></p>
<h2 id="如何贡献"><a href="#如何贡献" class="headerlink" title="如何贡献"></a>如何贡献</h2><p>创建你熟悉的语言的模块，请务必使用 MIT&#x2F;BSD&#x2F;WTFPL 授权。</p>
]]></content>
  </entry>
  <entry>
    <title>核酸快给我捅穿了</title>
    <url>/2022/05/17/%E5%90%90%E6%A7%BD%E6%A0%B8%E9%85%B8/</url>
    <content><![CDATA[<p><a href="https://web.archive.org/web/20220516203105/https://news.cctv.com/2022/05/01/ARTIxsZkDwCixy8wcd6UgoyY220501.shtml">https://web.archive.org/web/20220516203105/https://news.cctv.com/2022/05/01/ARTIxsZkDwCixy8wcd6UgoyY220501.shtml</a></p>
<p><img src="https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting/img/79dba237-8aab-4ccb-8c4b-6e9c0d7e48e0.png"></p>
<p><img src="https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting/img/FJdSIH8XIAASP_l.png"></p>
<p>免费的核酸就嗯造是吧 政府是真几把有钱 <del>大概看上海那样害怕了</del></p>
<p><img src="https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting/img/220517-041724.png"></p>
]]></content>
  </entry>
  <entry>
    <title>喜报：可能被GFW干了</title>
    <url>/2024/09/04/%E5%96%9C%E6%8A%A5%EF%BC%9A%E5%8F%AF%E8%83%BD%E8%A2%ABGFW%E5%B9%B2%E4%BA%86/</url>
    <content><![CDATA[<p><img src="https://s2.loli.net/2024/09/04/Grok6XtqzmaeTvJ.png" alt="Screenshot_20240904_150139.png"></p>
<p><strong>2024.09.24 更新</strong><br><img src="https://s2.loli.net/2024/09/24/sZzuJ5GCinSHjlK.png" alt="Screenshot_20240924_140722.png"></p>
]]></content>
  </entry>
  <entry>
    <title>尝试为电视盒子刷入Armbian</title>
    <url>/2024/02/24/%E5%B0%9D%E8%AF%95%E4%B8%BA%E7%94%B5%E8%A7%86%E7%9B%92%E5%AD%90%E5%88%B7%E5%85%A5Armbian/</url>
    <content><![CDATA[<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><ul>
<li><p>运营商的电视盒子一只 以晶晨芯片的CM311-1为例 <a href="https://github.com/ophub/amlogic-s9xxx-armbian/blob/main/README.cn.md">查看目前可用的设备列表</a></p>
</li>
<li><p>双公头usb线 没有现成的可以用两根不要的线剥开对接四芯自己制作</p>
</li>
<li><p>一个闲置的空u盘</p>
</li>
<li><p>（可选)晶晨盒子短接神器 没有的话其实用镊子短接也可以</p>
<p><img src="https://s2.loli.net/2024/02/24/m8dgyULcaBI5ehl.jpg"></p>
</li>
<li><p><a href="https://download.saint1337.top/tools/%E8%BF%90%E8%90%A5%E5%95%86%E7%9B%92%E5%AD%90Armbian/">晶晨烧录工具Amlogic_USB_Burning_Tool</a></p>
</li>
<li><p><a href="https://github.com/ophub/kernel/releases/tag/tools">选择合适的安卓底包用来开启adb</a>   <a href="https://download.saint1337.top/tools/%E8%BF%90%E8%90%A5%E5%95%86%E7%9B%92%E5%AD%90Armbian/%E5%AE%89%E5%8D%93%E5%BA%95%E5%8C%85/">部分底包分流</a></p>
</li>
<li><p>adb工具 <a href="https://www.xda-developers.com/install-adb-windows-macos-linux/">xda的安装教程参考</a> 或者使用开心电视助手替代 <a href="">链接</a></p>
</li>
<li><p><a href="https://etcher.balena.io/">balena etcher</a> 或者 <a href="https://rufus.ie/zh/">rufus</a> 用来写入Armbian镜像到u盘</p>
</li>
</ul>
<h2 id="刷入底包"><a href="#刷入底包" class="headerlink" title="刷入底包"></a>刷入底包</h2><p><img src="https://s2.loli.net/2024/02/24/4ctyfg5TbmIhWl8.png" alt="Snipaste_2024-02-24_12-19-51.png"></p>
<p>打开晶晨刷机工具，设置→导入镜像。</p>
<p><img src="https://s2.loli.net/2024/02/24/MuJr4amDBENfAIq.png" alt="Snipaste_2024-02-24_12-22-46.png"></p>
<p>点击开始后准备接入线。</p>
<p><img src="https://s2.loli.net/2024/02/24/VwXUPdhJ7rEM4pG.jpg" alt="1000070790.jpg"></p>
<p>关闭电源！！！ 插入刷机神器，双公线一头插入盒子靠近网口的那个usb口，另一头接入电脑usb口（2.0的可能好一点）。先在烧录工具上点开始，接入线，然后打开盒子上的电源开关等待烧录工具的提示即可。</p>
<h2 id="刷入Armbian镜像到U盘"><a href="#刷入Armbian镜像到U盘" class="headerlink" title="刷入Armbian镜像到U盘"></a>刷入Armbian镜像到U盘</h2><p>到<a href="https://github.com/ophub/amlogic-s9xxx-armbian/releases">release</a>中选择适合自己硬件的固件 使用Balena Etcher刷入</p>
<p>刷写之后的U盘，在设置盒子从U盘启动前先不要插入盒子。</p>
<p><img src="https://s2.loli.net/2024/02/24/rSdYsG67kZhORzo.png" alt="Snipaste_2024-02-24_18-03-10.png"></p>
<h2 id="使用ABD设置电视盒子从usb启动"><a href="#使用ABD设置电视盒子从usb启动" class="headerlink" title="使用ABD设置电视盒子从usb启动"></a>使用ABD设置电视盒子从usb启动</h2><h3 id="开启ADB"><a href="#开启ADB" class="headerlink" title="开启ADB"></a>开启ADB</h3><p>大部分安卓刷机包都已经设置了ADB调试。如果没有的话需要连点版本号进入开发者选项自行开启。</p>
<h3 id="使用命令行的ADB命令"><a href="#使用命令行的ADB命令" class="headerlink" title="使用命令行的ADB命令"></a>使用命令行的ADB命令</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">adb connect 192.168.2.162</span><br><span class="line">adb shell reboot update #输入命令之后再插入U盘！！！</span><br></pre></td></tr></table></figure>

<h3 id="使用开心电视助手"><a href="#使用开心电视助手" class="headerlink" title="使用开心电视助手"></a>使用开心电视助手</h3><p>在首页输入电视盒子的ip和默认端口5555→调试→从U盘&#x2F;SD卡启动 ！！！点击之后再插入U盘！！！</p>
<p>不要在安卓系统下插入U盘！！！可能会导致U盘中文件权限损坏，修复需要重新刷入Armbian镜像。</p>
<p><img src="https://s2.loli.net/2024/02/24/oTN5jRtLBuQKPCM.png" alt="Snipaste_2024-02-24_17-48-47.png"></p>
<p><img src="https://s2.loli.net/2024/02/24/9iB5pnROVIZHWza.png" alt="Snipaste_2024-02-24_17-49-02.png"></p>
<h2 id="使用SSH连接到重启之后的盒子并写入EMMC"><a href="#使用SSH连接到重启之后的盒子并写入EMMC" class="headerlink" title="使用SSH连接到重启之后的盒子并写入EMMC"></a>使用SSH连接到重启之后的盒子并写入EMMC</h2><p>盒子成功启动后会自动从DHCP服务器获取IP地址，进入路由器后台查看</p>
<p><img src="https://s2.loli.net/2024/02/24/IOmpHJrMWlknZ9N.png" alt="Snipaste_2024-02-24_18-09-44.png"></p>
<p>使用SSH连接工具连接后默认的用户&#x2F;密码是 root&#x2F;1234 跟随提示设置普通用户和更改密码</p>
<h3 id="写入EMMC"><a href="#写入EMMC" class="headerlink" title="写入EMMC"></a>写入EMMC</h3><p>这里直接照搬项目README</p>
<p>登录 Armbian 系统 (默认用户: root, 默认密码: 1234) → 输入命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">armbian-install</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>可选参数</th>
<th>默认值</th>
<th>选项</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>-m</td>
<td>no</td>
<td>yes&#x2F;no</td>
<td>使用 Mainline u-boot</td>
</tr>
<tr>
<td>-a</td>
<td>yes</td>
<td>yes&#x2F;no</td>
<td>使用 <a href="https://github.com/7Ji/ampart">ampart</a> 分区表调整工具</td>
</tr>
<tr>
<td>-l</td>
<td>no</td>
<td>yes&#x2F;no</td>
<td>List. 显示全部设备列表</td>
</tr>
</tbody></table>
<p>举例: <code>armbian-install -m yes -a no</code></p>
<p><strong>注意</strong>！！！有些型号写入EMMC可能会失败 需要反编译dtb文件 修改emmc频率</p>
<p>几个参考的issue </p>
<p><a href="https://github.com/ophub/amlogic-s9xxx-armbian/issues/1603#issuecomment-1675634318">https://github.com/ophub/amlogic-s9xxx-armbian/issues/1603#issuecomment-1675634318</a></p>
<p><a href="https://github.com/ophub/amlogic-s9xxx-armbian/issues/2007#issue-2074390845">https://github.com/ophub/amlogic-s9xxx-armbian/issues/2007#issue-2074390845</a></p>
<h2 id="armbian-update命令升级内核之后成砖头的解决办法"><a href="#armbian-update命令升级内核之后成砖头的解决办法" class="headerlink" title="armbian-update命令升级内核之后成砖头的解决办法"></a>armbian-update命令升级内核之后成砖头的解决办法</h2><p>盒子输入armbian之后默认启动顺序是 tf卡→u盘→emmc</p>
<p>将任意烧录好armbian系统的u盘插上 等待启动后执行命令<code>armbian-update -s</code>用来恢复系统内核</p>
<p>参见<a href="https://github.com/ophub/amlogic-s9xxx-armbian/blob/main/documents/README.cn.md#10-%E6%9B%B4%E6%96%B0-armbian-%E5%86%85%E6%A0%B8">https://github.com/ophub/amlogic-s9xxx-armbian/blob/main/documents/README.cn.md#10-%E6%9B%B4%E6%96%B0-armbian-%E5%86%85%E6%A0%B8</a></p>
]]></content>
  </entry>
  <entry>
    <title>掌玩mini(Alldocube iPlay 50 mini pro/T811M)刷入安卓GSI和简单的体验报告</title>
    <url>/2024/04/20/%E6%8E%8C%E7%8E%A9mini-Alldocube-iPlay-50-mini-pro-T811M-%E5%88%B7%E5%85%A5%E5%AE%89%E5%8D%93GSI/</url>
    <content><![CDATA[<h2 id="什么是GSI"><a href="#什么是GSI" class="headerlink" title="什么是GSI"></a>什么是GSI</h2><p>以下内容来自于 <a href="https://source.android.com/docs/core/tests/vts/gsi?hl=zh-cn">AOSP文档</a></p>
<blockquote>
<p>通用系统映像 (GSI) 是指已针对 Android 设备调整配置的系统映像。GSI 被视为“纯 Android”实现，它包含未经修改的 Android 开源项目 (AOSP) 代码，任何搭载 Android 9 或更高版本的 Android 设备都能顺利运行这种代码。</p>
<p>GSI 用于运行 VTS 和 CTS-on-GSI 测试。为确保运行最新版 Android 的设备正确实现供应商接口，您需要将 Android 设备的系统映像替换为 GSI，然后使用供应商测试套件 (VTS) 和兼容性测试套件 (CTS) 来测试设备。</p>
</blockquote>
<h2 id="掌玩mini的简单介绍"><a href="#掌玩mini的简单介绍" class="headerlink" title="掌玩mini的简单介绍"></a>掌玩mini的简单介绍</h2><ul>
<li>8.4英寸全贴合屏幕 1920*1200 虽然显示效果不咋地用来读读文档够用</li>
<li>Helio G99 上古soc几百块要什么自行车</li>
<li>8+128 要什么自行车</li>
<li>sim卡sd卡</li>
<li>有3.5mm耳机孔 单扬声器垃圾水平</li>
<li>5000mAh 18w(实测根本没有)</li>
<li>做工有点差边框可能有异响 论坛反馈可能有断触情况需要自行拆机垫胶带</li>
</ul>
<h2 id="刷入GSI"><a href="#刷入GSI" class="headerlink" title="刷入GSI"></a>刷入GSI</h2><p><strong>注意!!!</strong> 进行一下操作前需要刷入官方国际版20230818固件，否则可能会无限重启</p>
<h3 id="需要准备的工具的链接"><a href="#需要准备的工具的链接" class="headerlink" title="需要准备的工具的链接"></a>需要准备的工具的链接</h3><p><a href="https://spflashtools.com/">spflashtools</a> 降级刷入工具</p>
<p><a href="https://androidmtk.com/download-mtk-usb-all-drivers">mtk_usb_all</a> 联发科驱动</p>
<p><a href="https://xdaforums.com/t/recovery-unofficial-beta-twrp-3-7-1-for-alldocube-iplay-50-mini-pro.4658429/">xda论坛老哥移植的第三方recovery</a> 可选</p>
<p><a href="https://developer.android.com/tools/releases/platform-tools">platform-tools</a> 需要使用到的adb和fastboot工具</p>
<h3 id="刷入官方国际版固件20230818"><a href="#刷入官方国际版固件20230818" class="headerlink" title="刷入官方国际版固件20230818"></a>刷入官方国际版固件20230818</h3><p><strong>确保已经安装了联发科驱动!!!</strong></p>
<ol>
<li><p>下载固件包并解压 <a href="https://www.alldocube.com/en/firmware/alldocube-iplay-50-mini-prot811m-firmware-download/">官网</a> <a href="https://download.saint1337.top/tools/t811m/iPlay50miniPro(T811M)_EN_20230818.rar">个人网盘分流</a></p>
</li>
<li><p>将设备关机</p>
</li>
<li><p>打开spflashtool 按照图中设置Download-XML为 .&#x2F;iPlay50miniPro(T811M)_EN_20230818&#x2F;download_agent&#x2F;flash.xml</p>
<p>将Download Only改为Firmware Upgrade</p>
</li>
</ol>
<p><img src="https://s2.loli.net/2024/04/20/HqS1MjPx3wLdfQr.png"></p>
<ol start="4">
<li>点击绿色箭头那个Download 然后把关机状态的平板连上电脑 等待完成</li>
</ol>
<h3 id="刷入GSI-1"><a href="#刷入GSI-1" class="headerlink" title="刷入GSI"></a>刷入GSI</h3><p><strong>建议添加adb和fastboot命令到PATH</strong></p>
<ol>
<li><p>重启进入系统后连击版本号进入开发者模式打开 USB调试和OEM解锁</p>
</li>
<li><p><strong>解压 <code>lineage-21.0-20240217-UNOFFICIAL-arm64_bgN.img.xz</code> 得到img文件</strong></p>
</li>
<li><p>在解压好的platform-tools文件夹下打开命令行</p>
<p> <code>adb reboot bootloader</code> 在平板上确认后重启到fastboot模式</p>
<p> <code>fastboot flashing unlock</code> 按照平板上的提示按下音量减 解锁 <strong>这一步会清空所有数据!!!注意备份</strong></p>
<p> <code>fastboot --disable-verity --disable-verification flash vbmeta_a vbmeta.img</code> 刷入vbmeta并<strong>禁用Android Verified Boot (AVB)</strong></p>
<p> <code>fastboot --disable-verity --disable-verification flash vbmeta_b vbmeta.img</code> 同上</p>
</li>
<li><p>重启到fastbootd后操作</p>
<p> <code>fastboot reboot fastboot</code> 从fastboot重启到<strong>fastbootd模式</strong></p>
<p> <code>fastboot set_active a</code> 可能需要切换到分区a</p>
<p> <code>fastboot delete-logical-partition product_a</code> 删除分区 product_a 这个分区是出厂自带的</p>
<p> <code>fastboot erase system_a</code> 擦除分区 system_a</p>
<p> <code>fastboot flash system_a lineage-21.0-20240217-UNOFFICIAL-arm64_bgN.img</code> 刷写上面解压的img到 system</p>
<p> <code>fastboot flash vendor_boot OFOX-IP50MP-BETA.img</code> 刷入第三方rec (可选)</p>
<p> <code>fastboot flash vendor mod-vendor.img</code> 刷入修改好的vendor</p>
<p> <code>fastboot flash boot magisk_patched-27000_l2O2k.img</code> 刷入修补好的boot 用于获取root权限</p>
<p> <code>fastboot erase userdata</code> 擦除 userdata分区</p>
<p> <code>fastboot erase metadata</code> 擦除metadata分区</p>
</li>
<li><p>重启系统 <code>fastboot reboot</code> 等待开机</p>
</li>
</ol>
<h3 id="开机后的一些准备工作"><a href="#开机后的一些准备工作" class="headerlink" title="开机后的一些准备工作"></a>开机后的一些准备工作</h3><ul>
<li><p>安装Magisk <a href="https://magiskmanager.com/downloading-magisk-manager">https://magiskmanager.com/downloading-magisk-manager</a></p>
<p><img src="https://s2.loli.net/2024/04/21/IsNLwlW4M6xSC2k.jpg" alt="1000071653.jpg"></p>
</li>
<li><p>修改dpi <code>adb shell wm density 300</code></p>
</li>
<li><p>修复耳机 </p>
<p><code>adb.exe shell</code></p>
<p><code>su</code> 切换到root用户 需要在平板上确认允许</p>
<p><code>setprop persist.sys.overlay.devinputjack true</code> 然后重启设备</p>
</li>
</ul>
<p> <strong>enjoy !</strong></p>
]]></content>
  </entry>
  <entry>
    <title>搬家整理网络--停更</title>
    <url>/2024/01/20/%E6%90%AC%E5%AE%B6%E6%95%B4%E7%90%86%E7%BD%91%E7%BB%9C-%E5%81%9C%E6%9B%B4/</url>
    <content><![CDATA[<p>如题</p>
]]></content>
  </entry>
  <entry>
    <title>提问的智慧</title>
    <url>/2022/01/28/%E6%8F%90%E9%97%AE%E7%9A%84%E6%99%BA%E6%85%A7/</url>
    <content><![CDATA[<h1 id="提问的智慧"><a href="#提问的智慧" class="headerlink" title="提问的智慧"></a>提问的智慧</h1><p><a href="https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/pulls"><img src="https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square" alt="PRs Welcome"></a></p>
<p><strong>How To Ask Questions The Smart Way</strong></p>
<p>Copyright © 2001,2006,2014 Eric S. Raymond, Rick Moen</p>
<p>本指南英文版版权为 Eric S. Raymond, Rick Moen 所有。</p>
<p>原文网址：<a href="http://www.catb.org/~esr/faqs/smart-questions.html">http://www.catb.org/~esr&#x2F;faqs&#x2F;smart-questions.html</a></p>
<p>Copyleft 2001 by D.H.Grand(nOBODY&#x2F;Ginux), 2010 by Gasolin, 2015 by Ryan Wu</p>
<p>本中文指南是基于原文 3.10 版以及 2010 年由 <a href="https://github.com/gasolin">Gasolin</a> 所翻译版本的最新翻译；</p>
<p>协助指出翻译问题，<strong>请<a href="https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/issues/new">发 issue</a>，或直接<a href="https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/compare">发 pull request</a> 给我。</strong></p>
<p>本文另有<a href="README.md">繁體中文版</a>。</p>
<h2 id="原文版本历史"><a href="#原文版本历史" class="headerlink" title="原文版本历史"></a><a href="history.md">原文版本历史</a></h2><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ul>
<li><a href="#%E5%A3%B0%E6%98%8E">声明</a></li>
<li><a href="#%E7%AE%80%E4%BB%8B">简介</a></li>
<li><a href="#%E5%9C%A8%E6%8F%90%E9%97%AE%E4%B9%8B%E5%89%8D">在提问之前</a></li>
<li><a href="#%E5%BD%93%E4%BD%A0%E6%8F%90%E9%97%AE%E6%97%B6">当你提问时</a><ul>
<li><a href="#%E6%85%8E%E9%80%89%E6%8F%90%E9%97%AE%E7%9A%84%E8%AE%BA%E5%9D%9B">慎选提问的论坛</a></li>
<li><a href="#stack-overflow">Stack Overflow</a></li>
<li><a href="#%E7%BD%91%E7%AB%99%E5%92%8C-irc-%E8%AE%BA%E5%9D%9B">网站和 IRC 论坛</a></li>
<li><a href="#%E7%AC%AC%E4%BA%8C%E6%AD%A5%E4%BD%BF%E7%94%A8%E9%A1%B9%E7%9B%AE%E9%82%AE%E4%BB%B6%E5%88%97%E8%A1%A8">第二步，使用项目邮件列表</a></li>
<li><a href="#%E4%BD%BF%E7%94%A8%E6%9C%89%E6%84%8F%E4%B9%89%E4%B8%94%E6%8F%8F%E8%BF%B0%E6%98%8E%E7%A1%AE%E7%9A%84%E6%A0%87%E9%A2%98">使用有意义且描述明确的标题</a></li>
<li><a href="#%E4%BD%BF%E9%97%AE%E9%A2%98%E5%AE%B9%E6%98%93%E5%9B%9E%E5%A4%8D">使问题容易回复</a></li>
<li><a href="#%E4%BD%BF%E7%94%A8%E6%B8%85%E6%99%B0%E3%80%81%E6%AD%A3%E7%A1%AE%E3%80%81%E7%B2%BE%E5%87%86%E4%B8%94%E5%90%88%E4%B9%8E%E8%AF%AD%E6%B3%95%E7%9A%84%E8%AF%AD%E5%8F%A5">使用清晰、正确、精准且合乎语法的语句</a></li>
<li><a href="#%E4%BD%BF%E7%94%A8%E6%98%93%E4%BA%8E%E8%AF%BB%E5%8F%96%E4%B8%94%E6%A0%87%E5%87%86%E7%9A%84%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F%E5%8F%91%E9%80%81%E9%97%AE%E9%A2%98">使用易于读取且标准的文件格式发送问题</a></li>
<li><a href="#%E7%B2%BE%E7%A1%AE%E5%9C%B0%E6%8F%8F%E8%BF%B0%E9%97%AE%E9%A2%98%E5%B9%B6%E8%A8%80%E4%B9%8B%E6%9C%89%E7%89%A9">精确地描述问题并言之有物</a></li>
<li><a href="#%E8%AF%9D%E4%B8%8D%E5%9C%A8%E5%A4%9A%E8%80%8C%E5%9C%A8%E7%B2%BE">话不在多而在精</a></li>
<li><a href="#%E5%88%AB%E5%8A%A8%E8%BE%84%E5%A3%B0%E7%A7%B0%E6%89%BE%E5%88%B0-bug">别动辄声称找到 Bug</a></li>
<li><a href="#%E4%BD%8E%E5%A3%B0%E4%B8%8B%E6%B0%94%E4%B8%8D%E8%83%BD%E4%BB%A3%E6%9B%BF%E4%BD%A0%E7%9A%84%E5%8A%9F%E8%AF%BE">低声下气不能代替你的功课</a></li>
<li><a href="#%E6%8F%8F%E8%BF%B0%E9%97%AE%E9%A2%98%E7%97%87%E7%8A%B6%E8%80%8C%E9%9D%9E%E4%BD%A0%E7%9A%84%E7%8C%9C%E6%B5%8B">描述问题症状而非你的猜测</a></li>
<li><a href="#%E6%8C%89%E5%8F%91%E7%94%9F%E6%97%B6%E9%97%B4%E5%85%88%E5%90%8E%E5%88%97%E5%87%BA%E9%97%AE%E9%A2%98%E7%97%87%E7%8A%B6">按发生时间先后列出问题症状</a></li>
<li><a href="#%E6%8F%8F%E8%BF%B0%E7%9B%AE%E6%A0%87%E8%80%8C%E4%B8%8D%E6%98%AF%E8%BF%87%E7%A8%8B">描述目标而不是过程</a></li>
<li><a href="#%E5%88%AB%E8%A6%81%E6%B1%82%E4%BD%BF%E7%94%A8%E7%A7%81%E4%BA%BA%E7%94%B5%E9%82%AE%E5%9B%9E%E5%A4%8D">别要求使用私人电邮回复</a></li>
<li><a href="#%E6%B8%85%E6%A5%9A%E6%98%8E%E7%A1%AE%E7%9A%84%E8%A1%A8%E8%BE%BE%E4%BD%A0%E7%9A%84%E9%97%AE%E9%A2%98%E4%BB%A5%E5%8F%8A%E9%9C%80%E6%B1%82">清楚明确的表达你的问题以及需求</a></li>
<li><a href="#%E8%AF%A2%E9%97%AE%E6%9C%89%E5%85%B3%E4%BB%A3%E7%A0%81%E7%9A%84%E9%97%AE%E9%A2%98%E6%97%B6">询问有关代码的问题时</a></li>
<li><a href="#%E5%88%AB%E6%8A%8A%E8%87%AA%E5%B7%B1%E5%AE%B6%E5%BA%AD%E4%BD%9C%E4%B8%9A%E7%9A%84%E9%97%AE%E9%A2%98%E8%B4%B4%E4%B8%8A%E6%9D%A5">别把自己家庭作业的问题贴上来</a></li>
<li><a href="#%E5%8E%BB%E6%8E%89%E6%97%A0%E6%84%8F%E4%B9%89%E7%9A%84%E6%8F%90%E9%97%AE%E5%8F%A5">去掉无意义的提问句</a></li>
<li><a href="#%E5%8D%B3%E4%BD%BF%E4%BD%A0%E5%BE%88%E6%80%A5%E4%B9%9F%E4%B8%8D%E8%A6%81%E5%9C%A8%E6%A0%87%E9%A2%98%E5%86%99%E7%B4%A7%E6%80%A5">即使你很急也不要在标题写紧急</a></li>
<li><a href="#%E7%A4%BC%E5%A4%9A%E4%BA%BA%E4%B8%8D%E6%80%AA%E8%80%8C%E4%B8%94%E6%9C%89%E6%97%B6%E8%BF%98%E5%BE%88%E6%9C%89%E5%B8%AE%E5%8A%A9">礼多人不怪，而且有时还很有帮助</a></li>
<li><a href="#%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E5%90%8E%E5%8A%A0%E4%B8%AA%E7%AE%80%E7%9F%AD%E7%9A%84%E8%A1%A5%E5%85%85%E8%AF%B4%E6%98%8E">问题解决后，加个简短的补充说明</a></li>
</ul>
</li>
<li><a href="#%E5%A6%82%E4%BD%95%E8%A7%A3%E8%AF%BB%E7%AD%94%E6%A1%88">如何解读答案</a><ul>
<li><a href="#rtfm-%E5%92%8C-stfw%E5%A6%82%E4%BD%95%E7%9F%A5%E9%81%93%E4%BD%A0%E5%B7%B2%E5%AE%8C%E5%85%A8%E6%90%9E%E7%A0%B8%E4%BA%86">RTFM 和 STFW：如何知道你已完全搞砸了</a></li>
<li><a href="#%E5%A6%82%E6%9E%9C%E8%BF%98%E6%98%AF%E6%90%9E%E4%B8%8D%E6%87%82">如果还是搞不懂</a></li>
<li><a href="#%E5%A4%84%E7%90%86%E6%97%A0%E7%A4%BC%E7%9A%84%E5%9B%9E%E5%BA%94">处理无礼的回应</a></li>
</ul>
</li>
<li><a href="#%E5%A6%82%E4%BD%95%E9%81%BF%E5%85%8D%E6%89%AE%E6%BC%94%E5%A4%B1%E8%B4%A5%E8%80%85">如何避免扮演失败者</a></li>
<li><a href="#%E4%B8%8D%E8%AF%A5%E9%97%AE%E7%9A%84%E9%97%AE%E9%A2%98">不该问的问题</a></li>
<li><a href="#%E5%A5%BD%E9%97%AE%E9%A2%98%E4%B8%8E%E8%A0%A2%E9%97%AE%E9%A2%98">好问题与蠢问题</a></li>
<li><a href="#%E5%A6%82%E6%9E%9C%E5%BE%97%E4%B8%8D%E5%88%B0%E5%9B%9E%E7%AD%94">如果得不到回答</a></li>
<li><a href="#%E5%A6%82%E4%BD%95%E6%9B%B4%E5%A5%BD%E5%9C%B0%E5%9B%9E%E7%AD%94%E9%97%AE%E9%A2%98">如何更好地回答问题</a></li>
<li><a href="#%E7%9B%B8%E5%85%B3%E8%B5%84%E6%BA%90">相关资源</a></li>
<li><a href="#%E9%B8%A3%E8%B0%A2">鸣谢</a></li>
</ul>
<h2 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h2><p>许多项目在他们的使用协助&#x2F;说明网页中链接了本指南，这么做很好，我们也鼓励大家都这么做。但如果你是负责管理这个项目网页的人，请在超链接附近的显著位置上注明：</p>
<p><strong>本指南不提供此项目的实际支持服务！</strong></p>
<p>我们已经深刻领教到少了上述声明所带来的痛苦。因为少了这点声明，我们不停地被一些白痴纠缠。这些白痴认为既然我们发布了这本指南，那么我们就有责任解决世上所有的技术问题。</p>
<p>如果你因寻求某些帮助而阅读本指南，并在离开时还觉得可以从本文作者这里得到直接帮助，那你就是我们之前说的那些白痴之一。别问我们问题，我们只会忽略你。我们在这本指南中想教你如何从那些真正懂得你所遇到的软件或硬件问题的人处取得协助，而 99% 的情况下那不会是我们。除非你确定本指南的作者之一刚好是你所遇到的问题领域的专家，否则请不要打扰我们，这样大家都会开心一点。</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>在<a href="http://www.catb.org/~esr/faqs/hacker-howto.html">黑客</a>的世界里，当你拋出一个技术问题时，最终是否能得到有用的回答，往往取决于你所提问和追问的方式。本指南将教你如何正确的提问以获得你满意的答案。</p>
<p>不只是黑客，现在开源（Open Source）软件已经相当盛行，你常常也可以由其他有经验的用户身上得到好答案，这是件<strong>好事</strong>；用户比起黑客来，往往对那些新手常遇到的问题更宽容一些。然而，将有经验的用户视为黑客，并采用本指南所提的方法与他们沟通，同样也是能从他们身上得到满意回答的最有效方式。</p>
<p>首先你应该明白，黑客们喜爱有挑战性的问题，或者能激发他们思维的好问题。如果我们并非如此，那我们也不会成为你想询问的对象。如果你给了我们一个值得反复咀嚼玩味的好问题，我们自会对你感激不尽。好问题是激励，是厚礼。好问题可以提高我们的理解力，而且通常会暴露我们以前从没意识到或者思考过的问题。对黑客而言，“好问题！”是诚挚的大力称赞。</p>
<p>尽管如此，黑客们有着蔑视或傲慢面对简单问题的坏名声，这有时让我们看起来对新手、无知者似乎较有敌意，但其实不是那样的。</p>
<p>我们不讳言我们对那些不愿思考、或者在发问前不做他们该做的事的人的蔑视。那些人是时间杀手 —— 他们只想索取，从不付出，消耗我们可用在更有趣的问题或更值得回答的人身上的时间。我们称这样的人为 <code>失败者（撸瑟）</code> （由于历史原因，我们有时把它拼作 <code>lusers</code>）。</p>
<p>我们意识到许多人只是想使用我们写的软件，他们对学习技术细节没有兴趣。对大多数人而言，电脑只是种工具，是种达到目的的手段而已。他们有自己的生活并且有更要紧的事要做。我们了解这点，也从不指望每个人都对这些让我们着迷的技术问题感兴趣。尽管如此，我们回答问题的风格是指向那些真正对此有兴趣并愿意主动参与解决问题的人，这一点不会变，也不该变。如果连这都变了，我们就是在降低做自己最擅长的事情上的效率。</p>
<p>我们（在很大程度上）是自愿的，从繁忙的生活中抽出时间来解答疑惑，而且时常被提问淹没。所以我们无情的滤掉一些话题，特别是拋弃那些看起来像失败者的家伙，以便更高效的利用时间来回答<code>赢家（winner）</code>的问题。</p>
<p>如果你厌恶我们的态度，高高在上，或过于傲慢，不妨也设身处地想想。我们并没有要求你向我们屈服 —— 事实上，我们大多数人非常乐意与你平等地交流，只要你付出小小努力来满足基本要求，我们就会欢迎你加入我们的文化。但让我们帮助那些不愿意帮助自己的人是没有效率的。无知没有关系，但装白痴就是不行。</p>
<p>所以，你不必在技术上很在行才能吸引我们的注意，但你必须表现出能引导你变得在行的特质 —— 机敏、有想法、善于观察、乐于主动参与解决问题。如果你做不到这些使你与众不同的事情，我们建议你花点钱找家商业公司签个技术支持服务合同，而不是要求黑客个人无偿地帮助你。</p>
<p>如果你决定向我们求助，当然你也不希望被视为失败者，更不愿成为失败者中的一员。能立刻得到快速并有效答案的最好方法，就是像赢家那样提问 —— 聪明、自信、有解决问题的思路，只是偶尔在特定的问题上需要获得一点帮助。</p>
<p>（欢迎对本指南提出改进意见。你可以 email 你的建议至 <a href="esr@thyrsus.com">esr@thyrsus.com</a> 或 <a href="respond-auto@linuxmafia.com">respond-auto@linuxmafia.com</a>。然而请注意，本文并非<a href="http://www.ietf.org/rfc/rfc1855.txt">网络礼节</a>的通用指南，而我们通常会拒绝无助于在技术论坛得到有用答案的建议）。</p>
<h2 id="在提问之前"><a href="#在提问之前" class="headerlink" title="在提问之前"></a>在提问之前</h2><p>在你准备要通过电子邮件、新闻群组或者聊天室提出技术问题前，请先做到以下事情：</p>
<ol>
<li>尝试在你准备提问的论坛的旧文章中搜索答案。</li>
<li>尝试上网搜索以找到答案。</li>
<li>尝试阅读手册以找到答案。</li>
<li>尝试阅读常见问题文件（FAQ）以找到答案。</li>
<li>尝试自己检查或试验以找到答案。</li>
<li>向你身边的强者朋友打听以找到答案。</li>
<li>如果你是程序开发者，请尝试阅读源代码以找到答案。</li>
</ol>
<p>当你提出问题的时候，请先表明你已经做了上述的努力；这将有助于树立你并不是一个不劳而获且浪费别人的时间的提问者。如果你能一并表达在做了上述努力的过程中所<strong>学到</strong>的东西会更好，因为我们更乐于回答那些表现出能从答案中学习的人的问题。</p>
<p>运用某些策略，比如先用 Google 搜索你所遇到的各种错误信息（搜索 <a href="http://groups.google.com/">Google 论坛</a>和网页），这样很可能直接就找到了能解决问题的文件或邮件列表线索。即使没有结果，在邮件列表或新闻组寻求帮助时加上一句 <code>我在 Google 中搜过下列句子但没有找到什么有用的东西</code> 也是件好事，即使它只是表明了搜索引擎不能提供哪些帮助。这么做（加上搜索过的字串）也让遇到相似问题的其他人能被搜索引擎引导到你的提问来。</p>
<p>别着急，不要指望几秒钟的 Google 搜索就能解决一个复杂的问题。在向专家求助之前，再阅读一下常见问题文件（FAQ）、放轻松、坐舒服一些，再花点时间思考一下这个问题。相信我们，他们能从你的提问看出你做了多少阅读与思考，如果你是有备而来，将更有可能得到解答。不要将所有问题一股脑拋出，只因你的第一次搜索没有找到答案（或者找到太多答案）。</p>
<p>准备好你的问题，再将问题仔细的思考过一遍，因为草率的发问只能得到草率的回答，或者根本得不到任何答案。越是能表现出在寻求帮助前你为解决问题所付出的努力，你越有可能得到实质性的帮助。</p>
<p>小心别问错了问题。如果你的问题基于错误的假设，某个普通黑客（J. Random Hacker）多半会一边在心里想着<code>蠢问题…</code>， 一边用无意义的字面解释来答复你，希望着你会从问题的回答（而非你想得到的答案）中汲取教训。</p>
<p>绝不要自以为<strong>够格</strong>得到答案，你没有；你并没有。毕竟你没有为这种服务支付任何报酬。你将会是自己去<strong>挣到</strong>一个答案，靠提出有内涵的、有趣的、有思维激励作用的问题 —— 一个有潜力能贡献社区经验的问题，而不仅仅是被动的从他人处索取知识。</p>
<p>另一方面，表明你愿意在找答案的过程中做点什么是一个非常好的开端。<code>谁能给点提示？</code>、<code>我的这个例子里缺了什么？</code>以及<code>我应该检查什么地方</code>比<code>请把我需要的确切的过程贴出来</code>更容易得到答复。因为你表现出只要有人能指个正确方向，你就有完成它的能力和决心。</p>
<h2 id="当你提问时"><a href="#当你提问时" class="headerlink" title="当你提问时"></a>当你提问时</h2><h3 id="慎选提问的论坛"><a href="#慎选提问的论坛" class="headerlink" title="慎选提问的论坛"></a>慎选提问的论坛</h3><p>小心选择你要提问的场合。如果你做了下述的事情，你很可能被忽略掉或者被看作失败者：</p>
<ul>
<li>在与主题不合的论坛上贴出你的问题。</li>
<li>在探讨进阶技术问题的论坛张贴非常初级的问题；反之亦然。</li>
<li>在太多的不同新闻群组上重复转贴同样的问题（cross-post）。</li>
<li>向既非熟人也没有义务解决你问题的人发送私人电邮。</li>
</ul>
<p>黑客会剔除掉那些搞错场合的问题，以保护他们沟通的渠道不被无关的东西淹没。你不会想让这种事发生在自己身上的。</p>
<p>因此，第一步是找到对的论坛。再说一次，Google 和其它搜索引擎还是你的朋友，用它们来找到与你遭遇到困难的软硬件问题最相关的网站。通常那儿都有常见问题（FAQ）、邮件列表及相关说明文件的链接。如果你的努力（包括<strong>阅读</strong> FAQ）都没有结果，网站上也许还有报告 Bug（Bug-reporting）的流程或链接，如果是这样，链过去看看。</p>
<p>向陌生的人或论坛发送邮件最可能是风险最大的事情。举例来说，别假设一个提供丰富内容的网页的作者会想充当你的免费顾问。不要对你的问题是否会受到欢迎做太乐观的估计 —— 如果你不确定，那就向别处发送，或者压根别发。</p>
<p>在选择论坛、新闻群组或邮件列表时，别太相信名字，先看看 FAQ 或者许可书以弄清楚你的问题是否切题。发文前先翻翻已有的话题，这样可以让你感受一下那里的文化。事实上，事先在新闻组或邮件列表的历史记录中搜索与你问题相关的关键词是个极好的主意，也许这样就找到答案了。即使没有，也能帮助你归纳出更好的问题。</p>
<p>别像机关枪似的一次“扫射”所有的帮助渠道，这就像大喊大叫一样会使人不快。要一个一个地来。</p>
<p>搞清楚你的主题！最典型的错误之一是在某种致力于跨平台可移植的语言、套件或工具的论坛中提关于 Unix 或 Windows 操作系统程序界面的问题。如果你不明白为什么这是大错，最好在搞清楚这之间差异之前什么也别问。</p>
<p>一般来说，在仔细挑选的公共论坛中提问，会比在私有论坛中提同样的问题更容易得到有用的回答。有几个理由可以支持这点，一是看潜在的回复者有多少，二是看观众有多少。黑客较愿意回答那些能帮助到许多人的问题。</p>
<p>可以理解的是，老练的黑客和一些热门软件的作者正在接受过多的错发信息。就像那根最后压垮骆驼背的稻草一样，你的加入也有可能使情况走向极端 —— 已经好几次了，一些热门软件的作者由于涌入其私人邮箱的大量不堪忍受的无用邮件而不再提供支持。</p>
<h3 id="Stack-Overflow"><a href="#Stack-Overflow" class="headerlink" title="Stack Overflow"></a>Stack Overflow</h3><p>搜索，<strong>然后</strong>在 Stack Exchange 问。</p>
<p>近年来，Stack Exchange 社区已经成为回答技术及其他问题的主要渠道，尤其是那些开放源码的项目。</p>
<p>因为 Google 索引是即时的，在看 Stack Exchange 之前先在 Google 搜索。有很高的几率某人已经问了一个类似的问题，而且 Stack Exchange 网站们往往会是搜索结果中最前面几个。如果你在 Google 上没有找到任何答案，你再到特定相关主题的网站去找。用标签（Tag）搜索能让你更缩小你的搜索结果。</p>
<p>Stack Exchange 已经成长到<a href="http://stackexchange.com/sites">超过一百个网站</a>，以下是最常用的几个站：</p>
<ul>
<li>Super User 是问一些通用的电脑问题，如果你的问题跟代码或是写程序无关，只是一些网络连线之类的，请到这里。</li>
<li>Stack Overflow 是问写程序有关的问题。</li>
<li>Server Fault 是问服务器和网管相关的问题。</li>
</ul>
<h3 id="网站和-IRC-论坛"><a href="#网站和-IRC-论坛" class="headerlink" title="网站和 IRC 论坛"></a>网站和 IRC 论坛</h3><p>本地的用户群组（user group），或者你所用的 Linux 发行版本也许正在宣传他们的网页论坛或 IRC 频道，并提供新手帮助（在一些非英语国家，新手论坛很可能还是邮件列表）， 这些地方是开始提问的好首选，特别是当你觉得遇到的也许只是相对简单或者很普通的问题时。有广告赞助的 IRC 频道是公开欢迎提问的地方，通常可以即时得到回应。</p>
<p>事实上，如果程序出的问题只发生在特定 Linux 发行版提供的版本（这很常见），最好先去该发行版的论坛或邮件列表中提问，再到程序本身的论坛或邮件列表提问。（否则）该项目的黑客可能仅仅回复“使用<strong>我们的</strong>版本”。</p>
<p>在任何论坛发文以前，先确认一下有没有搜索功能。如果有，就试着搜索一下问题的几个关键词，也许这会有帮助。如果在此之前你已做过通用的网页搜索（你也该这样做），还是再搜索一下论坛，搜索引擎有可能没来得及索引此论坛的全部内容。</p>
<p>通过论坛或 IRC 频道来提供用户支持服务有增长的趋势，电子邮件则大多为项目开发者间的交流而保留。所以最好先在论坛或 IRC 中寻求与该项目相关的协助。</p>
<p>在使用 IRC 的时候，首先最好不要发布很长的问题描述，有些人称之为频道洪水。最好通过一句话的问题描述来开始聊天。</p>
<h3 id="第二步，使用项目邮件列表"><a href="#第二步，使用项目邮件列表" class="headerlink" title="第二步，使用项目邮件列表"></a>第二步，使用项目邮件列表</h3><p>当某个项目提供开发者邮件列表时，要向列表而不是其中的个别成员提问，即使你确信他能最好地回答你的问题。查一查项目的文件和首页，找到项目的邮件列表并使用它。有几个很好的理由支持我们采用这种办法：</p>
<ul>
<li>任何好到需要向个别开发者提出的问题，也将对整个项目群组有益。反之，如果你认为自己的问题对整个项目群组来说太愚蠢，也不能成为骚扰个别开发者的理由。</li>
<li>向列表提问可以分散开发者的负担，个别开发者（尤其是项目领导人）也许太忙以至于没法回答你的问题。</li>
<li>大多数邮件列表都会被存档，那些被存档的内容将被搜索引擎索引。如果你向列表提问并得到解答，将来其他人可以通过网页搜索找到你的问题和答案，也就不用再次发问了。</li>
<li>如果某些问题经常被问到，开发者可以利用此信息来改进说明文件或软件本身，以使其更清楚。如果只是私下提问，就没有人能看到最常见问题的完整场景。</li>
</ul>
<p>如果一个项目既有“用户”也有“开发者”（或“黑客”）邮件列表或论坛，而你又不会动到那些源代码，那么就向“用户”列表或论坛提问。不要假设自己会在开发者列表中受到欢迎，那些人多半会将你的提问视为干扰他们开发的噪音。</p>
<p>然而，如果你<strong>确信</strong>你的问题很特别，而且在“用户”列表或论坛中几天都没有回复，可以试试前往“开发者”列表或论坛发问。建议你在张贴前最好先暗地里观察几天以了解那里的行事方式（事实上这是参与任何私有或半私有列表的好主意）</p>
<p>如果你找不到一个项目的邮件列表，而只能查到项目维护者的电子邮件地址，尽管向他发信。即使是在这种情况下，也别假设（项目）邮件列表不存在。在你的电子邮件中，请陈述你已经试过但没有找到合适的邮件列表，也提及你不反对将自己的邮件转发给他人（许多人认为，即使没什么秘密，私人电子邮件也不应该被公开。通过允许将你的电子邮件转发他人，你给了相应人员处置你邮件的选择）。</p>
<h3 id="使用有意义且描述明确的标题"><a href="#使用有意义且描述明确的标题" class="headerlink" title="使用有意义且描述明确的标题"></a>使用有意义且描述明确的标题</h3><p>在邮件列表、新闻群组或论坛中，大约 50 字以内的标题是抓住资深专家注意力的好机会。别用喋喋不休的<code>帮帮忙</code>、<code>跪求</code>、<code>急</code>（更别说<code>救命啊！！！！</code>这样让人反感的话，用这种标题会被条件反射式地忽略）来浪费这个机会。不要妄想用你的痛苦程度来打动我们，而应该是在这点空间中使用极简单扼要的描述方式来提出问题。</p>
<p>一个好标题范例是<code>目标 —— 差异</code>式的描述，许多技术支持组织就是这样做的。在<code>目标</code>部分指出是哪一个或哪一组东西有问题，在<code>差异</code>部分则描述与期望的行为不一致的地方。</p>
<blockquote>
<p>蠢问题：救命啊！我的笔记本电脑不能正常显示了！</p>
</blockquote>
<blockquote>
<p>聪明问题：X.org 6.8.1 的鼠标光标会变形，某牌显卡 MV1005 芯片组。</p>
</blockquote>
<blockquote>
<p>更聪明问题：X.org 6.8.1 的鼠标光标，在某牌显卡 MV1005 芯片组环境下 - 会变形。</p>
</blockquote>
<p>编写<code>目标 —— 差异</code> 式描述的过程有助于你组织对问题的细致思考。是什么被影响了？ 仅仅是鼠标光标或者还有其它图形？只在 X.org 的 X 版中出现？或只是出现在 6.8.1 版中？ 是针对某牌显卡芯片组？或者只是其中的 MV1005 型号？ 一个黑客只需瞄一眼就能够立即明白你的环境<strong>和</strong>你遇到的问题。</p>
<p>总而言之，请想像一下你正在一个只显示标题的存档讨论串（Thread）索引中查寻。让你的标题更好地反映问题，可使下一个搜索类似问题的人能够关注这个讨论串，而不用再次提问相同的问题。</p>
<p>如果你想在回复中提出问题，记得要修改内容标题，以表明你是在问一个问题， 一个看起来像 <code>Re: 测试</code> 或者 <code>Re: 新 bug</code> 的标题很难引起足够重视。另外，在不影响连贯性之下，适当引用并删减前文的内容，能给新来的读者留下线索。</p>
<p>对于讨论串，不要直接点击回复来开始一个全新的讨论串，这将限制你的观众。因为有些邮件阅读程序，比如 mutt ，允许用户按讨论串排序并通过折叠讨论串来隐藏消息，这样做的人永远看不到你发的消息。</p>
<p>仅仅改变标题还不够。mutt 和其它一些邮件阅读程序还会检查邮件标题以外的其它信息，以便为其指定讨论串。所以宁可发一个全新的邮件。</p>
<p>在网页论坛上，好的提问方式稍有不同，因为讨论串与特定的信息紧密结合，并且通常在讨论串外就看不到里面的内容，故通过回复提问，而非改变标题是可接受的。不是所有论坛都允许在回复中出现分离的标题，而且这样做了基本上没有人会去看。不过，通过回复提问，这本身就是暧昧的做法，因为它们只会被正在查看该标题的人读到。所以，除非你<strong>只想</strong>在该讨论串当前活跃的人群中提问，不然还是另起炉灶比较好。</p>
<h3 id="使问题容易回复"><a href="#使问题容易回复" class="headerlink" title="使问题容易回复"></a>使问题容易回复</h3><p>以<code>请将你的回复发送到……</code>来结束你的问题多半会使你得不到回答。如果你觉得花几秒钟在邮件客户端设置一下回复地址都麻烦，我们也觉得花几秒钟思考你的问题更麻烦。如果你的邮件程序不支持这样做，<a href="http://linuxmafia.com/faq/Mail/muas.html">换个好点的</a>；如果是操作系统不支持这种邮件程序，也换个好点的。</p>
<p>在论坛，要求通过电子邮件回复是非常无礼的，除非你认为回复的信息可能比较敏感（有人会为了某些未知的原因，只让你而不是整个论坛知道答案）。如果你只是想在有人回复讨论串时得到电子邮件提醒，可以要求网页论坛发送给你。几乎所有论坛都支持诸如<code>追踪此讨论串</code>、<code>有回复时发送邮件提醒</code>等功能。</p>
<h3 id="使用清晰、正确、精准且合乎语法的语句"><a href="#使用清晰、正确、精准且合乎语法的语句" class="headerlink" title="使用清晰、正确、精准且合乎语法的语句"></a><a name="使用清晰、正确、精准且合乎语法的语句">使用清晰、正确、精准且合乎语法的语句</a></h3><p>我们从经验中发现，粗心的提问者通常也会粗心的写程序与思考（我敢打包票）。回答粗心大意者的问题很不值得，我们宁愿把时间耗在别处。</p>
<p>正确的拼写、标点符号和大小写是很重要的。一般来说，如果你觉得这样做很麻烦，不想在乎这些，那我们也觉得麻烦，不想在乎你的提问。花点额外的精力斟酌一下字句，用不着太僵硬与正式 —— 事实上，黑客文化很看重能准确地使用非正式、俚语和幽默的语句。但它<strong>必须很</strong>准确，而且有迹象表明你是在思考和关注问题。</p>
<p>正确地拼写、使用标点和大小写，不要将<code>its</code>混淆为<code>it&#39;s</code>，<code>loose</code>搞成<code>lose</code>或者将<code>discrete</code>弄成<code>discreet</code>。不要<strong>全部用大写</strong>，这会被视为无礼的大声嚷嚷（全部小写也好不到哪去，因为不易阅读。<a href="http://en.wikipedia.org/wiki/Alan_Cox">Alan Cox</a> 也许可以这样做，但你不行）。</p>
<p>更白话的说，如果你写得像是个半文盲[译注：<a href="http://zh.wikipedia.org/wiki/%E5%B0%8F%E7%99%BD">小白</a>]，那多半得不到理睬。也不要使用即时通信中的简写或<a href="http://zh.wikipedia.org/wiki/%E7%81%AB%E6%98%9F%E6%96%87">火星文</a>，如将<code>的</code>简化为<code>d</code>会使你看起来像一个为了少打几个键而省字的小白。更糟的是，如果像个小孩似地鬼画符那绝对是在找死，可以肯定没人会理你（或者最多是给你一大堆指责与挖苦）。</p>
<p>如果在使用非母语的论坛提问，你可以犯点拼写和语法上的小错，但决不能在思考上马虎（没错，我们通常能弄清两者的分别）。同时，除非你知道回复者使用的语言，否则请使用英语书写。繁忙的黑客一般会直接删除用他们看不懂语言写的消息。在网络上英语是通用语言，用英语书写可以将你的问题在尚未被阅读就被直接删除的可能性降到最低。</p>
<p>如果英文是你的外语（Second language），提示潜在回复者你有潜在的语言困难是很好的：<br>[译注：以下附上原文以供使用]</p>
<blockquote>
<p>English is not my native language; please excuse typing errors.</p>
</blockquote>
<ul>
<li>英文不是我的母语，请原谅我的错字或语法。</li>
</ul>
<blockquote>
<p>If you speak $LANGUAGE, please email&#x2F;PM me;<br>I may need assistance translating my question.</p>
</blockquote>
<ul>
<li>如果你说<strong>某语言</strong>，请向我发电邮&#x2F;私信；</li>
<li>我需要有人协助我翻译我的问题。</li>
</ul>
<blockquote>
<p>I am familiar with the technical terms,<br>but some slang expressions and idioms are difficult for me.</p>
</blockquote>
<ul>
<li>我对技术名词很熟悉，但对于俗语或是特别用法不甚了解。</li>
</ul>
<blockquote>
<p>I’ve posted my question in $LANGUAGE and English.<br>I’ll be glad to translate responses, if you only use one or the other.</p>
</blockquote>
<ul>
<li>我把我的问题用<strong>某语言</strong>和英文写出来。</li>
<li>如果你只用其中的一种语言回答，我会乐意将回复翻译成为你使用的语言。</li>
</ul>
<h3 id="使用易于读取且标准的文件格式发送问题"><a href="#使用易于读取且标准的文件格式发送问题" class="headerlink" title="使用易于读取且标准的文件格式发送问题"></a>使用易于读取且标准的文件格式发送问题</h3><p>如果你人为地将问题搞得难以阅读，它多半会被忽略，人们更愿读易懂的问题，所以：</p>
<ul>
<li>使用纯文字而不是 HTML (<a href="http://archive.birdhouse.org/etc/evilmail.html">关闭 HTML</a> 并不难）。</li>
<li>使用 MIME 附件通常是可以的，前提是真正有内容（譬如附带的源代码或 patch），而不仅仅是邮件程序生成的模板（譬如只是信件内容的拷贝）。</li>
<li>不要发送一段文字只是一行句子但自动换行后会变成多行的邮件（这使得回复部分内容非常困难）。设想你的读者是在 80 个字符宽的终端机上阅读邮件，最好设置你的换行分割点小于 80 字。</li>
<li>但是，对一些特殊的文件<strong>不要</strong>设置固定宽度（譬如日志文件拷贝或会话记录）。数据应该原样包含，让回复者有信心他们看到的是和你看到的一样的东西。</li>
<li>在英语论坛中，不要使用<code>Quoted-Printable</code> MIME 编码发送消息。这种编码对于张贴非 ASCII 语言可能是必须的，但很多邮件程序并不支持这种编码。当它们处理换行时，那些文本中四处散布的<code>=20</code>符号既难看也分散注意力，甚至有可能破坏内容的语意。</li>
<li>绝对，<strong>永远</strong>不要指望黑客们阅读使用封闭格式编写的文档，像微软公司的 Word 或 Excel 文件等。大多数黑客对此的反应就像有人将还在冒热气的猪粪倒在你家门口时你的反应一样。即便他们能够处理，他们也很厌恶这么做。</li>
<li>如果你从使用 Windows 的电脑发送电子邮件，关闭微软愚蠢的<code>智能引号</code>功能 （从[选项] &gt; [校订] &gt; [自动校正选项]，勾选掉<code>智能引号</code>单选框），以免在你的邮件中到处散布垃圾字符。</li>
<li>在论坛，勿滥用<code>表情符号</code>和<code>HTML</code>功能（当它们提供时）。一两个表情符号通常没有问题，但花哨的彩色文本倾向于使人认为你是个无能之辈。过滥地使用表情符号、色彩和字体会使你看来像个傻笑的小姑娘。这通常不是个好主意，除非你只是对性而不是对答案感兴趣。</li>
</ul>
<p>如果你使用图形用户界面的邮件程序（如微软公司的 Outlook 或者其它类似的），注意它们的默认设置不一定满足这些要求。大多数这类程序有基于选单的<code>查看源代码</code>命令，用它来检查发送文件夹中的邮件，以确保发送的是纯文本文件同时没有一些奇怪的字符。</p>
<h3 id="精确地描述问题并言之有物"><a href="#精确地描述问题并言之有物" class="headerlink" title="精确地描述问题并言之有物"></a>精确地描述问题并言之有物</h3><ul>
<li>仔细、清楚地描述你的问题或 Bug 的症状。</li>
<li>描述问题发生的环境（机器配置、操作系统、应用程序、以及相关的信息），提供经销商的发行版和版本号（如：<code>Fedora Core 4</code>、<code>Slackware 9.1</code>等）。</li>
<li>描述在提问前你是怎样去研究和理解这个问题的。</li>
<li>描述在提问前为确定问题而采取的诊断步骤。</li>
<li>描述最近做过什么可能相关的硬件或软件变更。</li>
<li>尽可能的提供一个可以<code>重现这个问题的可控环境</code>的方法。</li>
</ul>
<p>尽量去揣测一个黑客会怎样反问你，在你提问之前预先将黑客们可能遇到的问题回答一遍。</p>
<p>以上几点中，当你报告的是你认为可能在代码中的问题时，给黑客一个可以重现你的问题的环境尤其重要。当你这么做时，你得到有效的回答的机会和速度都会大大的提升。</p>
<p><a href="http://www.chiark.greenend.org.uk/~sgtatham/">Simon Tatham</a> 写过一篇名为《<a href="http://www.chiark.greenend.org.uk/~sgtatham/bugs-cn.html">如何有效的报告 Bug</a>》的出色文章。强力推荐你也读一读。</p>
<h3 id="话不在多而在精"><a href="#话不在多而在精" class="headerlink" title="话不在多而在精"></a>话不在多而在精</h3><p>你需要提供精确有内容的信息。这并不是要求你简单的把成堆的出错代码或者资料完全转录到你的提问中。如果你有庞大而复杂的测试样例能重现程序挂掉的情境，尽量将它剪裁得越小越好。</p>
<p>这样做的用处至少有三点。<br>第一，表现出你为简化问题付出了努力，这可以使你得到回答的机会增加；<br>第二，简化问题使你更有可能得到<strong>有用</strong>的答案；<br>第三，在精炼你的 bug 报告的过程中，你很可能就自己找到了解决方法或权宜之计。</p>
<h3 id="别动辄声称找到-Bug"><a href="#别动辄声称找到-Bug" class="headerlink" title="别动辄声称找到 Bug"></a>别动辄声称找到 Bug</h3><p>当你在使用软件中遇到问题，除非你非常、<strong>非常</strong>的有根据，不要动辄声称找到了 Bug。提示：除非你能提供解决问题的源代码补丁，或者提供回归测试来表明前一版本中行为不正确，否则你都多半不够完全确信。这同样适用在网页和文件，如果你（声称）发现了文件的<code>Bug</code>，你应该能提供相应位置的修正或替代文件。</p>
<p>请记得，还有其他许多用户没遇到你发现的问题，否则你在阅读文件或搜索网页时就应该发现了（你在抱怨前<a href="#%E5%9C%A8%E6%8F%90%E9%97%AE%E4%B9%8B%E5%89%8D">已经做了这些，是吧</a>？）。这也意味着很有可能是你弄错了而不是软件本身有问题。</p>
<p>编写软件的人总是非常辛苦地使它尽可能完美。如果你声称找到了 Bug，也就是在质疑他们的能力，即使你是对的，也有可能会冒犯到其中某部分人。当你在标题中嚷嚷着有<code>Bug</code>时，这尤其严重。</p>
<p>提问时，即使你私下非常确信已经发现一个真正的 Bug，最好写得像是<strong>你</strong>做错了什么。如果真的有 Bug，你会在回复中看到这点。这样做的话，如果真有 Bug，维护者就会向你道歉，这总比你惹恼别人然后欠别人一个道歉要好一点。</p>
<h3 id="低声下气不能代替你的功课"><a href="#低声下气不能代替你的功课" class="headerlink" title="低声下气不能代替你的功课"></a>低声下气不能代替你的功课</h3><p>有些人明白他们不该粗鲁或傲慢的提问并要求得到答复，但他们选择另一个极端 —— 低声下气：<code>我知道我只是个可悲的新手，一个撸瑟，但...</code>。这既使人困扰，也没有用，尤其是伴随着与实际问题含糊不清的描述时更令人反感。</p>
<p>别用原始灵长类动物的把戏来浪费你我的时间。取而代之的是，尽可能清楚地描述背景条件和你的问题情况。这比低声下气更好地定位了你的位置。</p>
<p>有时网页论坛会设有专为新手提问的版面，如果你真的认为遇到了初学者的问题，到那去就是了，但一样别那么低声下气。</p>
<h3 id="描述问题症状而非你的猜测"><a href="#描述问题症状而非你的猜测" class="headerlink" title="描述问题症状而非你的猜测"></a>描述问题症状而非你的猜测</h3><p>告诉黑客们你认为问题是怎样造成的并没什么帮助。（如果你的推断如此有效，还用向别人求助吗？），因此要确信你原原本本告诉了他们问题的症状，而不是你的解释和理论；让黑客们来推测和诊断。如果你认为陈述自己的猜测很重要，清楚地说明这只是你的猜测，并描述为什么它们不起作用。</p>
<p><strong>蠢问题</strong></p>
<blockquote>
<p>我在编译内核时接连遇到 SIG11 错误，<br>我怀疑某条飞线搭在主板的走线上了，这种情况应该怎样检查最好？</p>
</blockquote>
<p><strong>聪明问题</strong></p>
<blockquote>
<p>我的组装电脑是 FIC-PA2007 主机板搭载 AMD K6&#x2F;233 CPU（威盛 Apollo VP2 芯片组），<br>256MB Corsair PC133 SDRAM 内存，在编译内核时，从开机 20 分钟以后就频频产生 SIG11 错误，<br>但是在头 20 分钟内从没发生过相同的问题。重新启动也没有用，但是关机一晚上就又能工作 20 分钟。<br>所有内存都换过了，没有效果。相关部分的标准编译记录如下…。</p>
</blockquote>
<p>由于以上这点似乎让许多人觉得难以配合，这里有句话可以提醒你：<code>所有的诊断专家都来自密苏里州。</code> 美国国务院的官方座右铭则是：<code>让我看看</code>（出自国会议员 Willard D. Vandiver 在 1899 年时的讲话：<code>我来自一个出产玉米，棉花，牛蒡和民主党人的国家，滔滔雄辩既不能说服我，也不会让我满意。我来自密苏里州，你必须让我看看。</code>） 针对诊断者而言，这并不是一种怀疑，而只是一种真实而有用的需求，以便让他们看到的是与你看到的原始证据尽可能一致的东西，而不是你的猜测与归纳的结论。所以，大方的展示给我们看吧！</p>
<h3 id="按发生时间先后列出问题症状"><a href="#按发生时间先后列出问题症状" class="headerlink" title="按发生时间先后列出问题症状"></a>按发生时间先后列出问题症状</h3><p>问题发生前的一系列操作，往往就是对找出问题最有帮助的线索。因此，你的说明里应该包含你的操作步骤，以及机器和软件的反应，直到问题发生。在命令行处理的情况下，提供一段操作记录（例如运行脚本工具所生成的），并引用相关的若干行（如 20 行）记录会非常有帮助。</p>
<p>如果挂掉的程序有诊断选项（如 -v 的详述开关），试着选择这些能在记录中增加调试信息的选项。记住，<code>多</code>不等于<code>好</code>。试着选取适当的调试级别以便提供有用的信息而不是让读者淹没在垃圾中。</p>
<p>如果你的说明很长（如超过四个段落），在开头简述问题，接下来再按时间顺序详述会有所帮助。这样黑客们在读你的记录时就知道该注意哪些内容了。</p>
<h3 id="描述目标而不是过程"><a href="#描述目标而不是过程" class="headerlink" title="描述目标而不是过程"></a>描述目标而不是过程</h3><p>如果你想弄清楚如何做某事（而不是报告一个 Bug），在开头就描述你的目标，然后才陈述重现你所卡住的特定步骤。</p>
<p>经常寻求技术帮助的人在心中有个更高层次的目标，而他们在自以为能达到目标的特定道路上被卡住了，然后跑来问该怎么走，但没有意识到这条路本身就有问题。结果要费很大的劲才能搞定。</p>
<p><strong>蠢问题</strong></p>
<blockquote>
<p>我怎样才能从某绘图程序的颜色选择器中取得十六进制的 RGB 值？</p>
</blockquote>
<p><strong>聪明问题</strong></p>
<blockquote>
<p>我正试着用替换一幅图片的色码（color table）成自己选定的色码，我现在知道的唯一方法是编辑每个色码区块（table slot），<br>但却无法从某绘图程序的颜色选择器取得十六进制的 RGB 值。</p>
</blockquote>
<p>第二种提问法比较聪明，你可能得到像是<code>建议采用另一个更合适的工具</code>的回复。</p>
<h3 id="别要求使用私人电邮回复"><a href="#别要求使用私人电邮回复" class="headerlink" title="别要求使用私人电邮回复"></a>别要求使用私人电邮回复</h3><p>黑客们认为问题的解决过程应该公开、透明，此过程中如果更有经验的人注意到不完整或者不当之处，最初的回复才能够、也应该被纠正。同时，作为提供帮助者可以得到一些奖励，奖励就是他的能力和学识被其他同行看到。</p>
<p>当你要求私下回复时，这个过程和奖励都被中止。别这样做，让<strong>回复者</strong>来决定是否私下回答 —— 如果他真这么做了，通常是因为他认为问题编写太差或者太肤浅，以至于不可能使其他人产生兴趣。</p>
<p>这条规则存在一条有限的例外，如果你确信提问可能会引来大量雷同的回复时，那么这个神奇的提问句会是<code>向我发电邮，我将为论坛归纳这些回复</code>。试着将邮件列表或新闻群组从洪水般的雷同回复中解救出来是非常有礼貌的 —— 但你必须信守诺言。</p>
<h3 id="清楚明确的表达你的问题以及需求"><a href="#清楚明确的表达你的问题以及需求" class="headerlink" title="清楚明确的表达你的问题以及需求"></a>清楚明确的表达你的问题以及需求</h3><p>漫无边际的提问是近乎无休无止的时间黑洞。最有可能给你有用答案的人通常也正是最忙的人（他们忙是因为要亲自完成大部分工作）。这样的人对无节制的时间黑洞相当厌恶，所以他们也倾向于厌恶那些漫无边际的提问。</p>
<p>如果你明确表述需要回答者做什么（如提供指点、发送一段代码、检查你的补丁、或是其他等等），就最有可能得到有用的答案。因为这会定出一个时间和精力的上限，便于回答者能集中精力来帮你。这么做很棒。</p>
<p>要理解专家们所处的世界，请把专业技能想像为充裕的资源，而回复的时间则是稀缺的资源。你要求他们奉献的时间越少，你越有可能从真正专业而且很忙的专家那里得到解答。</p>
<p>所以，界定一下你的问题，使专家花在辨识你的问题和回答所需要付出的时间减到最少，这技巧对你有用答案相当有帮助 —— 但这技巧通常和简化问题有所区别。因此，问<code>我想更好地理解 X，可否指点一下哪有好一点说明？</code>通常比问<code>你能解释一下 X 吗？</code>更好。如果你的代码不能运作，通常请别人看看哪里有问题，比要求别人替你改正要明智得多。</p>
<h3 id="询问有关代码的问题时"><a href="#询问有关代码的问题时" class="headerlink" title="询问有关代码的问题时"></a>询问有关代码的问题时</h3><p>别要求他人帮你调试有问题的代码，不提示一下应该从何入手。张贴几百行的代码，然后说一声：<code>它不能工作</code>会让你完全被忽略。只贴几十行代码，然后说一句：<code>在第七行以后，我期待它显示 &lt;x&gt;，但实际出现的是 &lt;y&gt;</code>比较有可能让你得到回应。</p>
<p>最有效描述程序问题的方法是提供最精简的 Bug 展示测试用例（bug-demonstrating test case）。什么是最精简的测试用例？那是问题的缩影；一小个程序片段能<strong>刚好</strong>展示出程序的异常行为，而不包含其他令人分散注意力的内容。怎么制作最精简的测试用例？如果你知道哪一行或哪一段代码会造成异常的行为，复制下来并加入足够重现这个状况的代码（例如，足以让这段代码能被编译&#x2F;直译&#x2F;被应用程序处理）。如果你无法将问题缩减到一个特定区块，就复制一份代码并移除不影响产生问题行为的部分。总之，测试用例越小越好（查看<a href="#%E8%AF%9D%E4%B8%8D%E5%9C%A8%E5%A4%9A%E8%80%8C%E5%9C%A8%E7%B2%BE">话不在多而在精</a>一节）。</p>
<p>一般而言，要得到一段相当精简的测试用例并不太容易，但永远先尝试这样做的是种好习惯。这种方式可以帮助你了解如何自行解决这个问题 —— 而且即使你的尝试不成功，黑客们也会看到你在尝试取得答案的过程中付出了努力，这可以让他们更愿意与你合作。</p>
<p>如果你只是想让别人帮忙审查（Review）一下代码，在信的开头就要说出来，并且一定要提到你认为哪一部分特别需要关注以及为什么。</p>
<h3 id="别把自己家庭作业的问题贴上来"><a href="#别把自己家庭作业的问题贴上来" class="headerlink" title="别把自己家庭作业的问题贴上来"></a>别把自己家庭作业的问题贴上来</h3><p>黑客们很擅长分辨哪些问题是家庭作业式的问题；因为我们中的大多数都曾自己解决这类问题。同样，这些问题得由<strong>你</strong>来搞定，你会从中学到东西。你可以要求给点提示，但别要求得到完整的解决方案。</p>
<p>如果你怀疑自己碰到了一个家庭作业式的问题，但仍然无法解决，试试在用户群组，论坛或（最后一招）在项目的<strong>用户</strong>邮件列表或论坛中提问。尽管黑客们<strong>会</strong>看出来，但一些有经验的用户也许仍会给你一些提示。</p>
<h3 id="去掉无意义的提问句"><a href="#去掉无意义的提问句" class="headerlink" title="去掉无意义的提问句"></a>去掉无意义的提问句</h3><p>避免用无意义的话结束提问，例如<code>有人能帮我吗？</code>或者<code>这有答案吗？</code>。</p>
<p>首先：如果你对问题的描述不是很好，这样问更是画蛇添足。</p>
<p>其次：由于这样问是画蛇添足，黑客们会很厌烦你 —— 而且通常会用逻辑上正确，但毫无意义的回答来表示他们的蔑视， 例如：<code>没错，有人能帮你</code>或者<code>不，没答案</code>。</p>
<p>一般来说，避免用 <code>是或否</code>、<code>对或错</code>、<code>有或没有</code>类型的问句，除非你想得到<a href="https://strcat.de/questions-with-yes-or-no-answers.html">是或否类型的回答</a>。</p>
<h3 id="即使你很急也不要在标题写紧急"><a href="#即使你很急也不要在标题写紧急" class="headerlink" title="即使你很急也不要在标题写紧急"></a>即使你很急也不要在标题写<code>紧急</code></h3><p>这是你的问题，不是我们的。宣称<code>紧急</code>极有可能事与愿违：大多数黑客会直接删除无礼和自私地企图即时引起关注的问题。更严重的是，<code>紧急</code>这个字（或是其他企图引起关注的标题）通常会被垃圾信过滤器过滤掉 —— 你希望能看到你问题的人可能永远也看不到。</p>
<p>有半个例外的情况是，如果你是在一些很高调，会使黑客们兴奋的地方，也许值得这样去做。在这种情况下，如果你有时间压力，也很有礼貌地提到这点，人们也许会有兴趣回答快一点。</p>
<p>当然，这风险很大，因为黑客们兴奋的点多半与你的不同。譬如从 NASA 国际空间站（International Space Station）发这样的标题没有问题，但用自我感觉良好的慈善行为或政治原因发肯定不行。事实上，张贴诸如<code>紧急：帮我救救这个毛绒绒的小海豹！</code>肯定让你被黑客忽略或惹恼他们，即使他们认为毛绒绒的小海豹很重要。</p>
<p>如果你觉得这点很不可思议，最好再把这份指南剩下的内容多读几遍，直到你弄懂了再发文。</p>
<h3 id="礼多人不怪，而且有时还很有帮助"><a href="#礼多人不怪，而且有时还很有帮助" class="headerlink" title="礼多人不怪，而且有时还很有帮助"></a>礼多人不怪，而且有时还很有帮助</h3><p>彬彬有礼，多用<code>请</code>和<code>谢谢您的关注</code>，或<code>谢谢你的关照</code>。让大家都知道你对他们花时间免费提供帮助心存感激。</p>
<p>坦白说，这一点并没有比使用清晰、正确、精准且合乎语法和避免使用专用格式重要（也不能取而代之）。黑客们一般宁可读有点唐突但技术上鲜明的 Bug 报告，而不是那种有礼但含糊的报告。（如果这点让你不解，记住我们是按问题能教给我们什么来评价问题的价值的）</p>
<p>然而，如果你有一串的问题待解决，客气一点肯定会增加你得到有用回应的机会。</p>
<p>（我们注意到，自从本指南发布后，从资深黑客那里得到的唯一严重缺陷反馈，就是对预先道谢这一条。一些黑客觉得<code>先谢了</code>意味着事后就不用再感谢任何人的暗示。我们的建议是要么先说<code>先谢了</code>，<strong>然后</strong>事后再对回复者表示感谢，或者换种方式表达感激，譬如用<code>谢谢你的关注</code>或<code>谢谢你的关照</code>。）</p>
<h3 id="问题解决后，加个简短的补充说明"><a href="#问题解决后，加个简短的补充说明" class="headerlink" title="问题解决后，加个简短的补充说明"></a>问题解决后，加个简短的补充说明</h3><p>问题解决后，向所有帮助过你的人发个说明，让他们知道问题是怎样解决的，并再一次向他们表示感谢。如果问题在新闻组或者邮件列表中引起了广泛关注，应该在那里贴一个说明比较恰当。</p>
<p>最理想的方式是向最初提问的话题回复此消息，并在标题中包含<code>已修正</code>，<code>已解决</code>或其它同等含义的明显标记。在人来人往的邮件列表里，一个看见讨论串<code>问题 X</code>和<code>问题 X - 已解决</code>的潜在回复者就明白不用再浪费时间了（除非他个人觉得<code>问题 X</code>的有趣），因此可以利用此时间去解决其它问题。</p>
<p>补充说明不必很长或是很深入；简单的一句<code>你好，原来是网线出了问题！谢谢大家 – Bill</code>比什么也不说要来的好。事实上，除非结论真的很有技术含量，否则简短可爱的小结比长篇大论更好。说明问题是怎样解决的，但大可不必将解决问题的过程复述一遍。</p>
<p>对于有深度的问题，张贴调试记录的摘要是有帮助的。描述问题的最终状态，说明是什么解决了问题，在此<strong>之后</strong>才指明可以避免的盲点。避免盲点的部分应放在正确的解决方案和其它总结材料之后，而不要将此信息搞成侦探推理小说。列出那些帮助过你的名字，会让你交到更多朋友。</p>
<p>除了有礼貌和有内涵以外，这种类型的补充也有助于他人在邮件列表&#x2F;新闻群组&#x2F;论坛中搜索到真正解决你问题的方案，让他们也从中受益。</p>
<p>至少，这种补充有助于让每位参与协助的人因问题的解决而从中得到满足感。如果你自己不是技术专家或者黑客，那就相信我们，这种感觉对于那些你向他们求助的大师或者专家而言，是非常重要的。问题悬而未决会让人灰心；黑客们渴望看到问题被解决。好人有好报，满足他们的渴望，你会在下次提问时尝到甜头。</p>
<p>思考一下怎样才能避免他人将来也遇到类似的问题，自问写一份文件或加个常见问题（FAQ）会不会有帮助。如果是的话就将它们发给维护者。</p>
<p>在黑客中，这种良好的后继行动实际上比传统的礼节更为重要，也是你如何透过善待他人而赢得声誉的方式，这是非常有价值的资产。</p>
<h2 id="如何解读答案"><a href="#如何解读答案" class="headerlink" title="如何解读答案"></a>如何解读答案</h2><h3 id="RTFM-和-STFW：如何知道你已完全搞砸了"><a href="#RTFM-和-STFW：如何知道你已完全搞砸了" class="headerlink" title="RTFM 和 STFW：如何知道你已完全搞砸了"></a>RTFM 和 STFW：如何知道你已完全搞砸了</h3><p>有一个古老而神圣的传统：如果你收到<code>RTFM（Read The Fucking Manual）</code>的回应，回答者认为你<strong>应该去读他妈的手册</strong>。当然，基本上他是对的，你应该去读一读。</p>
<p>RTFM 有一个年轻的亲戚。如果你收到<code>STFW（Search The Fucking Web）</code>的回应，回答者认为你<strong>应该到他妈的网上搜索</strong>。那人多半也是对的，去搜索一下吧。（更温和一点的说法是 **<a href="http://lmgtfy.com/">Google 是你的朋友</a>**！）</p>
<p>在论坛，你也可能被要求去爬爬论坛的旧文。事实上，有人甚至可能热心地为你提供以前解决此问题的讨论串。但不要依赖这种关照，提问前应该先搜索一下旧文。</p>
<p>通常，用这两句之一回答你的人会给你一份包含你需要内容的手册或者一个网址，而且他们打这些字的时候也正在读着。这些答复意味着回答者认为</p>
<ul>
<li><strong>你需要的信息非常容易获得</strong>；</li>
<li><strong>你自己去搜索这些信息比灌给你，能让你学到更多</strong>。</li>
</ul>
<p>你不应该因此不爽；<strong>依照黑客的标准，他已经表示了对你一定程度的关注，而没有对你的要求视而不见</strong>。你应该对他祖母般的慈祥表示感谢。</p>
<h3 id="如果还是搞不懂"><a href="#如果还是搞不懂" class="headerlink" title="如果还是搞不懂"></a>如果还是搞不懂</h3><p>如果你看不懂回应，别立刻要求对方解释。像你以前试着自己解决问题时那样（利用手册，FAQ，网络，身边的高手），先试着去搞懂他的回应。如果你真的需要对方解释，记得表现出你已经从中学到了点什么。</p>
<p>比方说，如果我回答你：<code>看来似乎是 zentry 卡住了；你应该先清除它。</code>，然后，这是一个<strong>很糟的</strong>后续问题回应：<code>zentry 是什么？</code> <strong>好</strong>的问法应该是这样：<code>哦~~~我看过说明了但是只有 -z 和 -p 两个参数中提到了 zentries，而且还都没有清楚的解释如何清除它。你是指这两个中的哪一个吗？还是我看漏了什么？</code></p>
<h3 id="处理无礼的回应"><a href="#处理无礼的回应" class="headerlink" title="处理无礼的回应"></a>处理无礼的回应</h3><p>很多黑客圈子中看似无礼的行为并不是存心冒犯。相反，它是直截了当，一针见血式的交流风格，这种风格更注重解决问题，而不是使人感觉舒服而却模模糊糊。</p>
<p>如果你觉得被冒犯了，试着平静地反应。如果有人真的做了出格的事，邮件列表、新闻群组或论坛中的前辈多半会招呼他。如果这<strong>没有</strong>发生而你却发火了，那么你发火对象的言语可能在黑客社区中看起来是正常的，而<strong>你</strong>将被视为有错的一方，这将伤害到你获取信息或帮助的机会。</p>
<p>另一方面，你偶尔真的会碰到无礼和无聊的言行。与上述相反，对真正的冒犯者狠狠地打击，用犀利的语言将其驳得体无完肤都是可以接受的。然而，在行事之前一定要非常非常的有根据。纠正无礼的言论与开始一场毫无意义的口水战仅一线之隔，黑客们自己莽撞地越线的情况并不鲜见。如果你是新手或外人，避开这种莽撞的机会并不高。如果你想得到的是信息而不是消磨时光，这时最好不要把手放在键盘上以免冒险。</p>
<p>（有些人断言很多黑客都有轻度的自闭症或亚斯伯格综合症，缺少用于润滑人类社会<strong>正常</strong>交往所需的神经。这既可能是真也可能是假的。如果你自己不是黑客，兴许你认为我们脑袋有问题还能帮助你应付我们的古怪行为。只管这么干好了，我们不在乎。我们<strong>喜欢</strong>我们现在这个样子，并且通常对病患标记都有站得住脚的怀疑。）</p>
<p>Jeff Bigler 的观察总结和这个相关也值得一读 (<strong><a href="http://www.mit.edu/~jcb/tact.html">tact filters</a></strong>)。</p>
<p>在下一节，我们会谈到另一个问题，当<strong>你</strong>行为不当时所会受到的<code>冒犯</code>。</p>
<h2 id="如何避免扮演失败者"><a href="#如何避免扮演失败者" class="headerlink" title="如何避免扮演失败者"></a>如何避免扮演失败者</h2><p>在黑客社区的论坛中有那么几次你可能会搞砸 —— 以本指南所描述到的或类似的方式。而你会在公开场合中被告知你是如何搞砸的，也许攻击的言语中还会带点夹七夹八的颜色。</p>
<p>这种事发生以后，你能做的最糟糕的事莫过于哀嚎你的遭遇、宣称被口头攻击、要求道歉、高声尖叫、憋闷气、威胁诉诸法律、向其雇主报怨、忘了关马桶盖等等。相反地，你该这么做：</p>
<p>熬过去，这很正常。事实上，它是有益健康且合理的。</p>
<p>社区的标准不会自行维持，它们是通过参与者积极而<strong>公开地</strong>执行来维持的。不要哭嚎所有的批评都应该通过私下的邮件传送，它不是这样运作的。当有人评论你的一个说法有误或者提出不同看法时，坚持声称受到个人攻击也毫无益处，这些都是失败者的态度。</p>
<p>也有其它的黑客论坛，受过高礼节要求的误导，禁止参与者张贴任何对别人帖子挑毛病的消息，并声称<code>如果你不想帮助用户就闭嘴。</code> 结果造成有想法的参与者纷纷离开，这么做只会使它们沦为毫无意义的唠叨与无用的技术论坛。</p>
<p>夸张的讲法是：你要的是“友善”（以上述方式）还是有用？两个里面挑一个。</p>
<p>记着：当黑客说你搞砸了，并且（无论多么刺耳）告诉你别再这样做时，他正在为关心<strong>你</strong>和<strong>他的社区</strong>而行动。对他而言，不理你并将你从他的生活中滤掉更简单。如果你无法做到感谢，至少要表现得有点尊严，别大声哀嚎，也别因为自己是个有戏剧性超级敏感的灵魂和自以为有资格的新来者，就指望别人像对待脆弱的洋娃娃那样对你。</p>
<p>有时候，即使你没有搞砸（或者只是在他的想像中你搞砸了），有些人也会无缘无故地攻击你本人。在这种情况下，抱怨倒是<strong>真的</strong>会把问题搞砸。</p>
<p>这些来找麻烦的人要么是毫无办法但自以为是专家的不中用家伙，要么就是测试你是否真会搞砸的心理专家。其它读者要么不理睬，要么用自己的方式对付他们。这些来找麻烦的人在给他们自己找麻烦，这点你不用操心。</p>
<p>也别让自己卷入口水战，最好不要理睬大多数的口水战 —— 当然，这是在你检验它们只是口水战，并且未指出你有搞砸的地方，同时也没有巧妙地将问题真正的答案藏于其后（这也是有可能的）。</p>
<h2 id="不该问的问题"><a href="#不该问的问题" class="headerlink" title="不该问的问题"></a>不该问的问题</h2><p>以下是几个经典蠢问题，以及黑客没回答时心中所想的：</p>
<p>问题：<a href="#q1">我能在哪找到 X 程序或 X 资源？</a></p>
<p>问题：<a href="#q2">我怎样用 X 做 Y？</a></p>
<p>问题：<a href="#q3">如何设定我的 shell 提示？</a></p>
<p>问题：<a href="#q4">我可以用 Bass-o-matic 文件转换工具将 AcmeCorp 文件转换为 TeX 格式吗？</a></p>
<p>问题：<a href="#q5">我的程序&#x2F;设定&#x2F;SQL 语句没有用</a></p>
<p>问题：<a href="#q6">我的 Windows 电脑有问题，你能帮我吗？</a></p>
<p>问题：<a href="#q7">我的程序不会动了，我认为系统工具 X 有问题</a></p>
<p>问题：<a href="#q8">我在安装 Linux（或者 X ）时有问题，你能帮我吗？</a></p>
<p>问题：<a href="#q9">我怎么才能破解 root 帐号&#x2F;窃取 OP 特权&#x2F;读别人的邮件呢？</a></p>
<hr>
<p><a id="q1"></a></p>
<blockquote>
<p>问题：我能在哪找到 X 程序或 X 资源？</p>
</blockquote>
<p>回答：就在我找到它的地方啊，白痴 —— 搜索引擎的那一头。天哪！难道还有人不会用 <a href="http://www.google.com/">Google</a> 吗？</p>
<p><a id="q2"></a></p>
<blockquote>
<p>问题：我怎样用 X 做 Y？</p>
</blockquote>
<p>回答：如果你想解决的是 Y ，提问时别给出可能并不恰当的方法。这种问题说明提问者不但对 X 完全无知，也对 Y 要解决的问题糊涂，还被特定形势禁锢了思维。最好忽略这种人，等他们把问题搞清楚了再说。</p>
<p><a id="q3"></a></p>
<blockquote>
<p>问题：如何设定我的 shell 提示？？</p>
</blockquote>
<p>回答：如果你有足够的智慧提这个问题，你也该有足够的智慧去 <a href="#RTFM">RTFM</a>，然后自己去找出来。</p>
<p><a id="q4"></a></p>
<blockquote>
<p>问题：我可以用 Bass-o-matic 文件转换工具将 AcmeCorp 文件转换为 TeX 格式吗？</p>
</blockquote>
<p>回答：试试看就知道了。如果你试过，你既知道了答案，就不用浪费我的时间了。</p>
<p><a id="q5"></a></p>
<blockquote>
<p>问题：我的{程序&#x2F;设定&#x2F;SQL 语句}不工作</p>
</blockquote>
<p>回答：这不算是问题吧，我对要我问你二十个问题才找得出你真正问题的问题没兴趣 —— 我有更有意思的事要做呢。在看到这类问题的时候，我的反应通常不外如下三种</p>
<ul>
<li>你还有什么要补充的吗？</li>
<li>真糟糕，希望你能搞定。</li>
<li>这关我屁事？</li>
</ul>
<p><a id="q6"></a></p>
<blockquote>
<p>问题：我的 Windows 电脑有问题，你能帮我吗？</p>
</blockquote>
<p>回答：能啊，扔掉微软的垃圾，换个像 Linux 或 BSD 的开源操作系统吧。</p>
<p>注意：如果程序有官方版 Windows 或者与 Windows 有互动（如 Samba），你<strong>可以</strong>问与 Windows 相关的问题， 只是别对问题是由 Windows 操作系统而不是程序本身造成的回复感到惊讶， 因为 Windows 一般来说实在太烂，这种说法通常都是对的。</p>
<p><a id="q7"></a></p>
<blockquote>
<p>问题：我的程序不会动了，我认为系统工具 X 有问题</p>
</blockquote>
<p>回答：你完全有可能是第一个注意到被成千上万用户反复使用的系统调用与函数库文件有明显缺陷的人，更有可能的是你完全没有根据。不同凡响的说法需要不同凡响的证据，当你这样声称时，你必须有清楚而详尽的缺陷说明文件作后盾。</p>
<p><a id="q8"></a></p>
<blockquote>
<p>问题：我在安装 Linux（或者 X ）时有问题，你能帮我吗？</p>
</blockquote>
<p>回答：不能，我只有亲自在你的电脑上动手才能找到毛病。还是去找你当地的 Linux 使用群组者寻求实际的指导吧（你能在<a href="http://www.linux.org/groups/index.html">这儿</a>找到用户群组的清单）。</p>
<p>注意：如果安装问题与某 Linux 的发行版有关，在它的邮件列表、论坛或本地用户群组中提问也许是恰当的。此时，应描述问题的准确细节。在此之前，先用 <code>Linux</code> 和<strong>所有</strong>被怀疑的硬件作关键词仔细搜索。</p>
<p><a id="q9"></a></p>
<blockquote>
<p>问题：我怎么才能破解 root 帐号&#x2F;窃取 OP 特权&#x2F;读别人的邮件呢？</p>
</blockquote>
<p>回答：想要这样做，说明了你是个卑鄙小人；想找个黑客帮你，说明你是个白痴！</p>
<h2 id="好问题与蠢问题"><a href="#好问题与蠢问题" class="headerlink" title="好问题与蠢问题"></a>好问题与蠢问题</h2><p>最后，我将透过举一些例子，来说明怎样聪明的提问；同一个问题的两种问法被放在一起，一种是愚蠢的，另一种才是明智的。</p>
<p><strong>蠢问题</strong>：</p>
<blockquote>
<p>我可以在哪儿找到关于 Foonly Flurbamatic 的资料？</p>
</blockquote>
<p>这种问法无非想得到 <a href="#RTFM">STFW</a> 这样的回答。</p>
<p><strong>聪明问题</strong>：</p>
<blockquote>
<p>我用 Google 搜索过 “Foonly Flurbamatic 2600”，但是没找到有用的结果。谁知道上哪儿去找对这种设备编程的资料？</p>
</blockquote>
<p>这个问题已经 STFW 过了，看起来他真的遇到了麻烦。</p>
<p><strong>蠢问题</strong>：</p>
<blockquote>
<p>我从 foo 项目找来的源码没法编译。它怎么这么烂？</p>
</blockquote>
<p>他觉得都是别人的错，这个傲慢自大的提问者。</p>
<p><strong>聪明问题</strong>：</p>
<blockquote>
<p>foo 项目代码在 Nulix 6.2 版下无法编译通过。我读过了 FAQ，但里面没有提到跟 Nulix 有关的问题。这是我编译过程的记录，我有什么做的不对的地方吗？</p>
</blockquote>
<p>提问者已经指明了环境，也读过了 FAQ，还列出了错误，并且他没有把问题的责任推到别人头上，他的问题值得被关注。</p>
<p><strong>蠢问题</strong>：</p>
<blockquote>
<p>我的主机板有问题了，谁来帮我？</p>
</blockquote>
<p>某黑客对这类问题的回答通常是：<code>好的，还要帮你拍拍背和换尿布吗？</code>，然后按下删除键。</p>
<p><strong>聪明问题</strong>：</p>
<blockquote>
<p>我在 S2464 主机板上试过了 X 、 Y 和 Z ，但没什么作用，我又试了 A 、 B 和 C 。请注意当我尝试 C 时的奇怪现象。显然 florbish 正在 grommicking，但结果出人意料。通常在 Athlon MP 主机板上引起 grommicking 的原因是什么？有谁知道接下来我该做些什么测试才能找出问题？</p>
</blockquote>
<p>这个家伙，从另一个角度来看，值得去回答他。他表现出了解决问题的能力，而不是坐等天上掉答案。</p>
<p>在最后一个问题中，注意<code>告诉我答案</code>和<code>给我启示，指出我还应该做什么诊断工作</code>之间微妙而又重要的区别。</p>
<p>事实上，后一个问题源自于 2001 年 8 月在 Linux 内核邮件列表（lkml）上的一个真实的提问。我（Eric）就是那个提出问题的人。我在 Tyan S2464 主板上观察到了这种无法解释的锁定现象，列表成员们提供了解决这一问题的重要信息。</p>
<p>通过我的提问方法，我给了别人可以咀嚼玩味的东西；我设法让人们很容易参与并且被吸引进来。我显示了自己具备和他们同等的能力，并邀请他们与我共同探讨。通过告诉他们我所走过的弯路，以避免他们再浪费时间，我也表明了对他们宝贵时间的尊重。</p>
<p>事后，当我向每个人表示感谢，并且赞赏这次良好的讨论经历的时候， 一个 Linux 内核邮件列表的成员表示，他觉得我的问题得到解决并非由于我是这个列表中的<strong>名</strong>人，而是因为我用了正确的方式来提问。</p>
<p>黑客从某种角度来说是拥有丰富知识但缺乏人情味的家伙；我相信他是对的，如果我<strong>像</strong>个乞讨者那样提问，不论我是谁，一定会惹恼某些人或者被他们忽视。他建议我记下这件事，这直接导致了本指南的出现。</p>
<h2 id="如果得不到回答"><a href="#如果得不到回答" class="headerlink" title="如果得不到回答"></a>如果得不到回答</h2><p>如果仍得不到回答，请不要以为我们觉得无法帮助你。有时只是看到你问题的人不知道答案罢了。没有回应不代表你被忽视，虽然不可否认这种差别很难区分。</p>
<p>总的来说，简单的重复张贴问题是个很糟的点子。这将被视为无意义的喧闹。有点耐心，知道你问题答案的人可能生活在不同的时区，可能正在睡觉，也有可能你的问题一开始就没有组织好。</p>
<p>你可以通过其他渠道获得帮助，这些渠道通常更适合初学者的需要。</p>
<p>有许多网上的以及本地的用户群组，由热情的软件爱好者（即使他们可能从没亲自写过任何软件）组成。通常人们组建这样的团体来互相帮助并帮助新手。</p>
<p>另外，你可以向很多商业公司寻求帮助，不论公司大还是小。别为要付费才能获得帮助而感到沮丧！毕竟，假使你的汽车发动机汽缸密封圈爆掉了 —— 完全可能如此 —— 你还得把它送到修车铺，并且为维修付费。就算软件没花费你一分钱，你也不能强求技术支持总是免费的。</p>
<p>对像是 Linux 这种大众化的软件，每个开发者至少会对应到上万名用户。根本不可能由一个人来处理来自上万名用户的求助电话。要知道，即使你要为这些协助付费，和你所购买的同类软件相比，你所付出的也是微不足道的（通常封闭源代码软件的技术支持费用比开源软件的要高得多，且内容也没那么丰富）。</p>
<h2 id="如何更好地回答问题"><a href="#如何更好地回答问题" class="headerlink" title="如何更好地回答问题"></a>如何更好地回答问题</h2><p><strong>态度和善一点。</strong> 问题带来的压力常使人显得无礼或愚蠢，其实并不是这样。</p>
<p><strong>对初犯者私下回复。</strong> 对那些坦诚犯错之人没有必要当众羞辱，一个真正的新手也许连怎么搜索或在哪找常见问题都不知道。</p>
<p><strong>如果你不确定，一定要说出来！</strong> 一个听起来权威的错误回复比没有还要糟，别因为听起来像个专家很好玩，就给别人乱指路。要谦虚和诚实，给提问者与同行都树个好榜样。</p>
<p><strong>如果帮不了忙，也别妨碍他。</strong> 不要在实际步骤上开玩笑，那样也许会毁了提问者的设置 —— 有些可怜的呆瓜会把它当成真的指令。</p>
<p><strong>试探性的反问以引出更多的细节。</strong> 如果你做得好，提问者可以学到点东西 —— 你也可以。试试将蠢问题转变成好问题，别忘了我们都曾是新手。</p>
<p>尽管对那些懒虫抱怨一声 RTFM 是正当的，但能指出文件的位置（即使只是建议个 Google 搜索关键词）会更好。</p>
<p><strong>如果你决定回答，就请给出好的答案。</strong> 当别人正在用错误的工具或方法时别建议笨拙的权宜之计（workaround），应推荐更好的工具，重新界定问题。</p>
<p><strong>正面的回答问题！</strong> 如果这个提问者已经很深入的研究而且也表明已经试过 X 、 Y 、 Z 、 A 、 B 、 C 但没得到结果，回答 <code>试试看 A 或是 B</code> 或者 <code>试试 X 、 Y 、 Z 、 A 、 B 、 C</code> 并附上一个链接一点用都没有。</p>
<p><strong>帮助你的社区从问题中学习。</strong> 当回复一个好问题时，问问自己<code>如何修改相关文件或常见问题文件以免再次解答同样的问题？</code>，接着再向文件维护者发一份补丁。</p>
<p>如果你在研究一番后才作出了回答，<strong>展现你的技巧而不是直接端出结果</strong>。毕竟<code>授人以鱼不如授人以渔</code>。</p>
<h2 id="相关资源"><a href="#相关资源" class="headerlink" title="相关资源"></a>相关资源</h2><p>如果你需要个人电脑、Unix 系统和网络如何运作的基础知识，参阅 <a href="http://en.tldp.org/HOWTO/Unix-and-Internet-Fundamentals-HOWTO/">Unix 系统和网络基本原理</a>。</p>
<p>当你发布软件或补丁时，试着按<a href="http://en.tldp.org/HOWTO/Software-Release-Practice-HOWTO/index.html">软件发布实践</a>操作。</p>
<h2 id="鸣谢"><a href="#鸣谢" class="headerlink" title="鸣谢"></a>鸣谢</h2><p>Evelyn Mitchel 贡献了一些愚蠢问题例子并启发了编写<code>如何更好地回答问题</code>这一节， Mikhail Ramendik 贡献了一些特别有价值的建议和改进。</p>
]]></content>
  </entry>
  <entry>
    <title>服务器被黑之后对ssh服务的亡羊补牢</title>
    <url>/2024/02/28/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%A2%AB%E9%BB%91%E4%B9%8B%E5%90%8E%E5%AF%B9ssh%E6%9C%8D%E5%8A%A1%E7%9A%84%E4%BA%A1%E7%BE%8A%E8%A1%A5%E7%89%A2/</url>
    <content><![CDATA[<h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>前几天突然发现一台服务器掉线了…打开后台一看一整页全部都是Abuse Report，服务器也被suspend。在面板发现服务器被冻结前处于很长一段时间的满负载状态，Ticket内容显示这个ip被举报有扫描行为。</p>
<p><img src="https://s2.loli.net/2024/02/28/SyiU2cPsfXGdEK3.png"></p>
<p>通过提交工单请求解冻之后登录，过一段时间发现tor这个用户被盗用并且启动了一个叫<code>blitz64</code>的服务。</p>
<p><img src="https://s2.loli.net/2024/02/28/M8e71vyWri53Yoa.png"></p>
<p>后面通过删除被修改的<code>crontab</code>条目并重启修复，但是<strong>因为我忘了修改密码又被冻结了</strong>。^_^</p>
<p>修复过程因为比较匆忙没有记录，这里附上参考资料。</p>
<p><a href="https://www.yanxurui.cc/posts/tool/2023-01-02-my-VPS-is-under-attack/">My VPS is under attack</a></p>
<p><a href="https://dev.to/krowemoh/hacked-server-4kp7">Hacked Server</a></p>
<p><a href="https://blog.csdn.net/subfate/article/details/106546646">记一次ubuntu虚拟机被挖矿木马攻击的过程</a></p>
<p><a href="https://blog.ataw.top/archives/vps-hacked-and-added-to-botnet?preview-theme=theme-hao">记一次 VPS 被黑掉拉进僵尸网络</a></p>
<p>本文剩余部分用来记录修改密码并添加密钥登录和<code>fail2ban</code>的过程。</p>
<h2 id="设置ssh密钥登录"><a href="#设置ssh密钥登录" class="headerlink" title="设置ssh密钥登录"></a>设置ssh密钥登录</h2>]]></content>
  </entry>
  <entry>
    <title>松香在焊接中的作用</title>
    <url>/2024/05/30/%E6%9D%BE%E9%A6%99%E5%9C%A8%E7%84%8A%E6%8E%A5%E4%B8%AD%E7%9A%84%E4%BD%9C%E7%94%A8/</url>
    <content><![CDATA[<h2 id="为什么要使用松香"><a href="#为什么要使用松香" class="headerlink" title="为什么要使用松香"></a>为什么要使用松香</h2><p>松香是腐蚀性低，不会腐蚀电路元件和烙铁头，其熔点为127℃，活性可持续到315℃。</p>
<p>松香有很高的<strong>抗氧化</strong>性能，可以在焊接过程中去除氧化膜、防止焊接面再次氧化。</p>
<h2 id="购买哪种松香"><a href="#购买哪种松香" class="headerlink" title="购买哪种松香"></a>购买哪种松香</h2><p><img src="https://s2.loli.net/2024/05/31/wd1T4kGnsQNOat9.png" alt="Snipaste_2024-05-31_08-09-06.png"></p>
<h2 id="松香的使用"><a href="#松香的使用" class="headerlink" title="松香的使用"></a>松香的使用</h2><p>空心的低温焊锡丝中通常自带松香。</p>
<p>盒装的松香使用时可以先将烙铁头上挂上锡，然后快速沾一下固态松香，再按到需要焊接的部分就可以轻松焊接。</p>
<p>也可溶解在酒精中使用（我没试过，一般直接用焊油焊膏但是清洁麻烦）。</p>
<p>在每次使用完烙铁后也可以放到松香中烫一下进行清洁，烙铁上面多余的锡会掉下来以达到清洁目的。</p>
<p><img src="https://s2.loli.net/2024/05/31/slIR25FjTycdD7O.jpg" alt="IMG20240518163944_1_.jpg"></p>
]]></content>
  </entry>
  <entry>
    <title>没有链接的互联网</title>
    <url>/2024/12/01/%E6%B2%A1%E6%9C%89%E9%93%BE%E6%8E%A5%E7%9A%84%E4%BA%92%E8%81%94%E7%BD%91/</url>
    <content><![CDATA[<p>以下内容来自于<a href="https://github.com/ruanyf/weekly/blob/master/docs/issue-327.md">科技爱好者周刊（第 327 期）：没有链接的互联网</a></p>
<h2 id="没有链接的互联网"><a href="#没有链接的互联网" class="headerlink" title="没有链接的互联网"></a>没有链接的互联网</h2><p>你能想象吗，没有链接的互联网是什么样？</p>
<p>不用想了，这正在变成现实。</p>
<p>2017年，脸书（Facebook）出台了一项政策：只要帖子里面有（外部）链接，就会减少这个帖子的曝光。</p>
<p>也就是说，<strong>只要你贴了链接，别人就（几乎）看不见你的帖子了</strong>。这样做是为了防止用户跳出脸书，也为了防止用户为其他网站引流。</p>
<p>所以，你现在访问脸书，就会看到一种奇特的做法：大家发帖都没有链接，有些帖子甚至只是一句话的图片（下图），真正的链接放在帖子的置顶评论里面。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202411/bg2024111602.webp"></p>
<p>后来，其他的互联网平台纷纷跟进，限制链接。</p>
<span id="more"></span>

<p>最典型的就是推特，它不断增加防止用户跳出的措施。先是推出“话题”功能（thread），后又解除字数限制，允许发布长文，尽量消除用户张贴链接的动机。最近，它将链接自动转成预览图时，甚至会<a href="https://www.theverge.com/2023/10/4/23903859/x-elon-musk-headlines-links-image-twitter">隐藏页面标题</a>，让用户察觉不到这是一个链接。</p>
<p>就连谷歌这种搜索引擎，也在防止用户跳出。搜索时，谷歌会直接显示一段 AI 生成的内容总结（下图），避免你去点击外部链接。</p>
<p><img src="https://cdn.beekka.com/blogimg/asset/202411/bg2024112201.webp"></p>
<p>国内平台也是如此，有过之而无不及，比如微信、抖音，都严格限制外部链接。</p>
<p>总之，<strong>大型互联网平台都在排斥链接</strong>。它们的共识就是，必须把用户留在自己的花园，防止他们离开。</p>
<p>这种情况，将来恐怕愈演愈烈。因为 AI 可以实时生成内容，更没有必要让用户访问外部内容了。</p>
<p><strong>没有链接可点击，这将彻底改变互联网生态</strong>。我看到<a href="https://www.techspot.com/article/2908-the-zero-click-internet/">一篇文章</a>，列出这种趋势的七大后果，总结得很好。</p>
<p><strong>（1）独立网站会消失</strong>，因为没有流量来源了。所有人都依赖大平台，只能在平台上发布内容，否则没人能看到。</p>
<p><strong>（2）数字出版行业终结</strong>，因为不需要单独的出版环节了，直接发布到大平台就可以了。</p>
<p><strong>（3）域名不再具有价值</strong>，因为小网站不管采用什么域名，都没有访客。大多数域名注册商会关门。</p>
<p><strong>（4）网络托管业务将会收缩</strong>，因为网站数量将减少，个人架设网站的需求越来越少。</p>
<p><strong>（5）独立的互联网广告业也会消失</strong>。所有的互联网广告，都将由平台控制，独立的广告联盟一钱不值。小网站也不可能通过互联网广告赚到钱。</p>
<p><strong>（6）SEO 无用了</strong>。小网站没有流量了，优化搜索引擎的排名有何意义呢？</p>
<p><strong>（7）信息表面化</strong>。因为用户不太可能在平台上贡献深层次的详细内容，所以平台提供的大多是表面信息，能够帮助用户的深层次的内容将难找到。</p>
]]></content>
  </entry>
  <entry>
    <title>流式与非流式大型语言模型：了解实时应用程序的差异</title>
    <url>/2024/06/01/%E6%B5%81%E5%BC%8F%E4%B8%8E%E9%9D%9E%E6%B5%81%E5%BC%8F%E5%A4%A7%E5%9E%8B%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%EF%BC%9A%E4%BA%86%E8%A7%A3%E5%AE%9E%E6%97%B6%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E7%9A%84%E5%B7%AE%E5%BC%82/</url>
    <content><![CDATA[<p>原文链接：<a href="https://medium.com/@koutsiyrgken/the-streaming-revolution-how-ais-real-time-language-models-are-changing-the-game-d9d0beb18ae2">https:&#x2F;&#x2F;medium.com&#x2F;@koutsiyrgken&#x2F;the-streaming-revolution-how-ais-real-time-language-models-are-changing-the-game-d9d0beb18ae2</a></p>
<p>翻译：GPT</p>
<p>在人工智能和自然语言处理领域，大型语言模型已经成为焦点。这些模型由先进的算法和海量数据集驱动，能够理解和生成类似人类的文本。然而，在大型语言模型的领域中，有一个重要的区别——流式模型与非流式模型。理解这一差异至关重要，尤其是在涉及实时应用时。</p>
<h3 id="大型语言模型的崛起"><a href="#大型语言模型的崛起" class="headerlink" title="大型语言模型的崛起"></a>大型语言模型的崛起</h3><p>大型语言模型，如GPT-3及其后继者，改变了我们与技术互动的方式。它们使得聊天机器人、虚拟助手和内容生成引擎变得更加对话化、信息化和上下文感知。但是，为了有效地利用这些模型，理解流式与非流式模型的范式非常重要。</p>
<h3 id="非流式大型语言模型"><a href="#非流式大型语言模型" class="headerlink" title="非流式大型语言模型"></a>非流式大型语言模型</h3><p>首先，让我们了解非流式大型语言模型。这些模型类似于传统的文本生成器，需要在生成响应之前提供整个输入。换句话说，它们将输入作为一个整体进行处理，然后生成相应的输出。这种方法适用于实时交互不是主要关注点的任务。</p>
<p>例如，当你在搜索引擎中输入查询时，搜索引擎通常会使用非流式模型来处理你的查询并返回搜索结果。对于大多数用户来说，接收搜索结果的延迟可以忽略不计，因此实时处理不是首要任务。</p>
<h3 id="流式大型语言模型"><a href="#流式大型语言模型" class="headerlink" title="流式大型语言模型"></a>流式大型语言模型</h3><p>另一方面，流式大型语言模型旨在处理连续的、实时的或互动的输入。它们以流式方式处理数据，使其能够在输入到达时实时提供响应。这使得它们非常适合低延迟和即时互动至关重要的应用。</p>
<p>想象一下使用像Siri或Google Assistant这样的语音助手。当你发出指令或提问时，这些助手使用流式模型来处理你的语音输入并迅速回应。能够在你说话时处理你的语音命令是流式技术实现的。</p>
<h3 id="实际应用"><a href="#实际应用" class="headerlink" title="实际应用"></a>实际应用</h3><p>让我们探讨一些实际应用来说明这一区别的重要性：</p>
<h4 id="实时聊天支持"><a href="#实时聊天支持" class="headerlink" title="实时聊天支持"></a>实时聊天支持</h4><p>流式大型语言模型在实时聊天支持场景中大放异彩。当你与在线客户支持代理聊天时，流式模型可以实时处理你的消息并立即提供响应，创造一个无缝且高效的客户服务体验。</p>
<h4 id="语音助手"><a href="#语音助手" class="headerlink" title="语音助手"></a>语音助手</h4><p>像亚马逊Alexa和苹果Siri这样的语音助手依靠流式大型语言模型来实时处理和响应语音命令。这确保了你与这些设备的语音互动感觉自然且响应迅速。</p>
<h4 id="实时翻译"><a href="#实时翻译" class="headerlink" title="实时翻译"></a>实时翻译</h4><p>流式模型对于实时翻译服务也非常重要。当你使用翻译应用与外语进行对话时，流式大型语言模型可以在你说话时翻译你的句子，从而实现流畅的交流。</p>
<h3 id="选择合适的模型"><a href="#选择合适的模型" class="headerlink" title="选择合适的模型"></a>选择合适的模型</h3><p>在开发需要自然语言处理的应用程序时，根据你的用例选择合适的模型至关重要。如果你的应用需要实时或互动响应，流式大型语言模型是最佳选择。另一方面，对于即时互动不是关键的任务，非流式模型可能已经足够。</p>
<h3 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h3><p>流式和非流式大型语言模型之间的区别在实时应用的性能中起着至关重要的作用。随着AI技术的不断进步，理解这一差异将使开发者能够为各种用例创建更具响应性和高效的解决方案。</p>
<p>因此，下次你与聊天机器人、语音助手或实时翻译服务互动时，记住驱动它的技术可能是流式大型语言模型，确保你的体验尽可能无缝。</p>
]]></content>
  </entry>
  <entry>
    <title>猿神,启动!</title>
    <url>/2024/08/21/%E7%8C%BF%E7%A5%9E-%E5%90%AF%E5%8A%A8/</url>
    <content><![CDATA[<p><img src="https://s2.loli.net/2024/08/21/JgIhuGVswQcAnBN.jpg" alt="photo_2024-08-20_22-09-59.jpg"></p>
]]></content>
  </entry>
  <entry>
    <title>理塘金曲I Got Smoke1376届格莱美说唱钻石单曲</title>
    <url>/2022/11/17/%E7%90%86%E5%A1%98%E9%87%91%E6%9B%B2I-Got-Smoke1376%E5%B1%8A%E6%A0%BC%E8%8E%B1%E7%BE%8E%E8%AF%B4%E5%94%B1%E9%92%BB%E7%9F%B3%E5%8D%95%E6%9B%B2/</url>
    <content><![CDATA[<div id="mmedia-GsiKfxlCkNeSnfaI" style="width:100%;height:650px;max-width:1200px;center"></div><script> var GsiKfxlCkNeSnfaI_options = JSON.parse('{\"style\":\"width:100%;height:650px;max-width:1200px;center\",\"url\":\"https://dlink.host/sharepoint/aHR0cHM6Ly9zYWludDEzMzctbXkuc2hhcmVwb2ludC5jb20vOnY6L2cvcGVyc29uYWwvZHV6aHVvX3NhaW50MTMzN19vbm1pY3Jvc29mdF9jb20vRWEwTU56ejhFOEpPbFFoT0RZSXZTX2tCTnZQYTg2NmxVS1JyVTZUa3pnUldNdz9lPWg3cVV0Rw.mp4\",\"autoSize\":true,\"autoMini\":false,\"fullscreen\":true,\"fullscreenWeb\":true}'); GsiKfxlCkNeSnfaI_options.container = "#mmedia-GsiKfxlCkNeSnfaI"; HEXO_MMEDIA_DATA.js.push("https://cdn.jsdelivr.net/npm/artplayer/dist/artplayer.js");HEXO_MMEDIA_DATA.artPlayerData.push(GsiKfxlCkNeSnfaI_options); </script>]]></content>
      <tags>
        <tag>理塘</tag>
        <tag>丁真</tag>
        <tag>music</tag>
      </tags>
  </entry>
  <entry>
    <title>记录一次掉盘 群联PS3111-S11-13 + 长江CA7AG64A0A</title>
    <url>/2024/08/31/%E7%BE%A4%E8%81%94s11-YMTC%E6%8E%89%E7%9B%98%E4%BF%AE%E5%A4%8D/</url>
    <content><![CDATA[<h2 id="part-1"><a href="#part-1" class="headerlink" title="part 1"></a>part 1</h2><p>终于 7×24 运行的它掉盘了。</p>
<p><img src="https://s2.loli.net/2024/08/31/MldmFPkp3DZiNje.png" alt="Snipaste_2024-08-31_02-13-41.png"></p>
<p>型号：速柏 CS500 <strong>（89块钱480G要什么自行车）</strong></p>
<p>方案：群联PS3111-S11-13 + 长江CA7AG64A0A</p>
<p><img src="https://s2.loli.net/2024/08/31/ZHbiFhA3DzIUNg6.png" alt="Snipaste_2024-08-31_02-17-54.png"></p>
<h2 id="part2"><a href="#part2" class="headerlink" title="part2"></a>part2</h2><p>参考链接：</p>
<p><a href="https://www.itwk.cc/post/981.html">https://www.itwk.cc/post/981.html</a></p>
<p><a href="https://www.usbdev.ru/files/phison/ps3111fw/">https://www.usbdev.ru/files/phison/ps3111fw/</a></p>
<p><a href="http://vlo.name:3000/ssdtool/">http://vlo.name:3000/ssdtool/</a></p>
<p><a href="https://www.flashinfo.top/FlashInfo">https://www.flashinfo.top/FlashInfo</a></p>
<p><a href="https://download.saint1337.top/tools/ps3111-s11-13/">https://download.saint1337.top/tools/ps3111-s11-13/</a></p>
<p>使用 phison_flash_id 工具查看颗粒信息，获得NAND信息 <code>ONFI : YMTC  YMN08TB1W00U1B (2020-08) [A34D]</code>。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Phison S5/S8/S9/S10/S11 flash ID reader v0.844a by Ochkin Vadim</span><br><span class="line"> 0: (WDC WD40PURX-78AKYY0</span><br><span class="line"> 1: (TOSHIBA HDWD130</span><br><span class="line"> 2: (WDC WD10JPVX-22JC3T0</span><br><span class="line"> 3: (LITEON S960 256</span><br><span class="line"> 4: (GALAX TA1D0240A</span><br><span class="line"> 5: (SATAFIRM   S11</span><br><span class="line"> 6: (KINGBANK KP230 Pro</span><br><span class="line">Please select drive number:5</span><br><span class="line">Drive: 5(ATA)</span><br><span class="line">Model: SATAFIRM   S11</span><br><span class="line">Fw   : SBFMP1W3</span><br><span class="line">Size : 457862 MB</span><br><span class="line">Firmware lock supported [A9 00 01 02]</span><br><span class="line">Drive unlocked [A9 00 01 03]</span><br><span class="line">P/N  : 511-200804205   , SBSMP1.2</span><br><span class="line">S11fw: SBFMP1.3, 2020Feb26</span><br><span class="line">S11rv: MP1.3-72</span><br><span class="line">Original Model: CUBEX CS500 480GB</span><br><span class="line">Original Fw   : CSFMP1.3</span><br><span class="line">Bank00: 0x9b,0xc3,0x48,0x25,0x10,0x0,0x0,0x0 - YMTC 3dv2-64L(x1-9050) TLC 16k 256Gb/CE 256Gb/die 2Plane/die</span><br><span class="line">Bank01: 0x9b,0xc3,0x48,0x25,0x10,0x0,0x0,0x0 - YMTC 3dv2-64L(x1-9050) TLC 16k 256Gb/CE 256Gb/die 2Plane/die</span><br><span class="line">Bank02: 0x9b,0xc3,0x48,0x25,0x10,0x0,0x0,0x0 - YMTC 3dv2-64L(x1-9050) TLC 16k 256Gb/CE 256Gb/die 2Plane/die</span><br><span class="line">Bank03: 0x9b,0xc3,0x48,0x25,0x10,0x0,0x0,0x0 - YMTC 3dv2-64L(x1-9050) TLC 16k 256Gb/CE 256Gb/die 2Plane/die</span><br><span class="line">Bank04: 0x9b,0xc3,0x48,0x25,0x10,0x0,0x0,0x0 - YMTC 3dv2-64L(x1-9050) TLC 16k 256Gb/CE 256Gb/die 2Plane/die</span><br><span class="line">Bank05: 0x9b,0xc3,0x48,0x25,0x10,0x0,0x0,0x0 - YMTC 3dv2-64L(x1-9050) TLC 16k 256Gb/CE 256Gb/die 2Plane/die</span><br><span class="line">Bank06: 0x9b,0xc3,0x48,0x25,0x10,0x0,0x0,0x0 - YMTC 3dv2-64L(x1-9050) TLC 16k 256Gb/CE 256Gb/die 2Plane/die</span><br><span class="line">Bank07: 0x9b,0xc3,0x48,0x25,0x10,0x0,0x0,0x0 - YMTC 3dv2-64L(x1-9050) TLC 16k 256Gb/CE 256Gb/die 2Plane/die</span><br><span class="line">Bank08: 0x9b,0xc3,0x48,0x25,0x10,0x0,0x0,0x0 - YMTC 3dv2-64L(x1-9050) TLC 16k 256Gb/CE 256Gb/die 2Plane/die</span><br><span class="line">Bank09: 0x9b,0xc3,0x48,0x25,0x10,0x0,0x0,0x0 - YMTC 3dv2-64L(x1-9050) TLC 16k 256Gb/CE 256Gb/die 2Plane/die</span><br><span class="line">Bank10: 0x9b,0xc3,0x48,0x25,0x10,0x0,0x0,0x0 - YMTC 3dv2-64L(x1-9050) TLC 16k 256Gb/CE 256Gb/die 2Plane/die</span><br><span class="line">Bank11: 0x9b,0xc3,0x48,0x25,0x10,0x0,0x0,0x0 - YMTC 3dv2-64L(x1-9050) TLC 16k 256Gb/CE 256Gb/die 2Plane/die</span><br><span class="line">Bank12: 0x9b,0xc3,0x48,0x25,0x10,0x0,0x0,0x0 - YMTC 3dv2-64L(x1-9050) TLC 16k 256Gb/CE 256Gb/die 2Plane/die</span><br><span class="line">Bank13: 0x9b,0xc3,0x48,0x25,0x10,0x0,0x0,0x0 - YMTC 3dv2-64L(x1-9050) TLC 16k 256Gb/CE 256Gb/die 2Plane/die</span><br><span class="line">Bank14: 0x9b,0xc3,0x48,0x25,0x10,0x0,0x0,0x0 - YMTC 3dv2-64L(x1-9050) TLC 16k 256Gb/CE 256Gb/die 2Plane/die</span><br><span class="line">Bank15: 0x9b,0xc3,0x48,0x25,0x10,0x0,0x0,0x0 - YMTC 3dv2-64L(x1-9050) TLC 16k 256Gb/CE 256Gb/die 2Plane/die</span><br><span class="line">Controller    : PS3111</span><br><span class="line">Flash CE      : 16</span><br><span class="line">Flash Channel : 2</span><br><span class="line">DRAM Size,MB  : 32</span><br><span class="line">Flash CE Mask : [++++++++ ++++++++]</span><br><span class="line">Flash Mode/Clk: 5/7 (Set 5/7)</span><br><span class="line">SLC Cache     : 786432(0xc0000)</span><br><span class="line"></span><br><span class="line">Try to read nand parameter page...</span><br><span class="line">ONFI      : YMTC         YMN08TB1W00U1B (2020-08) [A34D]</span><br><span class="line">Page size : 18432 (16384+2048)</span><br><span class="line">Page/Block: 1152</span><br><span class="line">Block/LUN : 2012</span><br><span class="line">LUN/Chip  : 1</span><br><span class="line">Bit/Cell  : 3 (TLC)</span><br><span class="line">Endurance : 500</span><br><span class="line">PlanAdrBit: 1 (2 plane)</span><br><span class="line"></span><br><span class="line">MaxBBPerPlane : 92</span><br><span class="line">Plane         : 2</span><br><span class="line"></span><br><span class="line">Defects All(per plane)  Early           Later</span><br><span class="line">Bank00:   7(3,4)          7(3,4)          0(0,0)</span><br><span class="line">Bank01:  14(6,8)         14(6,8)          0(0,0)</span><br><span class="line">Bank02:  13(6,7)         13(6,7)          0(0,0)</span><br><span class="line">Bank03:   9(3,6)          9(3,6)          0(0,0)</span><br><span class="line">Bank04:   6(2,4)          6(2,4)          0(0,0)</span><br><span class="line">Bank05:   5(2,3)          5(2,3)          0(0,0)</span><br><span class="line">Bank06:   7(2,5)          7(2,5)          0(0,0)</span><br><span class="line">Bank07:   5(3,2)          5(3,2)          0(0,0)</span><br><span class="line">Bank08:  13(4,9)         13(4,9)          0(0,0)</span><br><span class="line">Bank09:   6(3,3)          6(3,3)          0(0,0)</span><br><span class="line">Bank10:   7(3,4)          7(3,4)          0(0,0)</span><br><span class="line">Bank11:   4(2,2)          4(2,2)          0(0,0)</span><br><span class="line">Bank12:   8(4,4)          8(4,4)          0(0,0)</span><br><span class="line">Bank13:   7(5,2)          7(5,2)          0(0,0)</span><br><span class="line">Bank14:   5(2,3)          5(2,3)          0(0,0)</span><br><span class="line">Bank15:   6(4,2)          6(4,2)          0(0,0)</span><br><span class="line">Total : 122             122               0</span><br><span class="line"></span><br><span class="line">Read EC..</span><br><span class="line">Saved to: phison_flash_id.txt</span><br><span class="line"></span><br><span class="line">Press any key to exit or Space to open full text report</span><br><span class="line">Please share reports as text, not a sreenshot!</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>搜索信息找到帖子 <a href="https://www.itwk.cc/post/981.html">https://www.itwk.cc/post/981.html</a> 并下载<a href="https://download.saint1337.top/tools/ps3111-s11-13/%E3%80%82">https://download.saint1337.top/tools/ps3111-s11-13/。</a></p>
<p>工具是傻瓜式操作，断电状态接上硬盘运行<code>Reinitial_SBFMP1B3_V6.exe</code>即可。</p>
<p>操作成功后可以看到固件从 <code>SBFMP1W3</code> 变成了 <code>SBFMP1B3</code>。</p>
<p><img src="https://s2.loli.net/2024/08/31/qIhup3XHL2GcwjJ.png" alt="Snipaste_2024-08-26_16-28-41.png"></p>
]]></content>
  </entry>
  <entry>
    <title>胡锡进笑话一则——老胡论安检</title>
    <url>/2024/06/18/%E8%83%A1%E9%94%A1%E8%BF%9B%E7%AC%91%E8%AF%9D2024-06-18/</url>
    <content><![CDATA[<p><img src="https://s2.loli.net/2024/06/18/Iq4lGRszJ7Le3jn.png" alt="ScreenShot Tool -20240618085004.png"></p>
<p>源链接位置：<a href="https://weibo.com/7217947278/OixgbndYl">https://weibo.com/7217947278/OixgbndYl</a></p>
<p><img src="https://s2.loli.net/2024/06/18/8OB1veZos7SRdmE.jpg" alt="007StLOuly1hqlovgfk7aj30zu227tum.jpg"></p>
<p><img src="https://s2.loli.net/2024/06/18/NLdEhi2pW59xAcu.jpg" alt="007StLOuly1hqlovguke4j30ok1fhtjf.jpg"></p>
<p><img src="https://s2.loli.net/2024/06/18/dgxl4vHOKSf5iJI.jpg" alt="007StLOuly1hqlovh3nvkj30fy0m2jtd.jpg"></p>
]]></content>
  </entry>
  <entry>
    <title>观看大学生操作电脑</title>
    <url>/2023/05/31/%E8%A7%82%E7%9C%8B%E5%A4%A7%E5%AD%A6%E7%94%9F%E6%93%8D%E4%BD%9C%E7%94%B5%E8%84%91/</url>
    <content><![CDATA[<blockquote>
<p>作者: 卡戎</p>
</blockquote>
<blockquote>
<p>链接: <a href="https://www.zhihu.com/question/267172350/answer/2255458975">https://www.zhihu.com/question/267172350/answer/2255458975</a></p>
</blockquote>
<blockquote>
<p>来源: 知乎</p>
</blockquote>
<p>你已经死了，这里是地狱！</p>
<p>因为你生前总是对着一堆没品笑话哈哈大笑，所以我们决定对你实施最严厉的酷刑！</p>
<p>——观看大学生操作电脑！</p>
<p>看吧！他在使用Excel，但是他不会用任何一个快捷键！哦天哪他的Ctrl键甚至是全新的……他连自动填充和方向键都不用！从1到100都是手打的！</p>
<p>他输入中文的时候只用两根食指！每输入完一个词，他都用鼠标去点候选词！他一分钟打20个字！</p>
<p>他想要居中标题，在标题前面打了一连串的空格！直到标题看起来在中间的位置了！</p>
<p>他直接在百度上搜“爱奇艺下载”了！他点进了华军软件园了！他点了那个最大的“高速下载”！他直接运行了p2p下载器！他没有取消任何一个勾选的捆绑程序，直接点了下一步！他的桌面上多了4个，不，5个，不，6个图标！</p>
<p>他的表格做好了，噢他直接保存到wps云端了！他不知道如何把这份表格发给他的上司！他点了分享按钮，给他的上司发了一个金山文档链接！这份表格在云端查看的时候彻底乱码了！</p>
<p>他正在下载破解版游戏，他得到了一个压缩包！噢他没有解压缩，直接在压缩软件里点开了game.exe！游戏报错了！</p>
<p>他安装了一个游戏！他把game.exe直接剪切到了桌面！点开之后又报错了！</p>
<p>他希望把室友电脑里的游戏拷贝到自己电脑里！他把桌面上的快捷方式直接拖到了自己的U盘里！插回自己电脑运行的时候又报错了！</p>
<p>他打开文件的方式是鼠标左键疯狂连点！他至少点了10次！天哪现在桌面上的弹窗都堆不下了！</p>
<p>他把”Doc1.docx”直接重命名成了”实验报告”！他连后缀名都删干净了！现在他再也找不到打开这份文档的方法了！</p>
<p>他在微信上收到了一个文件，他需要把这个文件用邮箱发出去。噢他完全不知道该怎么操作！他在收件人这一栏输入了上司的手机号！他完全不知道如何添加附件！他也完全不知道微信文件保存到哪里了！他对着微信消息按右键复制，然后把文件名粘贴到了正文栏！</p>
<p>他需要下载一个腾讯视频！他在视频网页点击了“下载”，浏览器开始下载腾讯视频客户端了！他开始安装了！他在客户端里下载了一个.qlv格式的文件！他直接把这个文件发给别人了！</p>
<p>感受痛苦吧！你甚至没法教会他们！</p>
]]></content>
  </entry>
  <entry>
    <title>优麒麟版微信修改/etc/lsb-release后识别错误问题</title>
    <url>/2023/11/06/%E8%A7%A3%E5%86%B3%E4%BC%98%E9%BA%92%E9%BA%9F%E7%89%88%E5%BE%AE%E4%BF%A1%E4%BF%AE%E6%94%B9%E2%81%84etc%E2%81%84lsb-release%E7%9A%84%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h2 id="问题发现"><a href="#问题发现" class="headerlink" title="问题发现"></a>问题发现</h2><p>使用 <a href="https://tabby.sh/">tabby</a> 官方提供的 Debian repo 时 发现识别系统为 Kylin 导致无法使用脚本添加 repo</p>
<p>查看脚本信息发现检测的文件为 <code>/etc/lsb-release</code> </p>
<p><img src="https://s2.loli.net/2023/11/06/jFpxWTIfl6gtmQ5.png" alt="Screenshot_20231106_094050.png"></p>
<h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><p>一番检索后找到了这个帖子 <a href="https://v2ex.com/t/906470">https://v2ex.com/t/906470</a> 发现应该是优麒麟版微信在 <code>/etc</code> 里面拉屎 <del>张小龙你吗死了</del></p>
<p>添加 repo 的脚本内容先检测是否存在 <code>/etc/lsb-release</code> 再查看二进制文件 <code>lsb_release</code> 所以识别到的系统是 <code>Kylin</code></p>
<p><img src="https://s2.loli.net/2023/11/06/o4MYQ3CG6WXNzV5.png" alt="Screenshot_20231106_104227.png"></p>
<p>查看原版 Debian 使用的的是 <code>lsb_release</code> 所以我们可以直接删除 <code>/etc/lsb-release</code> 这个文件 或者手动修改 <code>/etc/lsb-release</code> </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DISTRIB_ID=Debian</span><br><span class="line">DISTRIB_RELEASE=n/a</span><br><span class="line">DISTRIB_CODENAME=trixie</span><br><span class="line">DISTRIB_DESCRIPTION=&quot;Debian GNU/Linux trixie/sid&quot;</span><br></pre></td></tr></table></figure>

<p>现在重新运行脚本</p>
<p><img src="https://s2.loli.net/2023/11/06/mW4Ol9uNDLJdtzn.png" alt="Screenshot_20231106_095703.png"></p>
<p>成功！</p>
]]></content>
  </entry>
  <entry>
    <title>设置Debian不自动启动新安装的服务</title>
    <url>/2024/09/29/%E8%AE%BE%E7%BD%AEDebian%E4%B8%8D%E8%87%AA%E5%8A%A8%E5%90%AF%E5%8A%A8%E6%96%B0%E5%AE%89%E8%A3%85%E7%9A%84%E6%9C%8D%E5%8A%A1/</url>
    <content><![CDATA[<h2 id="设置方法"><a href="#设置方法" class="headerlink" title="设置方法"></a>设置方法</h2><ul>
<li>root用户</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="built_in">exit</span> 101 &gt; /usr/sbin/policy-rc.d</span><br><span class="line"><span class="built_in">chmod</span> +x /usr/sbin/policy-rc.d</span><br></pre></td></tr></table></figure>

<ul>
<li>其他有sudo权限的用户</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="built_in">exit</span> 101 | sudo <span class="built_in">tee</span> /usr/sbin/policy-rc.d</span><br><span class="line">sudo <span class="built_in">chmod</span> +x /usr/sbin/policy-rc.d</span><br></pre></td></tr></table></figure>

<ul>
<li>以安装vsftpd为例</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@myLaptop:~<span class="comment"># echo exit 101 &gt; /usr/sbin/policy-rc.d</span></span><br><span class="line"><span class="built_in">chmod</span> +x /usr/sbin/policy-rc.d</span><br><span class="line">root@myLaptop:~<span class="comment"># apt install vsftpd</span></span><br><span class="line"></span><br><span class="line">将要安装：</span><br><span class="line">  vsftpd</span><br><span class="line"></span><br><span class="line">摘要：</span><br><span class="line">  升级：0，安装：1，卸载：0，不升级：9</span><br><span class="line">  下载大小：142 kB</span><br><span class="line">  所需的空间：352 kB / 131 GB 可用</span><br><span class="line"></span><br><span class="line">获取:1 https://mirrors.tuna.tsinghua.edu.cn/debian sid/main amd64 vsftpd amd64 3.0.3-13.1 [142 kB]</span><br><span class="line">已下载 142 kB，耗时 0秒 (289 kB/s)</span><br><span class="line">正在预设定软件包 ...</span><br><span class="line">正在选中未选择的软件包 vsftpd。</span><br><span class="line">(正在读取数据库 ... 系统当前共安装有 799342 个文件和目录。)</span><br><span class="line">准备解压 .../vsftpd_3.0.3-13.1_amd64.deb  ...</span><br><span class="line">正在解压 vsftpd (3.0.3-13.1) ...</span><br><span class="line">正在设置 vsftpd (3.0.3-13.1) ...</span><br><span class="line">Created symlink <span class="string">&#x27;/etc/systemd/system/multi-user.target.wants/vsftpd.service&#x27;</span> → <span class="string">&#x27;</span></span><br><span class="line"><span class="string">/usr/lib/systemd/system/vsftpd.service&#x27;</span>.</span><br><span class="line">/usr/lib/tmpfiles.d/vsftpd.conf:1: Line references path below legacy directory /</span><br><span class="line">var/run/, updating /var/run/vsftpd/empty → /run/vsftpd/empty; please update the </span><br><span class="line">tmpfiles.d/ drop-in file accordingly.</span><br><span class="line">invoke-rc.d: policy-rc.d denied execution of start.</span><br><span class="line">正在处理用于 man-db (2.13.0-1) 的触发器 ...</span><br><span class="line">Scanning processes...                                                           </span><br><span class="line">Scanning candidates...                                                          </span><br><span class="line">Scanning processor microcode...                                                 </span><br><span class="line">Scanning linux images...                                                        </span><br><span class="line"></span><br><span class="line">Running kernel seems to be up-to-date.</span><br><span class="line"></span><br><span class="line">The processor microcode seems to be up-to-date.</span><br><span class="line"></span><br><span class="line">Restarting services...</span><br><span class="line">Service restarts being deferred:</span><br><span class="line"> systemctl restart sddm.service</span><br><span class="line"></span><br><span class="line">No containers need to be restarted.</span><br><span class="line"></span><br><span class="line">User sessions running outdated binaries:</span><br><span class="line"> duzhuo @ session <span class="comment">#3: cinnamon-launch[6978]</span></span><br><span class="line"></span><br><span class="line">No VM guests are running outdated hypervisor (qemu) binaries on this host.</span><br><span class="line">root@myLaptop:~<span class="comment"># systemctl status vsftpd</span></span><br><span class="line">○ vsftpd.service - vsftpd FTP server</span><br><span class="line">     Loaded: loaded (/usr/lib/systemd/system/vsftpd.service; enabled; preset: e&gt;</span><br><span class="line">     Active: inactive (dead)</span><br></pre></td></tr></table></figure>

<h2 id="相关阅读"><a href="#相关阅读" class="headerlink" title="相关阅读"></a>相关阅读</h2><p><a href="https://jpetazzo.github.io/2013/10/06/policy-rc-d-do-not-start-services-automatically/">~jpetazzo&#x2F;Use policy-rc.d to prevent services from starting automatically</a></p>
<p><a href="https://www.debian.org/doc/debian-policy/ch-opersys.html#s-services-intro">debian-policy&#x2F;starting-system-services</a></p>
]]></content>
  </entry>
  <entry>
    <title>AI笑话之猴子有枪</title>
    <url>/2025/03/01/AI%E7%AC%91%E8%AF%9D%E4%B9%8B%E7%8C%B4%E5%AD%90%E6%9C%89%E6%9E%AA/</url>
    <content><![CDATA[<p><img src="https://images.duzhuo.icu/2025-03/2025-03-01-09:48:14-a3e8e9a00733c475.webp"></p>
<span id="more"></span>
]]></content>
  </entry>
  <entry>
    <title>csgo练习服务器</title>
    <url>/csgo-server.html</url>
    <content><![CDATA[<h1 id="CSGO练习服务器"><a href="#CSGO练习服务器" class="headerlink" title="CSGO练习服务器"></a>CSGO练习服务器</h1><h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><ul>
<li><strong>20220528</strong> 更新最新贴纸 包括2022 安普卫特major</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting/img/20211212233026_1.jpg"></p>
<h2 id="如何连接服务器"><a href="#如何连接服务器" class="headerlink" title="如何连接服务器"></a>如何连接服务器</h2><ul>
<li><a href="steam://connect/csgo.saint1337.top">启动csgo并连接练习服务器</a></li>
</ul>
<p>​       <strong>控制台输入:</strong> <code>connect csgo.saint1337.top</code></p>
<ul>
<li><a href="ts3server://ts3.saint1337.top/">启动teamspeak并连接服务器</a></li>
</ul>
<p>​       <strong>teamspeak服务器连接地址:</strong> <code>ts3.saint1337.top</code></p>
<h2 id="服务器有的功能"><a href="#服务器有的功能" class="headerlink" title="服务器有的功能"></a>服务器有的功能</h2><ul>
<li><p><strong>跑图插件  默认自动开启</strong></p>
<p><a href="https://duzhuoshanwai.github.io/2022/02/18/csgo-practice-mode%20%E6%96%87%E6%A1%A3/">推荐参考文档1</a></p>
<p><a href="https://duzhuoshanwai.github.io/2022/02/18/simple-practicemode%20%E6%96%87%E6%A1%A3/">推荐参考文档2</a></p>
<p><a href="https://github.com/splewis/csgo-practice-mode">https://github.com/splewis/csgo-practice-mode</a></p>
<p><a href="https://github.com/hx-w/simple-practicemode">https://github.com/hx-w/simple-practicemode</a></p>
</li>
<li><p><strong>学习道具插件</strong>  <strong><del>时不时会抽风</del></strong></p>
</li>
</ul>
<p>​       <a href="https://docs.csgowiki.top/csgowiki-pack/index/#csgowiki-pack">https://docs.csgowiki.top/csgowiki-pack/index/#csgowiki-pack</a></p>
<p>​       <a href="https://www.mycsgolab.com/![](https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting/img/20220218164354.png)">https://www.mycsgolab.com/![](https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting/img/20220218164354.png)</a></p>
<ul>
<li><p><strong>皮肤手套插件</strong></p>
<p><code>!ws</code> <code>!knife</code> <code>!gloves</code></p>
<p>我是懒狗 插件更新不及时很正常8</p>
</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>teamspeak教程</title>
    <url>/teamspeak.html</url>
    <content><![CDATA[<h1 id="teamspeak3-教程-汉化-偷懒整理的链接"><a href="#teamspeak3-教程-汉化-偷懒整理的链接" class="headerlink" title="teamspeak3 教程+汉化 (偷懒整理的链接)"></a>teamspeak3 教程+汉化 (<del>偷懒整理的链接</del>)</h1><h2 id="我的服务器地址"><a href="#我的服务器地址" class="headerlink" title="我的服务器地址"></a>我的服务器地址</h2><p><code>ts3.saint1337.top</code></p>
<p><a href="ts3server://ts3.saint1337.top/">点我一键加入服务器(确保已经正确安装客户端)</a></p>
<h2 id="官网下载链接"><a href="#官网下载链接" class="headerlink" title="官网下载链接"></a>官网下载链接</h2><p><a href="https://www.teamspeak.com/zh-CN/downloads/">https://www.teamspeak.com/zh-CN/downloads/</a></p>
<p><img src="https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting/img/20220219151012.png"></p>
<h2 id="整合包链接"><a href="#整合包链接" class="headerlink" title="整合包链接"></a>整合包链接</h2><p><a href="http://mtw.so/60CuQh">http://mtw.so/60CuQh</a> 访问密码:<code>woshishabi</code></p>
<h2 id="汉化插件链接"><a href="#汉化插件链接" class="headerlink" title="汉化插件链接"></a>汉化插件链接</h2><ul>
<li><a href="https://www.wevg.org/">Vigorous Pro</a>提供的中文语言包</li>
</ul>
<p><a href="https://ts.wevg.org/translation-zh-CN/">https://ts.wevg.org/translation-zh-CN/</a></p>
<p><img src="https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting/img/20220219153410.png"></p>
<ul>
<li><a href="https://blog.acesheep.com/index.php/archives/1242/">AceSheep</a>提供的中文语言包 (我现在用的)</li>
</ul>
<p><a href="https://blog.acesheep.com/index.php/archives/1242/">https://blog.acesheep.com/index.php/archives/1242/</a></p>
<p><img src="https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting/img/20220219154502.png"></p>
<h2 id="使用教程"><a href="#使用教程" class="headerlink" title="使用教程"></a>使用教程</h2><ul>
<li><a href="https://www.wevg.org/">Vigorous Pro</a>给的教程很全面 推荐参考</li>
</ul>
<p>​       <a href="https://www.wevg.org/archives/how-to-use-teamspeak3/">https://www.wevg.org/archives/how-to-use-teamspeak3/</a></p>
<ul>
<li><p><strong>不要使用Overwolf 会有性能问题</strong></p>
</li>
<li><p><strong>myTeamSpeak登录会有网路问题 推荐使用本地身份保存信息</strong></p>
</li>
</ul>
<h3 id="1-工具–身份"><a href="#1-工具–身份" class="headerlink" title="1.工具–身份"></a>1.工具–身份</h3><p>  <img src="https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting/img/20220219160026.png"></p>
<h3 id="2-右键你想要导出的身份-右键空白也可以创建身份-重命名后保存"><a href="#2-右键你想要导出的身份-右键空白也可以创建身份-重命名后保存" class="headerlink" title="2.右键你想要导出的身份(右键空白也可以创建身份) 重命名后保存"></a>2.右键你想要导出的身份(右键空白也可以创建身份) 重命名后保存</h3><p><img src="https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting/img/20220219155624.png"></p>
<p><img src="https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting/img/20220219155643.png"></p>
<h3 id="3-命名导出的ini配置文件并保存好"><a href="#3-命名导出的ini配置文件并保存好" class="headerlink" title="3.命名导出的ini配置文件并保存好"></a>3.命名导出的ini配置文件并保存好</h3><p><img src="https://cdn.jsdelivr.net/gh/duzhuoshanwai/Image-Hosting/img/20220219155941.png"></p>
<h2 id="其他功能请自行探索-使用愉快-以上"><a href="#其他功能请自行探索-使用愉快-以上" class="headerlink" title="其他功能请自行探索 使用愉快 以上"></a>其他功能请自行探索 使用愉快 以上</h2>]]></content>
  </entry>
  <entry>
    <title>test</title>
    <url>/test-mmedia.html</url>
    <content><![CDATA[<div id="mmedia-UZVhZksczRtwMHPV" style="width:100%;height:650px;max-width:1200px;center"></div><script> var UZVhZksczRtwMHPV_options = JSON.parse('{\"style\":\"width:100%;height:650px;max-width:1200px;center\",\"autoSize\":true,\"autoMini\":false,\"fullscreen\":true,\"fullscreenWeb\":true,\"url\":\"https://dlink.host/sharepoint/aHR0cHM6Ly9zYWludDEzMzctbXkuc2hhcmVwb2ludC5jb20vOnY6L2cvcGVyc29uYWwvZHV6aHVvX3NhaW50MTMzN19vbm1pY3Jvc29mdF9jb20vRVh0bENJeVljRTlJcTd4cGFfNzBEaThCWGFwRkZVRnJ5WXVVSGxXUzlxcW02dz9lPXliVjBoRQ.mp4\"}'); UZVhZksczRtwMHPV_options.container = "#mmedia-UZVhZksczRtwMHPV"; HEXO_MMEDIA_DATA.js.push("https://cdn.jsdelivr.net/npm/flv.js/dist/flv.min.js");HEXO_MMEDIA_DATA.js.push("https://cdn.jsdelivr.net/npm/artplayer/dist/artplayer.js");HEXO_MMEDIA_DATA.artPlayerData.push(UZVhZksczRtwMHPV_options); </script>]]></content>
  </entry>
  <entry>
    <title>categories</title>
    <url>/categories/index.html</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>tags</title>
    <url>/tags/index.html</url>
    <content><![CDATA[]]></content>
  </entry>
</search>
